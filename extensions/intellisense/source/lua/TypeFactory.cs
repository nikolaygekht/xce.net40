using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace gehtsoft.intellisense.lua
{
    internal partial class TypeFactory
    {
        public static LuaKeywordCollection CreateKeywords(string types)
        {
            LuaKeywordCollection coll = new LuaKeywordCollection();

            if (types.Contains("standart"))
            {
                coll.Add(new LuaKeyword("and"));
                coll.Add(new LuaKeyword("break"));
                coll.Add(new LuaKeyword("do"));
                coll.Add(new LuaKeyword("else"));
                coll.Add(new LuaKeyword("elseif"));
                coll.Add(new LuaKeyword("end"));
                coll.Add(new LuaKeyword("false"));
                coll.Add(new LuaKeyword("for"));
                coll.Add(new LuaKeyword("function"));
                coll.Add(new LuaKeyword("if"));
                coll.Add(new LuaKeyword("in"));
                coll.Add(new LuaKeyword("local"));
                coll.Add(new LuaKeyword("nil"));
                coll.Add(new LuaKeyword("not"));
                coll.Add(new LuaKeyword("or"));
                coll.Add(new LuaKeyword("repeat"));
                coll.Add(new LuaKeyword("return"));
                coll.Add(new LuaKeyword("then"));
                coll.Add(new LuaKeyword("true"));
                coll.Add(new LuaKeyword("until"));
                coll.Add(new LuaKeyword("while"));
                coll.Add(new LuaKeyword("_G", true));
                coll.Add(new LuaKeyword("coroutine", true));
                coll.Add(new LuaKeyword("string", true));
                coll.Add(new LuaKeyword("file", true));
                coll.Add(new LuaKeyword("table", true));
                coll.Add(new LuaKeyword("math", true));
                coll.Add(new LuaKeyword("io", true));
                coll.Add(new LuaKeyword("os", true));
                coll.Add(new LuaKeyword("debug", true));
            }
            if (types.Contains("indicore"))
            {
                coll.Add(new LuaKeyword("core", true));
                coll.Add(new LuaKeyword("math2d", true));
                coll.Add(new LuaKeyword("indicator", true));
                coll.Add(new LuaKeyword("strategy", true));
                coll.Add(new LuaKeyword("instance", true));
                coll.Add(new LuaKeyword("mathex", true));
                coll.Add(new LuaKeyword("context", true));
                coll.Add(new LuaKeyword("win32", true));
                coll.Add(new LuaKeyword("ownerdraw_points", true));
            }
            return coll;
        }

        public static LuaPropertyDictionary CreateProperties(string types)
        {
            LuaPropertyDictionary coll = new LuaPropertyDictionary();
            if (types.Contains("standart"))
            {
                coll.Add(new LuaProperty(null, true, "assert", "(v [, message])"));
                coll.Add(new LuaProperty(null, true, "dofile", "([filename])"));
                coll.Add(new LuaProperty(null, true, "error", "(message [, level])"));
                coll.Add(new LuaProperty(null, true, "getfenv", "([f])"));
                coll.Add(new LuaProperty(null, true, "getmetatable", "(object)"));
                coll.Add(new LuaProperty(null, true, "ipairs", "(t)"));
                coll.Add(new LuaProperty(null, true, "load", "(func [, chunkname])"));
                coll.Add(new LuaProperty(null, true, "loadfile", "([filename])"));
                coll.Add(new LuaProperty(null, true, "loadstring", "(string [, chunkname])"));
                coll.Add(new LuaProperty(null, true, "next", "(table [, index])"));
                coll.Add(new LuaProperty(null, true, "pairs", "(t)"));
                coll.Add(new LuaProperty(null, true, "pcall", "(f, arg1, ...)"));
                coll.Add(new LuaProperty(null, true, "print", "(...)"));
                coll.Add(new LuaProperty(null, true, "rawequal", "(v1, v2)"));
                coll.Add(new LuaProperty(null, true, "rawget", "(table, index)"));
                coll.Add(new LuaProperty(null, true, "rawset", "(table, index, value)"));
                coll.Add(new LuaProperty(null, true, "select", "(index, ...)"));
                coll.Add(new LuaProperty(null, true, "setfenv", "(f, table)"));
                coll.Add(new LuaProperty(null, true, "setmetatable", "(table, metatable)"));
                coll.Add(new LuaProperty(null, true, "tonumber", "(e [, base])"));
                coll.Add(new LuaProperty(null, true, "tostring", "(e)"));
                coll.Add(new LuaProperty(null, true, "type", "(v)"));
                coll.Add(new LuaProperty(null, true, "unpack", "(list [, i [, j]])"));
                coll.Add(new LuaProperty(null, true, "xpcall", "(f, err)"));
                coll.Add(new LuaProperty("coroutine", true, "create", "(f)"));
                coll.Add(new LuaProperty("coroutine", true, "resume", "(co [, val1, ...])"));
                coll.Add(new LuaProperty("coroutine", true, "running", "()"));
                coll.Add(new LuaProperty("coroutine", true, "status", "(co)"));
                coll.Add(new LuaProperty("coroutine", true, "wrap", "(f)"));
                coll.Add(new LuaProperty("coroutine", true, "yield", "(...)"));
                coll.Add(new LuaProperty(null, true, "module", "(name [, ...])"));
                coll.Add(new LuaProperty(null, true, "require", "(modname)"));
                coll.Add(new LuaProperty("package", "cpath"));
                coll.Add(new LuaProperty("package", "loaded"));
                coll.Add(new LuaProperty("package", "loaders"));
                coll.Add(new LuaProperty("package", true, "loadlib", "(libname, funcname)"));
                coll.Add(new LuaProperty("package", "path"));
                coll.Add(new LuaProperty("package", "preload"));
                coll.Add(new LuaProperty("package", true, "seeall", "(module)"));
                coll.Add(new LuaProperty("string", true, "byte", "(s [, i [, j]])"));
                coll.Add(new LuaProperty("string", true, "char", "(...)"));
                coll.Add(new LuaProperty("string", true, "dump", "(function)"));
                coll.Add(new LuaProperty("string", true, "find", "(s, pattern [, init [, plain]])"));
                coll.Add(new LuaProperty("string", true, "format", "(formatstring, ...)"));
                coll.Add(new LuaProperty("string", true, "gmatch", "(s, pattern)"));
                coll.Add(new LuaProperty("string", true, "gsub", "(s, pattern, repl [, n])"));
                coll.Add(new LuaProperty("string", true, "len", "(s)"));
                coll.Add(new LuaProperty("string", true, "lower", "(s)"));
                coll.Add(new LuaProperty("string", true, "match", "(s, pattern [, init])"));
                coll.Add(new LuaProperty("string", true, "rep", "(s, n)"));
                coll.Add(new LuaProperty("string", true, "reverse", "(s)"));
                coll.Add(new LuaProperty("string", true, "sub", "(s, i [, j])"));
                coll.Add(new LuaProperty("string", true, "upper", "(s)"));
                coll.Add(new LuaProperty("table", true, "concat", "(table [, sep [, i [, j]]])"));
                coll.Add(new LuaProperty("table", true, "insert", "(table, [pos,] value)"));
                coll.Add(new LuaProperty("table", true, "maxn", "(table)"));
                coll.Add(new LuaProperty("table", true, "remove", "(table [, pos])"));
                coll.Add(new LuaProperty("table", true, "sort", "(table [, comp])"));
                coll.Add(new LuaProperty("math", true, "abs", "(x)"));
                coll.Add(new LuaProperty("math", true, "acos", "(x)"));
                coll.Add(new LuaProperty("math", true, "asin", "(x)"));
                coll.Add(new LuaProperty("math", true, "atan", "(x)"));
                coll.Add(new LuaProperty("math", true, "atan2", "(y, x)"));
                coll.Add(new LuaProperty("math", true, "ceil", "(x)"));
                coll.Add(new LuaProperty("math", true, "cos", "(x)"));
                coll.Add(new LuaProperty("math", true, "cosh", "(x)"));
                coll.Add(new LuaProperty("math", true, "deg", "(x)"));
                coll.Add(new LuaProperty("math", true, "exp", "(x)"));
                coll.Add(new LuaProperty("math", true, "floor", "(x)"));
                coll.Add(new LuaProperty("math", true, "fmod", "(x, y)"));
                coll.Add(new LuaProperty("math", true, "frexp", "(x)"));
                coll.Add(new LuaProperty("math", "huge"));
                coll.Add(new LuaProperty("math", true, "ldexp", "(m, e)"));
                coll.Add(new LuaProperty("math", true, "log", "(x)"));
                coll.Add(new LuaProperty("math", true, "log10", "(x)"));
                coll.Add(new LuaProperty("math", true, "max", "(x, ...)"));
                coll.Add(new LuaProperty("math", true, "min", "(x, ...)"));
                coll.Add(new LuaProperty("math", true, "modf", "(x)"));
                coll.Add(new LuaProperty("math", "pi"));
                coll.Add(new LuaProperty("math", true, "pow", "(x, y)"));
                coll.Add(new LuaProperty("math", true, "rad", "(x)"));
                coll.Add(new LuaProperty("math", true, "random", "([m [, n]])"));
                coll.Add(new LuaProperty("math", true, "randomseed", "(x)"));
                coll.Add(new LuaProperty("math", true, "sin", "(x)"));
                coll.Add(new LuaProperty("math", true, "sinh", "(x)"));
                coll.Add(new LuaProperty("math", true, "sqrt", "(x)"));
                coll.Add(new LuaProperty("math", true, "tan", "(x)"));
                coll.Add(new LuaProperty("math", true, "tanh", "(x)"));
                coll.Add(new LuaProperty("io", true, "close", "([file])"));
                coll.Add(new LuaProperty("io", true, "flush", "()"));
                coll.Add(new LuaProperty("io", true, "input", "([file])"));
                coll.Add(new LuaProperty("io", true, "lines", "([filename])"));
                coll.Add(new LuaProperty("io", true, "open", "(filename [, mode])"));
                coll.Add(new LuaProperty("io", true, "output", "([file])"));
                coll.Add(new LuaProperty("io", true, "popen", "(prog [, mode])"));
                coll.Add(new LuaProperty("io", true, "read", "(...)"));
                coll.Add(new LuaProperty("io", true, "tmpfile", "()"));
                coll.Add(new LuaProperty("io", true, "type", "(obj)"));
                coll.Add(new LuaProperty("io", true, "write", "(...)"));
                coll.Add(new LuaProperty("file", false, "close", "()"));
                coll.Add(new LuaProperty("file", false, "flush", "()"));
                coll.Add(new LuaProperty("file", false, "lines", "()"));
                coll.Add(new LuaProperty("file", false, "read", "(...)"));
                coll.Add(new LuaProperty("file", false, "seek", "([whence] [, offset])"));
                coll.Add(new LuaProperty("file", false, "setvbuf", "(mode [, size])"));
                coll.Add(new LuaProperty("file", false, "write", "(...)"));
                coll.Add(new LuaProperty("os", true, "clock", "()"));
                coll.Add(new LuaProperty("os", true, "date", "([format [, time]])"));
                coll.Add(new LuaProperty("os", true, "difftime", "(t2, t1)"));
                coll.Add(new LuaProperty("os", true, "execute", "([command])"));
                coll.Add(new LuaProperty("os", true, "exit", "([code])"));
                coll.Add(new LuaProperty("os", true, "getenv", "(varname)"));
                coll.Add(new LuaProperty("os", true, "remove", "(filename)"));
                coll.Add(new LuaProperty("os", true, "rename", "(oldname, newname)"));
                coll.Add(new LuaProperty("os", true, "setlocale", "(locale [, category])"));
                coll.Add(new LuaProperty("os", true, "time", "([table])"));
                coll.Add(new LuaProperty("os", true, "tmpname", "()"));
                coll.Add(new LuaProperty("debug", true, "debug", "()"));
                coll.Add(new LuaProperty("debug", true, "getfenv", "(o)"));
                coll.Add(new LuaProperty("debug", true, "gethook", "([thread])"));
                coll.Add(new LuaProperty("debug", true, "getinfo", "([thread,] function [, what])"));
                coll.Add(new LuaProperty("debug", true, "getlocal", "([thread,] level, local)"));
                coll.Add(new LuaProperty("debug", true, "getmetatable", "(object)"));
                coll.Add(new LuaProperty("debug", true, "getregistry", "()"));
                coll.Add(new LuaProperty("debug", true, "getupvalue", "(func, up)"));
                coll.Add(new LuaProperty("debug", true, "setfenv", "(object, table)"));
                coll.Add(new LuaProperty("debug", true, "sethook", "([thread,] hook, mask [, count])"));
                coll.Add(new LuaProperty("debug", true, "setlocal", "([thread,] level, local, value)"));
                coll.Add(new LuaProperty("debug", true, "setmetatable", "(object, table)"));
                coll.Add(new LuaProperty("debug", true, "setupvalue", "(func, up, value)"));
                coll.Add(new LuaProperty("debug", true, "traceback", "([thread,] [message [, level]])"));
            }
            if (types.Contains("indicore"))
            {
                coll.Add(new LuaProperty("core", true, "version", "()"));
                coll.Add(new LuaProperty("core", true, "requires", "(major, minor, exact)"));
                coll.Add(new LuaProperty("core", true, "range", "(from, to)"));
                coll.Add(new LuaProperty("core", true, "rangeTo", "(to, length)"));
                coll.Add(new LuaProperty("core", true, "rangeFrom", "(from, length)"));
                coll.Add(new LuaProperty("core", true, "crossesOver", "(stream1, stream2, period1, period2?)"));
                coll.Add(new LuaProperty("core", true, "crosses", "(stream1, stream2, period1, period2?)"));
                coll.Add(new LuaProperty("core", true, "crossesUnder", "(stream1, stream2, period1, period2?)"));
                coll.Add(new LuaProperty("core", true, "rgb", "(red, green, blue)"));
                coll.Add(new LuaProperty("core", true, "dateToTable", "(date)"));
                coll.Add(new LuaProperty("core", true, "tableToDate", "(date)"));
                coll.Add(new LuaProperty("core", true, "drawLine", "(output, range, value1, position1, value2, position2)"));
                coll.Add(new LuaProperty("core", true, "date", "(year, month, day)"));
                coll.Add(new LuaProperty("core", true, "datetime", "(year, month, day, hour, minute, second)"));
                coll.Add(new LuaProperty("core", true, "now", "()"));
                coll.Add(new LuaProperty("core", true, "getcandle", "(barSize, datetime, tradingDayOffset, tradingWeekOffset)"));
                coll.Add(new LuaProperty("core", true, "isnontrading", "(datetime, tradingDayOffset)"));
                coll.Add(new LuaProperty("core", "indicators"));
                coll.Add(new LuaProperty("core", true, "app_path", "()"));
                coll.Add(new LuaProperty("core", "host"));
                coll.Add(new LuaProperty("core", true, "makeHttpLoader", "()"));
                coll.Add(new LuaProperty("core", true, "colors", "()"));
                coll.Add(new LuaProperty("core", true, "valuemap", "()"));
                coll.Add(new LuaProperty("core", true, "findDate", "(stream, date, precise)"));
                coll.Add(new LuaProperty("core", true, "parseCsv", "(string, separator?)"));
                coll.Add(new LuaProperty("core", true, "autoBuffer", "(stream, first, extent, updateFunction, buffersCount?)"));
                coll.Add(new LuaProperty("core", true, "formatDate", "(date)"));
                coll.Add(new LuaProperty("http_loader", false, "load", "(host, port, object, async)"));
                coll.Add(new LuaProperty("http_loader", false, "successful", "()"));
                coll.Add(new LuaProperty("http_loader", false, "loading", "()"));
                coll.Add(new LuaProperty("http_loader", false, "cancel", "()"));
                coll.Add(new LuaProperty("http_loader", false, "response", "()"));
                coll.Add(new LuaProperty("array", false, "size", "()"));
                coll.Add(new LuaProperty("autobuffer", false, "update", "()"));
                coll.Add(new LuaProperty("autobuffer", "DATA"));
                coll.Add(new LuaProperty("storagedb", true, "get_db", "(name)"));
                coll.Add(new LuaProperty("db", false, "get", "(name, default?)"));
                coll.Add(new LuaProperty("db", false, "put", "(name, value)"));
                coll.Add(new LuaProperty("expat_lua", true, "parseDOM", "(xml)"));
                coll.Add(new LuaProperty("expat_lua", true, "parseSAX", "(xml, handler)"));
                coll.Add(new LuaProperty("expat_lua", true, "utf8_to_ansi", "(utf8)"));
                coll.Add(new LuaProperty("xmlhandler", false, "characters", "(data)"));
                coll.Add(new LuaProperty("xmlhandler", false, "comment", "(data)"));
                coll.Add(new LuaProperty("xmlhandler", false, "startElement", "(name, attributes)"));
                coll.Add(new LuaProperty("xmlhandler", false, "endElement", "(name)"));
                coll.Add(new LuaProperty("xmlhandler", false, "startCDATA", "()"));
                coll.Add(new LuaProperty("xmlhandler", true, "endCDATA", "()"));
                coll.Add(new LuaProperty("xmlhandler", true, "processingInstruction", "(target, data)"));
                coll.Add(new LuaProperty("xmlhandler", true, "startNamespace", "(prefix, uri)"));
                coll.Add(new LuaProperty("xmlhandler", true, "endNamespace", "(prefix)"));
                coll.Add(new LuaProperty("xmldocument", "root"));
                coll.Add(new LuaProperty("xmlelement", false, "attributesCount", "()"));
                coll.Add(new LuaProperty("xmlelement", false, "nodesCount", "()"));
                coll.Add(new LuaProperty("xmlelement", false, "elementsCount", "()"));
                coll.Add(new LuaProperty("xmlelement", false, "getAttribute", "(index)"));
                coll.Add(new LuaProperty("xmlelement", false, "findAttribute", "(name, namespace?)"));
                coll.Add(new LuaProperty("xmlelement", false, "getNode", "(index)"));
                coll.Add(new LuaProperty("xmlelement", false, "getElement", "(index)"));
                coll.Add(new LuaProperty("xmlelement", false, "text", "()"));
                coll.Add(new LuaProperty("xmlnode", false, "type", "()"));
                coll.Add(new LuaProperty("xmlnode", true, "namespaceURI", "()"));
                coll.Add(new LuaProperty("xmlnode", false, "name", "()"));
                coll.Add(new LuaProperty("xmlnode", false, "prefix", "()"));
                coll.Add(new LuaProperty("xmlnode", false, "fullName", "()"));
                coll.Add(new LuaProperty("xmlnode", false, "value", "()"));
                coll.Add(new LuaProperty("xmlnode", false, "hasNamespace", "()"));
                coll.Add(new LuaProperty("http_request", false, "loading", "()"));
                coll.Add(new LuaProperty("http_request", false, "success", "()"));
                coll.Add(new LuaProperty("http_request", false, "setAgent", "(agentName)"));
                coll.Add(new LuaProperty("http_request", false, "setRequestHeader", "(name, value)"));
                coll.Add(new LuaProperty("http_request", false, "start", "(url, method?, data?)"));
                coll.Add(new LuaProperty("http_request", false, "httpStatus", "()"));
                coll.Add(new LuaProperty("http_request", false, "response", "()"));
                coll.Add(new LuaProperty("http_request", false, "responseHeader", "(name, index?)"));
                coll.Add(new LuaProperty("http_request", false, "responseHeaders", "()"));
                coll.Add(new LuaProperty("http_request", false, "cancel", "()"));
                coll.Add(new LuaProperty("http_lua", true, "createRequest", "()"));
                coll.Add(new LuaProperty("http_lua", true, "md2", "(value)"));
                coll.Add(new LuaProperty("http_lua", true, "toHex", "(value)"));
                coll.Add(new LuaProperty("http_lua", true, "toBase64", "(value)"));
                coll.Add(new LuaProperty("http_lua", true, "fromBase64", "(value)"));
                coll.Add(new LuaProperty("regexp", false, "first", "(string)"));
                coll.Add(new LuaProperty("regexp", false, "next", "()"));
                coll.Add(new LuaProperty("regexp", false, "match_pos", "(index)"));
                coll.Add(new LuaProperty("regexp", false, "match_text", "(index)"));
                coll.Add(new LuaProperty("pcre_lua", true, "ismatch", "(expression, string, options?)"));
                coll.Add(new LuaProperty("pcre_lua", true, "compile", "(expression, options?)"));
                coll.Add(new LuaProperty("host", false, "version", "()"));
                coll.Add(new LuaProperty("host", false, "findTable", "(tableId)"));
                coll.Add(new LuaProperty("host", false, "trace", "(string)"));
                coll.Add(new LuaProperty("host", false, "execute", "(name, ...)"));
                coll.Add(new LuaProperty("indicator", false, "name", "(name)"));
                coll.Add(new LuaProperty("indicator", false, "description", "(description)"));
                coll.Add(new LuaProperty("indicator", false, "requiredSource", "(type)"));
                coll.Add(new LuaProperty("indicator", false, "type", "(type)"));
                coll.Add(new LuaProperty("indicator", "parameters"));
                coll.Add(new LuaProperty("indicator", false, "setTag", "(name, value)"));
                coll.Add(new LuaProperty("indicator", false, "path", "()"));
                coll.Add(new LuaProperty("parameters", false, "addInteger", "(id, name, description, defaultValue, minimalValue, maximalValue)"));
                coll.Add(new LuaProperty("parameters", false, "addDouble", "(id, name, description, defaultValue, minimalValue, maximalValue)"));
                coll.Add(new LuaProperty("parameters", false, "addBoolean", "(id, name, description, defaultValue)"));
                coll.Add(new LuaProperty("parameters", false, "addColor", "(id, name, description, defaultValue)"));
                coll.Add(new LuaProperty("parameters", false, "addString", "(id, name, description, defaultValue)"));
                coll.Add(new LuaProperty("parameters", false, "addIntegerAlternative", "(id, name, description, value)"));
                coll.Add(new LuaProperty("parameters", false, "addStringAlternative", "(id, name, description, value)"));
                coll.Add(new LuaProperty("parameters", false, "addFile", "(id, name, description, value)"));
                coll.Add(new LuaProperty("parameters", false, "addDate", "(id, name, description, value)"));
                coll.Add(new LuaProperty("parameters", false, "addGroup", "(name)"));
                coll.Add(new LuaProperty("parameters", false, "setFlag", "(id, flag)"));
                coll.Add(new LuaProperty("instance", "source"));
                coll.Add(new LuaProperty("instance", "parameters"));
                coll.Add(new LuaProperty("instance", false, "addStream", "(id, type, fullName, label, color, firstPeriod, extent)"));
                coll.Add(new LuaProperty("instance", false, "addInternalStream", "(firstPeriod, extent)"));
                coll.Add(new LuaProperty("instance", false, "createChannelGroup", "(label, id, first, second, color, alpha, mode?)"));
                coll.Add(new LuaProperty("instance", false, "createFromToBarGroup", "(label, id, first, second, color)"));
                coll.Add(new LuaProperty("instance", false, "createCandleGroup", "(label, id, open, high, low, close, volume?, barSize?, isBar?)"));
                coll.Add(new LuaProperty("instance", false, "createTextOutput", "(label, id, font, size, halign, valign, color, extent)"));
                coll.Add(new LuaProperty("instance", false, "references", "()"));
                coll.Add(new LuaProperty("instance", false, "updateFrom", "(period)"));
                coll.Add(new LuaProperty("instance", false, "addViewBar", "(date)"));
                coll.Add(new LuaProperty("instance", false, "ownerDrawn", "(ownerDrawnFlag)"));
                coll.Add(new LuaProperty("instance", false, "initView", "(instrument, precision, pointSize, isBid, isAlive)"));
                coll.Add(new LuaProperty("instance", false, "setLabelColor", "(color)"));
                coll.Add(new LuaProperty("mathex", true, "sum", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "avg", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "geomean", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "median_s", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "median_w", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "meandev", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "lreg", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "lregSlope", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "devsq", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "kurt", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "skew", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "covar", "(first_stream, second_stream, first_from, first_to, second_from, second_to)"));
                coll.Add(new LuaProperty("mathex", true, "correl", "(first_stream, second_stream, first_from, first_to, second_from, second_to)"));
                coll.Add(new LuaProperty("mathex", true, "gammaln", "(x)"));
                coll.Add(new LuaProperty("mathex", true, "gammaDist", "(x, a, scale)"));
                coll.Add(new LuaProperty("mathex", true, "betaDist", "(x, a, b)"));
                coll.Add(new LuaProperty("mathex", true, "betaDistInv", "(p, a, b)"));
                coll.Add(new LuaProperty("mathex", true, "binomDist", "(trials, succeeds, p)"));
                coll.Add(new LuaProperty("mathex", true, "chiDist", "(x, n)"));
                coll.Add(new LuaProperty("mathex", true, "expDist", "(x, lambda)"));
                coll.Add(new LuaProperty("mathex", true, "fDist", "(x, n, m)"));
                coll.Add(new LuaProperty("mathex", true, "fDistInv", "(p, n, m)"));
                coll.Add(new LuaProperty("mathex", true, "normalDist", "(x, mean, variation)"));
                coll.Add(new LuaProperty("mathex", true, "studentDist", "(x, n)"));
                coll.Add(new LuaProperty("mathex", true, "weibullDist", "(x, a, variation)"));
                coll.Add(new LuaProperty("mathex", true, "poissonDist", "(x, mean)"));
                coll.Add(new LuaProperty("mathex", true, "lwma", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "min", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "max", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "min2", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "max2", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "minmax", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "stdev", "(stream, range, to?)"));
                coll.Add(new LuaProperty("mathex", true, "makeArray", "(size)"));
                coll.Add(new LuaProperty("mathex", true, "fft", "([link=array]array[/link])"));
                coll.Add(new LuaProperty("mathex", true, "ifft", "([link=array]array[/link])"));
                coll.Add(new LuaProperty("mathex", true, "cfft", "([link=array]array[/link])"));
                coll.Add(new LuaProperty("mathex", true, "icfft", "([link=array]array[/link])"));
                coll.Add(new LuaProperty("mathex", true, "regChannel", "(stream, from, to)"));
                coll.Add(new LuaProperty("indicator_manager", false, "size", "()"));
                coll.Add(new LuaProperty("indicator_manager", false, "getIndicator", "(index)"));
                coll.Add(new LuaProperty("indicator_manager", false, "findIndicator", "(id)"));
                coll.Add(new LuaProperty("indicator_manager", false, "create", "(id, source, parameters...)"));
                coll.Add(new LuaProperty("profile", false, "name", "()"));
                coll.Add(new LuaProperty("profile", false, "id", "()"));
                coll.Add(new LuaProperty("profile", false, "description", "()"));
                coll.Add(new LuaProperty("profile", false, "requiredSource", "()"));
                coll.Add(new LuaProperty("profile", false, "type", "()"));
                coll.Add(new LuaProperty("profile", false, "parameters", "()"));
                coll.Add(new LuaProperty("profile", false, "createInstance", "(source, parameters)"));
                coll.Add(new LuaProperty("profile", false, "createInstanceRef", "(source, parameters, refsource)"));
                coll.Add(new LuaProperty("parameters", false, "getBoolean", "(id)"));
                coll.Add(new LuaProperty("parameters", false, "getInteger", "(id)"));
                coll.Add(new LuaProperty("parameters", false, "getDouble", "(id)"));
                coll.Add(new LuaProperty("parameters", false, "getString", "(id)"));
                coll.Add(new LuaProperty("parameters", false, "getFile", "(id)"));
                coll.Add(new LuaProperty("parameters", false, "getColor", "(id)"));
                coll.Add(new LuaProperty("parameters", false, "setBoolean", "(id, value)"));
                coll.Add(new LuaProperty("parameters", false, "setInteger", "(id, value)"));
                coll.Add(new LuaProperty("parameters", false, "setDouble", "(id, value)"));
                coll.Add(new LuaProperty("parameters", false, "setString", "(id, value)"));
                coll.Add(new LuaProperty("parameters", false, "setColor", "(id, value)"));
                coll.Add(new LuaProperty("parameters", false, "getCustomParameters", "()"));
                coll.Add(new LuaProperty("indicator_instance", false, "getStream", "(index)"));
                coll.Add(new LuaProperty("indicator_instance", false, "getStreamCount", "()"));
                coll.Add(new LuaProperty("indicator_instance", false, "update", "(flag)"));
                coll.Add(new LuaProperty("indicator_instance", "DATA"));
                coll.Add(new LuaProperty("resources", false, "get", "(id)"));
                coll.Add(new LuaProperty("strategy", false, "name", "(name)"));
                coll.Add(new LuaProperty("strategy", false, "type", "(type)"));
                coll.Add(new LuaProperty("strategy", false, "description", "(description)"));
                coll.Add(new LuaProperty("strategy", "parameters"));
                coll.Add(new LuaProperty("strategy", false, "setTag", "(name, value)"));
                coll.Add(new LuaProperty("instance", "bid"));
                coll.Add(new LuaProperty("instance", "ask"));
                coll.Add(new LuaProperty("terminal", false, "alertMessage", "(instrument, price, message, time)"));
                coll.Add(new LuaProperty("terminal", false, "alertSound", "(file, recurrent)"));
                coll.Add(new LuaProperty("terminal", false, "alertEmail", "(email, subject, text)"));
                coll.Add(new LuaProperty("terminal", false, "execute", "(cookie, [clink=valuemap]valuemap[/clink])"));
                coll.Add(new LuaProperty("stream", false, "name", "()"));
                coll.Add(new LuaProperty("stream", false, "size", "()"));
                coll.Add(new LuaProperty("bar_stream", false, "barSize", "()"));
                coll.Add(new LuaProperty("stream", false, "first", "()"));
                coll.Add(new LuaProperty("stream", false, "isBar", "()"));
                coll.Add(new LuaProperty("bar_stream", false, "supportsVolume", "()"));
                coll.Add(new LuaProperty("stream", false, "date", "(index)"));
                coll.Add(new LuaProperty("stream", false, "hasData", "(index)"));
                coll.Add(new LuaProperty("stream", false, "serial", "(index)"));
                coll.Add(new LuaProperty("bar_stream", "open"));
                coll.Add(new LuaProperty("bar_stream", "volume"));
                coll.Add(new LuaProperty("bar_stream", "close"));
                coll.Add(new LuaProperty("bar_stream", "median"));
                coll.Add(new LuaProperty("bar_stream", "typical"));
                coll.Add(new LuaProperty("bar_stream", "weighted"));
                coll.Add(new LuaProperty("bar_stream", "high"));
                coll.Add(new LuaProperty("bar_stream", "low"));
                coll.Add(new LuaProperty("stream", false, "instrument", "()"));
                coll.Add(new LuaProperty("stream", false, "pipSize", "()"));
                coll.Add(new LuaProperty("stream", false, "isBid", "()"));
                coll.Add(new LuaProperty("stream", false, "isAlive", "()"));
                coll.Add(new LuaProperty("stream", false, "getPrecision", "()"));
                coll.Add(new LuaProperty("tick_stream", false, "tick", "(index)"));
                coll.Add(new LuaProperty("output_stream", false, "addLevel", "(level, style?, width?, color?)"));
                coll.Add(new LuaProperty("output_stream", false, "set", "(index, value)"));
                coll.Add(new LuaProperty("output_stream", false, "setBookmark", "(bookmark, period)"));
                coll.Add(new LuaProperty("output_stream", false, "getBookmark", "(bookmark)"));
                coll.Add(new LuaProperty("output_stream", false, "setPrecision", "(precision)"));
                coll.Add(new LuaProperty("output_stream", false, "setStyle", "(style)"));
                coll.Add(new LuaProperty("output_stream", false, "setWidth", "(width)"));
                coll.Add(new LuaProperty("output_stream", false, "setColor", "(index, color)"));
                coll.Add(new LuaProperty("output_stream", false, "setBreak", "(index, break)"));
                coll.Add(new LuaProperty("output_stream", false, "setVisible", "(visible)"));
                coll.Add(new LuaProperty("text_output", false, "set", "(index, level, label, tooltip?, color?)"));
                coll.Add(new LuaProperty("text_output", false, "setNoData", "(index)"));
                coll.Add(new LuaProperty("reference_sources", false, "size", "()"));
                coll.Add(new LuaProperty("reference_sources", false, "get", "(index)"));
                coll.Add(new LuaProperty("valuemap", false, "append", "(valuemap)"));
                coll.Add(new LuaProperty("tradingtable", false, "enumerator", "()"));
                coll.Add(new LuaProperty("tradingtable", false, "version", "()"));
                coll.Add(new LuaProperty("tradingtable", false, "find", "(column, key, occurence?)"));
                coll.Add(new LuaProperty("tradingtable_enum", false, "reset", "()"));
                coll.Add(new LuaProperty("tradingtable_enum", false, "next", "()"));
                coll.Add(new LuaProperty("tradingtable_row", false, "refresh", "()"));
                coll.Add(new LuaProperty("tradingtable_row", false, "cell", "(name)"));
                coll.Add(new LuaProperty("interop", false, "size", "()"));
                coll.Add(new LuaProperty("interop", false, "instance", "(index)"));
                coll.Add(new LuaProperty("interop", false, "isalive", "(instance)"));
                coll.Add(new LuaProperty("interop_instance", false, "invoke", "(name, ...)"));
                coll.Add(new LuaProperty("interop_instance", false, "name", "()"));
                coll.Add(new LuaProperty("interop_instance", false, "isIndicator", "()"));
                coll.Add(new LuaProperty("interop_instance", false, "indicatorOutput", "()"));
                coll.Add(new LuaProperty("core", "ASYNC_REDRAW"));
                coll.Add(new LuaProperty("core", "COLOR_BACKGROUND"));
                coll.Add(new LuaProperty("core", "Bar"));
                coll.Add(new LuaProperty("core", "COLOR_CUSTOMLEVEL"));
                coll.Add(new LuaProperty("core", "COLOR_DOWNCANDLE"));
                coll.Add(new LuaProperty("core", "COLOR_LABEL"));
                coll.Add(new LuaProperty("core", "COLOR_LINE"));
                coll.Add(new LuaProperty("core", "COLOR_UPCANDLE"));
                coll.Add(new LuaProperty("core", "CR_BOTTOM"));
                coll.Add(new LuaProperty("core", "CR_CENTER"));
                coll.Add(new LuaProperty("core", "CR_CHART"));
                coll.Add(new LuaProperty("core", "CR_LEFT"));
                coll.Add(new LuaProperty("core", "CR_RIGHT"));
                coll.Add(new LuaProperty("core", "CR_TOP"));
                coll.Add(new LuaProperty("core", "Dot"));
                coll.Add(new LuaProperty("core", "FLAG_ACCOUNT"));
                coll.Add(new LuaProperty("core", "FLAG_ALLOW_TRADE"));
                coll.Add(new LuaProperty("core", "FLAG_EMAIL"));
                coll.Add(new LuaProperty("core", "FLAG_INDICATOR"));
                coll.Add(new LuaProperty("core", "FLAG_INSTRUMENTS"));
                coll.Add(new LuaProperty("core", "FLAG_LEVEL_STYLE"));
                coll.Add(new LuaProperty("core", "FLAG_LINE_STYLE"));
                coll.Add(new LuaProperty("core", "FLAG_ONLYINDICATORS"));
                coll.Add(new LuaProperty("core", "FLAG_ONLYOSCILLATORS"));
                coll.Add(new LuaProperty("core", "FLAG_ORDER"));
                coll.Add(new LuaProperty("core", "FLAG_PERIODS"));
                coll.Add(new LuaProperty("core", "FLAG_PERIODS_EDIT"));
                coll.Add(new LuaProperty("core", "FLAG_PRICE"));
                coll.Add(new LuaProperty("core", "FLAG_SOUND"));
                coll.Add(new LuaProperty("core", "FLAG_STRATEGY"));
                coll.Add(new LuaProperty("core", "FLAG_TRADE"));
                coll.Add(new LuaProperty("core", "FLAG_DATE"));
                coll.Add(new LuaProperty("core", "FLAG_DATETIME"));
                coll.Add(new LuaProperty("core", "FLAG_DATE_OR_NULL"));
                coll.Add(new LuaProperty("core", "FLAG_DATETIME_OR_NULL"));
                coll.Add(new LuaProperty("core", "H_Center"));
                coll.Add(new LuaProperty("core", "H_Left"));
                coll.Add(new LuaProperty("core", "H_Right"));
                coll.Add(new LuaProperty("core", "Indicator"));
                coll.Add(new LuaProperty("core", "Line"));
                coll.Add(new LuaProperty("core", "LINE_DASH"));
                coll.Add(new LuaProperty("core", "LINE_DASHDOT"));
                coll.Add(new LuaProperty("core", "LINE_DOT"));
                coll.Add(new LuaProperty("core", "LINE_NONE"));
                coll.Add(new LuaProperty("core", "LINE_SOLID"));
                coll.Add(new LuaProperty("core", "Oscillator"));
                coll.Add(new LuaProperty("core", "Tick"));
                coll.Add(new LuaProperty("core", "TZ_EST"));
                coll.Add(new LuaProperty("core", "TZ_FINANCIAL"));
                coll.Add(new LuaProperty("core", "TZ_LOCAL"));
                coll.Add(new LuaProperty("core", "TZ_SERVER"));
                coll.Add(new LuaProperty("core", "TZ_TS"));
                coll.Add(new LuaProperty("core", "TZ_UTC"));
                coll.Add(new LuaProperty("core", "UpdateAll"));
                coll.Add(new LuaProperty("core", "UpdateLast"));
                coll.Add(new LuaProperty("core", "UpdateNew"));
                coll.Add(new LuaProperty("core", "V_Bottom"));
                coll.Add(new LuaProperty("core", "V_Center"));
                coll.Add(new LuaProperty("core", "V_Top"));
                coll.Add(new LuaProperty("core", "View"));

                coll.Add(new LuaProperty("ownerdraw_points", true, "new", "()"));
                coll.Add(new LuaProperty("ownerdraw_points", false, "size", "()"));
                coll.Add(new LuaProperty("ownerdraw_points", false, "get", "(index)"));
                coll.Add(new LuaProperty("ownerdraw_points", false, "add", "(x, y)"));
                coll.Add(new LuaProperty("ownerdraw_points", false, "set", "(index, x, y)"));
                coll.Add(new LuaProperty("context", false, "top", "()"));
                coll.Add(new LuaProperty("context", false, "left", "()"));
                coll.Add(new LuaProperty("context", false, "right", "()"));
                coll.Add(new LuaProperty("context", false, "bottom", "()"));
                coll.Add(new LuaProperty("context", false, "firstBar", "()"));
                coll.Add(new LuaProperty("context", false, "lastBar", "()"));
                coll.Add(new LuaProperty("context", false, "minPrice", "()"));
                coll.Add(new LuaProperty("context", false, "maxPrice", "()"));
                coll.Add(new LuaProperty("context", false, "startEnumeration", "()"));
                coll.Add(new LuaProperty("context", false, "nextBar", "()"));
                coll.Add(new LuaProperty("context", false, "indexOfBar", "(x)"));
                coll.Add(new LuaProperty("context", false, "positionOfBar", "(index)"));
                coll.Add(new LuaProperty("context", false, "priceOfPoint", "(y)"));
                coll.Add(new LuaProperty("context", false, "pointOfPrice", "(price)"));
                coll.Add(new LuaProperty("context", false, "priceWidth", "(priceRange)"));
                coll.Add(new LuaProperty("context", false, "deleteObject", "(objid)"));
                coll.Add(new LuaProperty("context", false, "createPen", "(objid, style, width, color)"));
                coll.Add(new LuaProperty("context", false, "createSolidBrush", "(objid, color)"));
                coll.Add(new LuaProperty("context", false, "createHatchBrush", "(objid, style, color)"));
                coll.Add(new LuaProperty("context", false, "createFont", "(objid, faceName, width, height, style)"));
                coll.Add(new LuaProperty("context", false, "pointsToPixels", "(points)"));
                coll.Add(new LuaProperty("context", false, "pixelsToPoints", "(pixels)"));
                coll.Add(new LuaProperty("context", false, "setPixel", "(x, y, color, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawLine", "(pen, x1, y1, x2, y2, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawRectangle", "(pen, brush, x1, y1, x2, y2, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawEllipse", "(pen, brush, x1, y1, x2, y2, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawArc", "(pen, brush, x1, y1, x2, y2, x3, y3, x4, y4, transparency?)"));
                coll.Add(new LuaProperty("context", false, "measureText", "(font, text, style)"));
                coll.Add(new LuaProperty("context", false, "drawText", "(font, text, color, background, x1, y1, x2, y2, style, transparency?)"));
                coll.Add(new LuaProperty("context", false, "loadPicture", "(objid, file)"));
                coll.Add(new LuaProperty("context", false, "loadIcon", "(objid, file)"));
                coll.Add(new LuaProperty("context", false, "drawPicture", "(image, x, y, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawPictureTransparentBackground", "(image, x, y, bgcolor, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawIcon", "(icon, x, y, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawPolyline", "(pen, points, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawPolygon", "(pen, brush, points, transparency?)"));
                coll.Add(new LuaProperty("context", false, "createPoints", "()"));
                coll.Add(new LuaProperty("context", false, "drawGradientRectangle", "(x1, y1, color1, x2, y2, color2, x3, y3, color3, x4, y4, color4, transparency?)"));
                coll.Add(new LuaProperty("context", false, "setClipRectangle", "(left, top, right, bottom)"));
                coll.Add(new LuaProperty("context", false, "resetClipRectangle", "()"));
                coll.Add(new LuaProperty("context", false, "convertTransparency", "(transparency)"));
                coll.Add(new LuaProperty("context", false, "convertPenStyle", "(penStyle)"));
                coll.Add(new LuaProperty("context", false, "drawGradientTriangle", "(x1, y1, color1, x2, y2, color2, x3, y3, color3, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawBezierLine", "(pen, points, transparency?)"));
                coll.Add(new LuaProperty("context", false, "drawBezierShape", "(pen, brush, points, transparency?)"));
                coll.Add(new LuaProperty("context", false, "tooltip", "(x1, y1, x2, y2, text)"));
                coll.Add(new LuaProperty("context", "BOLD"));
                coll.Add(new LuaProperty("context", "ITALIC"));
                coll.Add(new LuaProperty("context", "STRIKEOUT"));
                coll.Add(new LuaProperty("context", "UNDERLINE"));
                coll.Add(new LuaProperty("context", "NORMAL"));
                coll.Add(new LuaProperty("context", "SOLID"));
                coll.Add(new LuaProperty("context", "DASH"));
                coll.Add(new LuaProperty("context", "DOT"));
                coll.Add(new LuaProperty("context", "DASHDOT"));
                coll.Add(new LuaProperty("context", "NULL"));
                coll.Add(new LuaProperty("context", "BDIAGONAL"));
                coll.Add(new LuaProperty("context", "CROSS"));
                coll.Add(new LuaProperty("context", "DIAGCROSS"));
                coll.Add(new LuaProperty("context", "FDIAGONAL"));
                coll.Add(new LuaProperty("context", "HORIZONTAL"));
                coll.Add(new LuaProperty("context", "VERTICAL"));
                coll.Add(new LuaProperty("context", "BOTTOM"));
                coll.Add(new LuaProperty("context", "CENTER"));
                coll.Add(new LuaProperty("context", "END_ELLIPSIS"));
                coll.Add(new LuaProperty("context", "EXPANDTABS"));
                coll.Add(new LuaProperty("context", "LEFT"));
                coll.Add(new LuaProperty("context", "NOFULLWIDTHCHARBREAK"));
                coll.Add(new LuaProperty("context", "NOPREFIX"));
                coll.Add(new LuaProperty("context", "PATH_ELLIPSIS"));
                coll.Add(new LuaProperty("context", "RIGHT"));
                coll.Add(new LuaProperty("context", "RTLREADING"));
                coll.Add(new LuaProperty("context", "SINGLELINE"));
                coll.Add(new LuaProperty("context", "TOP"));
                coll.Add(new LuaProperty("context", "VCENTER"));
                coll.Add(new LuaProperty("context", "WORDBREAK"));

                coll.Add(new LuaProperty("math2d", true, "polygonToBezierShape", "(points, smooth)"));
                coll.Add(new LuaProperty("math2d", true, "polylineToBezierLine", "(points, smooth)"));
                coll.Add(new LuaProperty("math2d", true, "cartesianToPolar", "(x, y)"));
                coll.Add(new LuaProperty("math2d", true, "polarToCartesian", "(r, p)"));
                coll.Add(new LuaProperty("math2d", true, "isPointInRect", "(x, y, x1, y1, x2, y2)"));
                coll.Add(new LuaProperty("math2d", true, "lineEquation", "(x1, y1, x2, y2)"));
                coll.Add(new LuaProperty("math2d", true, "lineIntersection", "(l1x1, l1y1, l1x2, l1y2, l2x1, l2y1, l2x2, l2y2)"));
                coll.Add(new LuaProperty("math2d", true, "segmentIntersection", "(l1x1, l1y1, l1x2, l1y2, l2x1, l2y1, l2x2, l2y2)"));
                coll.Add(new LuaProperty("math2d", true, "projectPointOnLine", "(x, y, x1, y1, x2, y2)"));
                coll.Add(new LuaProperty("math2d", true, "planeSimilarityTransform", "(points, base_points, base_points_projected)"));
                coll.Add(new LuaProperty("math2d", true, "lineEllipseIntersection", "(ex1, ey1, ex2, ey2, lx1, ly1, lx2, ly2)"));
                coll.Add(new LuaProperty("math2d", true, "isPointOnLine", "(x, y, x1, y1, x2, y2)"));
                coll.Add(new LuaProperty("math2d", true, "isPointOnSegment", "(x, y, x1, y1, x2, y2)"));
                coll.Add(new LuaProperty("win32", true, "deleteFile", "(fileName)"));
                coll.Add(new LuaProperty("win32", true, "copyFile", "(existingFileName, newFileName, overwrite?)"));
                coll.Add(new LuaProperty("win32", true, "moveFile", "(existingFileName, newFileName)"));
                coll.Add(new LuaProperty("win32", true, "tempFileName", "()"));
                coll.Add(new LuaProperty("win32", true, "tempFolder", "()"));
                coll.Add(new LuaProperty("win32", true, "fileAttributes", "()"));
                coll.Add(new LuaProperty("win32", true, "files", "(mask)"));
                coll.Add(new LuaProperty("win32", true, "isAttribute", "(attributes, attribute)"));
                coll.Add(new LuaProperty("win32", true, "splitFileName", "(fileName)"));
                coll.Add(new LuaProperty("win32", true, "createFolder", "(folderName)"));
                coll.Add(new LuaProperty("win32", true, "deleteFolder", "(folderName)"));
                coll.Add(new LuaProperty("win32", true, "getRegistry", "(keyName, valueName)"));
                coll.Add(new LuaProperty("win32", true, "setRegistry", "(keyName, valueName, value)"));
                coll.Add(new LuaProperty("win32", true, "enumRegistry", "(keyName)"));
                coll.Add(new LuaProperty("win32", true, "currentTimeUTC", "()"));
                coll.Add(new LuaProperty("win32", true, "currentTimeLocal", "()"));
                coll.Add(new LuaProperty("win32", true, "tickCount", "()"));
                coll.Add(new LuaProperty("win32", true, "hfTickCount", "()"));
                coll.Add(new LuaProperty("win32", true, "getTimeZonesList", "()"));
                coll.Add(new LuaProperty("win32", true, "getTimeZone", "(tzname)"));
                coll.Add(new LuaProperty("win32", true, "getCurrentTimeZone", "()"));
                coll.Add(new LuaProperty("win32", true, "convertUTCToTimeZone", "(tz, date)"));
                coll.Add(new LuaProperty("win32", true, "convertTimeZoneToUTC", "(tz, date)"));
                coll.Add(new LuaProperty("win32", true, "formatDate", "(date, dateFormat, timeFormat)"));
                coll.Add(new LuaProperty("win32", true, "formatNumber", "(value, groups, precision)"));
                coll.Add(new LuaProperty("win32", "ATTR_ARCHIVE"));
                coll.Add(new LuaProperty("win32", "ATTR_DIRECTORY"));
                coll.Add(new LuaProperty("win32", "ATTR_HIDDEN"));
                coll.Add(new LuaProperty("win32", "ATTR_READONLY"));
                coll.Add(new LuaProperty("win32", "ATTR_SYSTEM"));
                coll.Add(new LuaProperty("win32", "ATTR_TEMPORARY"));
                coll.Add(new LuaProperty("win32", "NONE"));
                coll.Add(new LuaProperty("win32", "SHORT"));
                coll.Add(new LuaProperty("win32", "LONG"));
            }
            return coll;
        }
    }
}