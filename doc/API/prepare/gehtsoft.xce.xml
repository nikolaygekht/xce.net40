<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="gehtsoft.xce.conio">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004D062602A09E2FF91265D843A250AC6EB66E105AC73BA13D21F871E6D97E02A34DA94E2EF874D5882DCDBE2FF335C17BACF3EC938F11F2F3D7477B30B5B83F592CF815D5E3454020D3E102600A6F09A4A19C1834BCED501D4752AB59341354836282127CCBA60E47C09FA90AA788CE2FF64BA03A200D718C605789240C062CB8" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright Gehtsoft (c) 2000-2011</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>../key.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>gehtsoft.xce.conio</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>XCE.NET</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Console Input/Output modules for XCE</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="gehtsoft.xce.conio.win">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004D062602A09E2FF91265D843A250AC6EB66E105AC73BA13D21F871E6D97E02A34DA94E2EF874D5882DCDBE2FF335C17BACF3EC938F11F2F3D7477B30B5B83F592CF815D5E3454020D3E102600A6F09A4A19C1834BCED501D4752AB59341354836282127CCBA60E47C09FA90AA788CE2FF64BA03A200D718C605789240C062CB8" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>b445fb6f-c360-4553-8f5f-7575f04ac07f</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>gehtsoft.xce.conio.win</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © Microsoft 2011</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>gehtsoft.xce.conio.win</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="gehtsoft.xce.colorer">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004D062602A09E2FF91265D843A250AC6EB66E105AC73BA13D21F871E6D97E02A34DA94E2EF874D5882DCDBE2FF335C17BACF3EC938F11F2F3D7477B30B5B83F592CF815D5E3454020D3E102600A6F09A4A19C1834BCED501D4752AB59341354836282127CCBA60E47C09FA90AA788CE2FF64BA03A200D718C605789240C062CB8" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Colorer Take5 .NET adapter for XCE</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright Gehtsoft (c) 2000-2011</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>../../../key.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>gehtsoft.xce.colorer</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>XCE.NET</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="UnmanagedCode">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="SkipVerification">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="gehtsoft.xce.text">
      <assemblydata version="0.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004D062602A09E2FF91265D843A250AC6EB66E105AC73BA13D21F871E6D97E02A34DA94E2EF874D5882DCDBE2FF335C17BACF3EC938F11F2F3D7477B30B5B83F592CF815D5E3454020D3E102600A6F09A4A19C1834BCED501D4752AB59341354836282127CCBA60E47C09FA90AA788CE2FF64BA03A200D718C605789240C062CB8" hash="SHA1" />
    </assembly>
    <assembly name="gehtsoft.xce.editor">
      <assemblydata version="1.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004D062602A09E2FF91265D843A250AC6EB66E105AC73BA13D21F871E6D97E02A34DA94E2EF874D5882DCDBE2FF335C17BACF3EC938F11F2F3D7477B30B5B83F592CF815D5E3454020D3E102600A6F09A4A19C1834BCED501D4752AB59341354836282127CCBA60E47C09FA90AA788CE2FF64BA03A200D718C605789240C062CB8" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>9359f564-2375-4b98-af99-2896b2e79081</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © Microsoft 2011</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>editor</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>editor</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="gehtsoft.xce.extension.script">
      <assemblydata version="0.0.0.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001004D062602A09E2FF91265D843A250AC6EB66E105AC73BA13D21F871E6D97E02A34DA94E2EF874D5882DCDBE2FF335C17BACF3EC938F11F2F3D7477B30B5B83F592CF815D5E3454020D3E102600A6F09A4A19C1834BCED501D4752AB59341354836282127CCBA60E47C09FA90AA788CE2FF64BA03A200D718C605789240C062CB8" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>3B315FDB-846B-43D7-8284-367F11A2FB82</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:gehtsoft.xce.colorer">
      <apidata name="gehtsoft.xce.colorer" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.colorer.SyntaxRegion" />
        <element api="T:gehtsoft.xce.colorer.StyledRegion" />
        <element api="T:gehtsoft.xce.colorer.ColorerFactory" />
        <element api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" />
        <element api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" />
        <element api="T:gehtsoft.xce.colorer.SyntaxHighlighter" />
        <element api="T:gehtsoft.xce.colorer.ILineSource" />
        <element api="T:gehtsoft.xce.colorer.Regex" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.colorer.ColorerFactory">
      <apidata name="ColorerFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.#ctor" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.Init(System.String,System.String,System.String,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.CreateHighlighter(gehtsoft.xce.colorer.ILineSource)" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.FindSyntaxRegion(System.String)" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.FindStyledRegion(System.String)" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.Dispose" />
        <element api="M:gehtsoft.xce.colorer.ColorerFactory.Finalize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.CreateHighlighter(gehtsoft.xce.colorer.ILineSource)">
      <apidata name="CreateHighlighter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineSource">
          <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.FindStyledRegion(System.String)">
      <apidata name="FindStyledRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.colorer.StyledRegion" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.FindSyntaxRegion(System.String)">
      <apidata name="FindSyntaxRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ColorerFactory.Init(System.String,System.String,System.String,System.Int32)">
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="colorerCataloguePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="colorerHRDClass">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="colorerHRDName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="backParse">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.ILineSource">
      <apidata name="ILineSource" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </implementors>
      <elements>
        <element api="M:gehtsoft.xce.colorer.ILineSource.GetFileName" />
        <element api="M:gehtsoft.xce.colorer.ILineSource.GetLinesCount" />
        <element api="M:gehtsoft.xce.colorer.ILineSource.GetLineLength(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.ILineSource.GetLine(System.Int32,System.Char[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ILineSource.GetFileName">
      <apidata name="GetFileName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ILineSource.GetLine(System.Int32,System.Char[],System.Int32,System.Int32)">
      <apidata name="GetLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="lineColumnFrom">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ILineSource.GetLineLength(System.Int32)">
      <apidata name="GetLineLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="lno">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.ILineSource.GetLinesCount">
      <apidata name="GetLinesCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.Regex">
      <apidata name="Regex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.text.XceFileBufferRegex" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.Char[],System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.String,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.String)" />
        <element api="M:gehtsoft.xce.colorer.Regex.#ctor(System.String)" />
        <element api="M:gehtsoft.xce.colorer.Regex.NextMatch" />
        <element api="M:gehtsoft.xce.colorer.Regex.Start(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.End(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Length(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Value(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Name(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.IndexOf(System.String)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Dispose" />
        <element api="M:gehtsoft.xce.colorer.Regex.Finalize" />
        <element api="P:gehtsoft.xce.colorer.Regex.MatchesCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regularExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.End(System.Int32)">
      <apidata name="End" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.IndexOf(System.String)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Length(System.Int32)">
      <apidata name="Length" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Match(System.Char[],System.Int32,System.Int32)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Match(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="lengthAccessor">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="charAccessor">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Match(System.String)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Match(System.String,System.Int32,System.Int32)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.Regex.MatchesCount">
      <apidata name="MatchesCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MatchesCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Name(System.Int32)">
      <apidata name="Name" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.NextMatch">
      <apidata name="NextMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Start(System.Int32)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.Regex.Value(System.Int32)">
      <apidata name="Value" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.StyledRegion">
      <apidata name="StyledRegion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:gehtsoft.xce.colorer.StyledRegion.BackgroupColor" />
        <element api="P:gehtsoft.xce.colorer.StyledRegion.ForegroundColor" />
        <element api="P:gehtsoft.xce.colorer.StyledRegion.ConsoleColor" />
        <element api="P:gehtsoft.xce.colorer.StyledRegion.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.StyledRegion.BackgroupColor">
      <apidata name="BackgroupColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BackgroupColor" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.StyledRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.StyledRegion.ConsoleColor">
      <apidata name="ConsoleColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsoleColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.StyledRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.StyledRegion.ForegroundColor">
      <apidata name="ForegroundColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ForegroundColor" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.StyledRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.StyledRegion.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.StyledRegion" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.SyntaxHighlighter">
      <apidata name="SyntaxHighlighter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.Colorize(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyLineChange(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyMajorChange(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyIdle" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyFileNameChange" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.GetNextRegion" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.MatchPair(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.IdleJob(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.ValidateRange(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.SetVisibleRange(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.Dispose" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighter.Finalize" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighter.LastValidLine" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighter.FileType" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighter.CurrentRegion" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.Colorize(System.Int32,System.Int32)">
      <apidata name="Colorize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineFrom">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="lineCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighter.CurrentRegion">
      <apidata name="CurrentRegion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentRegion" />
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighter.FileType">
      <apidata name="FileType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion(System.Int32)">
      <apidata name="GetFirstRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.GetNextRegion">
      <apidata name="GetNextRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.IdleJob(System.Int32)">
      <apidata name="IdleJob" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighter.LastValidLine">
      <apidata name="LastValidLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastValidLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.MatchPair(System.Int32,System.Int32)">
      <apidata name="MatchPair" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyFileNameChange">
      <apidata name="NotifyFileNameChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyIdle">
      <apidata name="NotifyIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyLineChange(System.Int32)">
      <apidata name="NotifyLineChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyMajorChange(System.Int32)">
      <apidata name="NotifyMajorChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineFrom">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.SetVisibleRange(System.Int32,System.Int32)">
      <apidata name="SetVisibleRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighter.ValidateRange(System.Int32,System.Int32)">
      <apidata name="ValidateRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.SyntaxHighlighterPair">
      <apidata name="SyntaxHighlighterPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Dispose" />
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Finalize" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterPair.End" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterPair.Start" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterPair.End">
      <apidata name="End" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_End" />
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterPair.Start">
      <apidata name="Start" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Start" />
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion">
      <apidata name="SyntaxHighlighterRegion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Is(gehtsoft.xce.colorer.SyntaxRegion)" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.DerivedFrom" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Name" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.ConsoleColor" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.HasColor" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.IsSyntaxRegion" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Length" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.EndColumn" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.StartColumn" />
        <element api="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Line" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.ConsoleColor">
      <apidata name="ConsoleColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsoleColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.DerivedFrom">
      <apidata name="DerivedFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DerivedFrom" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.EndColumn">
      <apidata name="EndColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.HasColor">
      <apidata name="HasColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasColor" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Is(gehtsoft.xce.colorer.SyntaxRegion)">
      <apidata name="Is" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.IsSyntaxRegion">
      <apidata name="IsSyntaxRegion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSyntaxRegion" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Line">
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.StartColumn">
      <apidata name="StartColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StartColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.colorer.SyntaxRegion">
      <apidata name="SyntaxRegion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.colorer.SyntaxRegion.IsDerivedFrom(gehtsoft.xce.colorer.SyntaxRegion)" />
        <element api="M:gehtsoft.xce.colorer.SyntaxRegion.Equals(gehtsoft.xce.colorer.SyntaxRegion)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:gehtsoft.xce.colorer.SyntaxRegion.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxRegion.Equals(gehtsoft.xce.colorer.SyntaxRegion)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="region">
          <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.colorer.SyntaxRegion.IsDerivedFrom(gehtsoft.xce.colorer.SyntaxRegion)">
      <apidata name="IsDerivedFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="region">
          <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.colorer.SyntaxRegion.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.colorer" module="gehtsoft.xce.colorer" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.colorer" />
        <type api="T:gehtsoft.xce.colorer.SyntaxRegion" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.conio">
      <apidata name="gehtsoft.xce.conio" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.conio.BoxBorder" />
        <element api="T:gehtsoft.xce.conio.Canvas" />
        <element api="T:gehtsoft.xce.conio.ConsoleOutput" />
        <element api="T:gehtsoft.xce.conio.ScanCode" />
        <element api="T:gehtsoft.xce.conio.ConsoleInputListener" />
        <element api="T:gehtsoft.xce.conio.ConsoleInput" />
        <element api="T:gehtsoft.xce.conio.TextClipboard" />
        <element api="T:gehtsoft.xce.conio.TextClipboardFormat" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.conio.BoxBorder">
      <apidata name="BoxBorder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.BoxBorder.#ctor(System.Char,System.Char,System.Char,System.Char,System.Char,System.Char,System.Char,System.Char)" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.DoubleBorderBox" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.SingleBorderBox" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.Right" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.Left" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.BottomRight" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.Bottom" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.BottomLeft" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.TopRight" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.Top" />
        <element api="P:gehtsoft.xce.conio.BoxBorder.TopLeft" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.BoxBorder.#ctor(System.Char,System.Char,System.Char,System.Char,System.Char,System.Char,System.Char,System.Char)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="topLeft">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="top">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="topRight">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="bottomLeft">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="bottom">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="bottomRight">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.Bottom">
      <apidata name="Bottom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bottom" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.BottomLeft">
      <apidata name="BottomLeft" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BottomLeft" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.BottomRight">
      <apidata name="BottomRight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BottomRight" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.DoubleBorderBox">
      <apidata name="DoubleBorderBox" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoubleBorderBox" />
      <returns>
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.Left">
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Left" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.Right">
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Right" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.SingleBorderBox">
      <apidata name="SingleBorderBox" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SingleBorderBox" />
      <returns>
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.Top">
      <apidata name="Top" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Top" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.TopLeft">
      <apidata name="TopLeft" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TopLeft" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.BoxBorder.TopRight">
      <apidata name="TopRight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TopRight" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.Canvas">
      <apidata name="Canvas" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.Canvas.#ctor(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char)" />
        <element api="M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Char)" />
        <element api="M:gehtsoft.xce.conio.Canvas.fillFg(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.box(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.BoxBorder,System.Int16,System.Char)" />
        <element api="M:gehtsoft.xce.conio.Canvas.box(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.BoxBorder,System.Int16)" />
        <element api="M:gehtsoft.xce.conio.Canvas.paint(System.Int32,System.Int32,gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.Canvas.get(System.Int32,System.Int32,System.Char@,System.Int16@)" />
        <element api="M:gehtsoft.xce.conio.Canvas.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.Canvas.Dispose" />
        <element api="M:gehtsoft.xce.conio.Canvas.Finalize" />
        <element api="P:gehtsoft.xce.conio.Canvas.Columns" />
        <element api="P:gehtsoft.xce.conio.Canvas.Rows" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.#ctor(System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.box(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.BoxBorder,System.Int16)">
      <apidata name="box" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="border">
          <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.box(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.BoxBorder,System.Int16,System.Char)">
      <apidata name="box" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="border">
          <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="fillchar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.Canvas.Columns">
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Char)">
      <apidata name="fill" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="chr">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.Int16)">
      <apidata name="fill" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="chr">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)">
      <apidata name="fill" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.fillFg(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)">
      <apidata name="fillFg" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.get(System.Int32,System.Int32,System.Char@,System.Int16@)">
      <apidata name="get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="chr" out="true">
          <referenceTo>
            <type api="T:System.Char" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="color" out="true">
          <referenceTo>
            <type api="T:System.Int16" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.paint(System.Int32,System.Int32,gehtsoft.xce.conio.Canvas)">
      <apidata name="paint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.Canvas.Rows">
      <apidata name="Rows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rows" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="chr">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char,System.Int16)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="chr">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Int16)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int16)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int16)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32,System.Int16)">
      <apidata name="write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="color">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.ConsoleInput">
      <apidata name="ConsoleInput" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.ConsoleInput.#ctor" />
        <element api="M:gehtsoft.xce.conio.ConsoleInput.keyNameToCode(System.String)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInput.keyCodeToName(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInput.read(gehtsoft.xce.conio.ConsoleInputListener,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInput.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInput.Dispose" />
        <element api="M:gehtsoft.xce.conio.ConsoleInput.Finalize" />
        <element api="P:gehtsoft.xce.conio.ConsoleInput.CurrentLayout" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.ConsoleInput.CurrentLayout">
      <apidata name="CurrentLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentLayout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.keyCodeToName(System.Int32)">
      <apidata name="keyCodeToName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.keyNameToCode(System.String)">
      <apidata name="keyNameToCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInput.read(gehtsoft.xce.conio.ConsoleInputListener,System.Int32)">
      <apidata name="read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listener">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInput" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.ConsoleInputListener">
      <apidata name="ConsoleInputListener" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </implementors>
      <elements>
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onKeyReleased(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onGetFocus(System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleInputListener.onScreenBufferChanged(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onGetFocus(System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onGetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onKeyReleased(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onKeyReleased" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseLButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseMove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseRButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseRButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseWheelDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseWheelUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleInputListener.onScreenBufferChanged(System.Int32,System.Int32)">
      <apidata name="onScreenBufferChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.ConsoleOutput">
      <apidata name="ConsoleOutput" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.#ctor(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.#ctor(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.paint(gehtsoft.xce.conio.Canvas,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.setCursorType(System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.getCursorType(System.Int32@,System.Boolean@)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.setCursorPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.getCursorPos(System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.updateSize" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.Dispose" />
        <element api="M:gehtsoft.xce.conio.ConsoleOutput.Finalize" />
        <element api="P:gehtsoft.xce.conio.ConsoleOutput.Columns" />
        <element api="P:gehtsoft.xce.conio.ConsoleOutput.Rows" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="save">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.#ctor(System.Boolean,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="save">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.ConsoleOutput.Columns">
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.getCursorPos(System.Int32@,System.Int32@)">
      <apidata name="getCursorPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="column" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.getCursorType(System.Int32@,System.Boolean@)">
      <apidata name="getCursorType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="visible" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.paint(gehtsoft.xce.conio.Canvas,System.Boolean)">
      <apidata name="paint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
        <parameter name="fast">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.ConsoleOutput.Rows">
      <apidata name="Rows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rows" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.setCursorPos(System.Int32,System.Int32)">
      <apidata name="setCursorPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.setCursorType(System.Int32,System.Boolean)">
      <apidata name="setCursorType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="visible">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.ConsoleOutput.updateSize">
      <apidata name="updateSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ConsoleOutput" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.ScanCode">
      <apidata name="ScanCode" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:gehtsoft.xce.conio.ScanCode.LBUTTON" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RBUTTON" />
        <element api="F:gehtsoft.xce.conio.ScanCode.CANCEL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MBUTTON" />
        <element api="F:gehtsoft.xce.conio.ScanCode.XBUTTON1" />
        <element api="F:gehtsoft.xce.conio.ScanCode.XBUTTON2" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BACK" />
        <element api="F:gehtsoft.xce.conio.ScanCode.TAB" />
        <element api="F:gehtsoft.xce.conio.ScanCode.CLEAR" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RETURN" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SHIFT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.CONTROL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MENU" />
        <element api="F:gehtsoft.xce.conio.ScanCode.PAUSE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.CAPITAL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.KANA" />
        <element api="F:gehtsoft.xce.conio.ScanCode.HANGEUL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.HANGUL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.JUNJA" />
        <element api="F:gehtsoft.xce.conio.ScanCode.FINAL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.HANJA" />
        <element api="F:gehtsoft.xce.conio.ScanCode.KANJI" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ESCAPE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.CONVERT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NONCONVERT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ACCEPT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MODECHANGE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SPACE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.PRIOR" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NEXT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.END" />
        <element api="F:gehtsoft.xce.conio.ScanCode.HOME" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LEFT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.UP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RIGHT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.DOWN" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SELECT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.PRINT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.EXECUTE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SNAPSHOT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.INSERT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.DEL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.HELP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LWIN" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RWIN" />
        <element api="F:gehtsoft.xce.conio.ScanCode.APPS" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SLEEP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD0" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD1" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD2" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD3" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD4" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD5" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD6" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD7" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD8" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMPAD9" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MULTIPLY" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ADD" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SEPARATOR" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SUBTRACT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.DECIMAL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.DIVIDE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F1" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F2" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F3" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F4" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F5" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F6" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F7" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F8" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F9" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F10" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F11" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F12" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F13" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F14" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F15" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F16" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F17" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F18" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F19" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F20" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F21" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F22" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F23" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F24" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NUMLOCK" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SCROLL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_NEC_EQUAL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_JISHO" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_MASSHOU" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_TOUROKU" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_LOYA" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_ROYA" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LSHIFT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RSHIFT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LCONTROL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RCONTROL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LMENU" />
        <element api="F:gehtsoft.xce.conio.ScanCode.RMENU" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_BACK" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_FORWARD" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_REFRESH" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_STOP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_SEARCH" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_FAVORITES" />
        <element api="F:gehtsoft.xce.conio.ScanCode.BROWSER_HOME" />
        <element api="F:gehtsoft.xce.conio.ScanCode.VOLUME_MUTE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.VOLUME_DOWN" />
        <element api="F:gehtsoft.xce.conio.ScanCode.VOLUME_UP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MEDIA_NEXT_TRACK" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MEDIA_PREV_TRACK" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MEDIA_STOP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.MEDIA_PLAY_PAUSE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LAUNCH_MAIL" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LAUNCH_MEDIA_SELECT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LAUNCH_APP1" />
        <element api="F:gehtsoft.xce.conio.ScanCode.LAUNCH_APP2" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_1" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_PLUS" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_COMMA" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_MINUS" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_PERIOD" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_2" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_3" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_4" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_5" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_6" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_7" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_8" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_AX" />
        <element api="F:gehtsoft.xce.conio.ScanCode.OEM_102" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ICO_HELP" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ICO_00" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ZERO" />
        <element api="F:gehtsoft.xce.conio.ScanCode.ONE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.TWO" />
        <element api="F:gehtsoft.xce.conio.ScanCode.FREE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.FOUR" />
        <element api="F:gehtsoft.xce.conio.ScanCode.FIVE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SIX" />
        <element api="F:gehtsoft.xce.conio.ScanCode.SEVEN" />
        <element api="F:gehtsoft.xce.conio.ScanCode.EIGHT" />
        <element api="F:gehtsoft.xce.conio.ScanCode.NINE" />
        <element api="F:gehtsoft.xce.conio.ScanCode.A" />
        <element api="F:gehtsoft.xce.conio.ScanCode.B" />
        <element api="F:gehtsoft.xce.conio.ScanCode.C" />
        <element api="F:gehtsoft.xce.conio.ScanCode.D" />
        <element api="F:gehtsoft.xce.conio.ScanCode.E" />
        <element api="F:gehtsoft.xce.conio.ScanCode.F" />
        <element api="F:gehtsoft.xce.conio.ScanCode.G" />
        <element api="F:gehtsoft.xce.conio.ScanCode.H" />
        <element api="F:gehtsoft.xce.conio.ScanCode.I" />
        <element api="F:gehtsoft.xce.conio.ScanCode.J" />
        <element api="F:gehtsoft.xce.conio.ScanCode.K" />
        <element api="F:gehtsoft.xce.conio.ScanCode.L" />
        <element api="F:gehtsoft.xce.conio.ScanCode.M" />
        <element api="F:gehtsoft.xce.conio.ScanCode.N" />
        <element api="F:gehtsoft.xce.conio.ScanCode.O" />
        <element api="F:gehtsoft.xce.conio.ScanCode.P" />
        <element api="F:gehtsoft.xce.conio.ScanCode.Q" />
        <element api="F:gehtsoft.xce.conio.ScanCode.R" />
        <element api="F:gehtsoft.xce.conio.ScanCode.S" />
        <element api="F:gehtsoft.xce.conio.ScanCode.T" />
        <element api="F:gehtsoft.xce.conio.ScanCode.U" />
        <element api="F:gehtsoft.xce.conio.ScanCode.V" />
        <element api="F:gehtsoft.xce.conio.ScanCode.W" />
        <element api="F:gehtsoft.xce.conio.ScanCode.X" />
        <element api="F:gehtsoft.xce.conio.ScanCode.Y" />
        <element api="F:gehtsoft.xce.conio.ScanCode.Z" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.A">
      <apidata name="A" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ACCEPT">
      <apidata name="ACCEPT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ADD">
      <apidata name="ADD" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.APPS">
      <apidata name="APPS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.B">
      <apidata name="B" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BACK">
      <apidata name="BACK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_BACK">
      <apidata name="BROWSER_BACK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_FAVORITES">
      <apidata name="BROWSER_FAVORITES" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_FORWARD">
      <apidata name="BROWSER_FORWARD" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_HOME">
      <apidata name="BROWSER_HOME" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_REFRESH">
      <apidata name="BROWSER_REFRESH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_SEARCH">
      <apidata name="BROWSER_SEARCH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.BROWSER_STOP">
      <apidata name="BROWSER_STOP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.C">
      <apidata name="C" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.CANCEL">
      <apidata name="CANCEL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.CAPITAL">
      <apidata name="CAPITAL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.CLEAR">
      <apidata name="CLEAR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.CONTROL">
      <apidata name="CONTROL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.CONVERT">
      <apidata name="CONVERT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.D">
      <apidata name="D" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.DECIMAL">
      <apidata name="DECIMAL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.DEL">
      <apidata name="DEL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.DIVIDE">
      <apidata name="DIVIDE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.DOWN">
      <apidata name="DOWN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.E">
      <apidata name="E" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.EIGHT">
      <apidata name="EIGHT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.END">
      <apidata name="END" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ESCAPE">
      <apidata name="ESCAPE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.EXECUTE">
      <apidata name="EXECUTE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F">
      <apidata name="F" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F1">
      <apidata name="F1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F10">
      <apidata name="F10" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F11">
      <apidata name="F11" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F12">
      <apidata name="F12" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F13">
      <apidata name="F13" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F14">
      <apidata name="F14" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F15">
      <apidata name="F15" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F16">
      <apidata name="F16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F17">
      <apidata name="F17" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F18">
      <apidata name="F18" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F19">
      <apidata name="F19" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F2">
      <apidata name="F2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F20">
      <apidata name="F20" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F21">
      <apidata name="F21" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F22">
      <apidata name="F22" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F23">
      <apidata name="F23" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F24">
      <apidata name="F24" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F3">
      <apidata name="F3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F4">
      <apidata name="F4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F5">
      <apidata name="F5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F6">
      <apidata name="F6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F7">
      <apidata name="F7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F8">
      <apidata name="F8" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.F9">
      <apidata name="F9" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.FINAL">
      <apidata name="FINAL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.FIVE">
      <apidata name="FIVE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.FOUR">
      <apidata name="FOUR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.FREE">
      <apidata name="FREE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.G">
      <apidata name="G" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.H">
      <apidata name="H" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.HANGEUL">
      <apidata name="HANGEUL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.HANGUL">
      <apidata name="HANGUL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.HANJA">
      <apidata name="HANJA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.HELP">
      <apidata name="HELP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.HOME">
      <apidata name="HOME" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.I">
      <apidata name="I" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ICO_00">
      <apidata name="ICO_00" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ICO_HELP">
      <apidata name="ICO_HELP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.INSERT">
      <apidata name="INSERT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.J">
      <apidata name="J" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.JUNJA">
      <apidata name="JUNJA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.K">
      <apidata name="K" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.KANA">
      <apidata name="KANA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.KANJI">
      <apidata name="KANJI" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.L">
      <apidata name="L" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LAUNCH_APP1">
      <apidata name="LAUNCH_APP1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LAUNCH_APP2">
      <apidata name="LAUNCH_APP2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LAUNCH_MAIL">
      <apidata name="LAUNCH_MAIL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LAUNCH_MEDIA_SELECT">
      <apidata name="LAUNCH_MEDIA_SELECT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LBUTTON">
      <apidata name="LBUTTON" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LCONTROL">
      <apidata name="LCONTROL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LEFT">
      <apidata name="LEFT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LMENU">
      <apidata name="LMENU" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LSHIFT">
      <apidata name="LSHIFT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.LWIN">
      <apidata name="LWIN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.M">
      <apidata name="M" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MBUTTON">
      <apidata name="MBUTTON" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MEDIA_NEXT_TRACK">
      <apidata name="MEDIA_NEXT_TRACK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MEDIA_PLAY_PAUSE">
      <apidata name="MEDIA_PLAY_PAUSE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MEDIA_PREV_TRACK">
      <apidata name="MEDIA_PREV_TRACK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MEDIA_STOP">
      <apidata name="MEDIA_STOP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MENU">
      <apidata name="MENU" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MODECHANGE">
      <apidata name="MODECHANGE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.MULTIPLY">
      <apidata name="MULTIPLY" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.N">
      <apidata name="N" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NEXT">
      <apidata name="NEXT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NINE">
      <apidata name="NINE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NONCONVERT">
      <apidata name="NONCONVERT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMLOCK">
      <apidata name="NUMLOCK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD0">
      <apidata name="NUMPAD0" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD1">
      <apidata name="NUMPAD1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD2">
      <apidata name="NUMPAD2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD3">
      <apidata name="NUMPAD3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD4">
      <apidata name="NUMPAD4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD5">
      <apidata name="NUMPAD5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD6">
      <apidata name="NUMPAD6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD7">
      <apidata name="NUMPAD7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD8">
      <apidata name="NUMPAD8" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.NUMPAD9">
      <apidata name="NUMPAD9" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.O">
      <apidata name="O" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_1">
      <apidata name="OEM_1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_102">
      <apidata name="OEM_102" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_2">
      <apidata name="OEM_2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_3">
      <apidata name="OEM_3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_4">
      <apidata name="OEM_4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_5">
      <apidata name="OEM_5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_6">
      <apidata name="OEM_6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_7">
      <apidata name="OEM_7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_8">
      <apidata name="OEM_8" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_AX">
      <apidata name="OEM_AX" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_COMMA">
      <apidata name="OEM_COMMA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_JISHO">
      <apidata name="OEM_FJ_JISHO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_LOYA">
      <apidata name="OEM_FJ_LOYA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_MASSHOU">
      <apidata name="OEM_FJ_MASSHOU" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_ROYA">
      <apidata name="OEM_FJ_ROYA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_FJ_TOUROKU">
      <apidata name="OEM_FJ_TOUROKU" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_MINUS">
      <apidata name="OEM_MINUS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_NEC_EQUAL">
      <apidata name="OEM_NEC_EQUAL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_PERIOD">
      <apidata name="OEM_PERIOD" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.OEM_PLUS">
      <apidata name="OEM_PLUS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ONE">
      <apidata name="ONE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.P">
      <apidata name="P" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.PAUSE">
      <apidata name="PAUSE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.PRINT">
      <apidata name="PRINT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.PRIOR">
      <apidata name="PRIOR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.Q">
      <apidata name="Q" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.R">
      <apidata name="R" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RBUTTON">
      <apidata name="RBUTTON" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RCONTROL">
      <apidata name="RCONTROL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RETURN">
      <apidata name="RETURN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RIGHT">
      <apidata name="RIGHT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RMENU">
      <apidata name="RMENU" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RSHIFT">
      <apidata name="RSHIFT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.RWIN">
      <apidata name="RWIN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.S">
      <apidata name="S" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SCROLL">
      <apidata name="SCROLL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SELECT">
      <apidata name="SELECT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SEPARATOR">
      <apidata name="SEPARATOR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SEVEN">
      <apidata name="SEVEN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SHIFT">
      <apidata name="SHIFT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SIX">
      <apidata name="SIX" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SLEEP">
      <apidata name="SLEEP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SNAPSHOT">
      <apidata name="SNAPSHOT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SPACE">
      <apidata name="SPACE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.SUBTRACT">
      <apidata name="SUBTRACT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.T">
      <apidata name="T" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.TAB">
      <apidata name="TAB" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.TWO">
      <apidata name="TWO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.U">
      <apidata name="U" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.UP">
      <apidata name="UP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.V">
      <apidata name="V" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.VOLUME_DOWN">
      <apidata name="VOLUME_DOWN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.VOLUME_MUTE">
      <apidata name="VOLUME_MUTE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.VOLUME_UP">
      <apidata name="VOLUME_UP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.W">
      <apidata name="W" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.X">
      <apidata name="X" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.XBUTTON1">
      <apidata name="XBUTTON1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.XBUTTON2">
      <apidata name="XBUTTON2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.Y">
      <apidata name="Y" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.Z">
      <apidata name="Z" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.ScanCode.ZERO">
      <apidata name="ZERO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsConst" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.ScanCode" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.TextClipboard">
      <apidata name="TextClipboard" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.TextClipboard.IsTextAvailable(gehtsoft.xce.conio.TextClipboardFormat)" />
        <element api="M:gehtsoft.xce.conio.TextClipboard.GetText" />
        <element api="M:gehtsoft.xce.conio.TextClipboard.GetText(gehtsoft.xce.conio.TextClipboardFormat)" />
        <element api="M:gehtsoft.xce.conio.TextClipboard.SetText(System.String)" />
        <element api="M:gehtsoft.xce.conio.TextClipboard.SetText(System.String,gehtsoft.xce.conio.TextClipboardFormat)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.TextClipboard.GetText">
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboard" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.TextClipboard.GetText(gehtsoft.xce.conio.TextClipboardFormat)">
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboard" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.TextClipboard.IsTextAvailable(gehtsoft.xce.conio.TextClipboardFormat)">
      <apidata name="IsTextAvailable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboard" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.TextClipboard.SetText(System.String)">
      <apidata name="SetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboard" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.TextClipboard.SetText(System.String,gehtsoft.xce.conio.TextClipboardFormat)">
      <apidata name="SetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboard" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.TextClipboardFormat">
      <apidata name="TextClipboardFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.conio.TextClipboardFormat.UnicodeText" />
        <element api="F:gehtsoft.xce.conio.TextClipboardFormat.Text" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.TextClipboardFormat.Text">
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.TextClipboardFormat.UnicodeText">
      <apidata name="UnicodeText" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="gehtsoft.xce.conio" module="gehtsoft.xce.conio" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio" />
        <type api="T:gehtsoft.xce.conio.TextClipboardFormat" ref="false" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.conio.win">
      <apidata name="gehtsoft.xce.conio.win" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.conio.win.IColorScheme" />
        <element api="T:gehtsoft.xce.conio.win.ColorScheme" />
        <element api="T:gehtsoft.xce.conio.win.Window" />
        <element api="T:gehtsoft.xce.conio.win.DialogItem" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemComboBox" />
        <element api="T:gehtsoft.xce.conio.win.ModalListBox" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemListBox" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" />
        <element api="T:gehtsoft.xce.conio.win.WindowBorderContainer" />
        <element api="T:gehtsoft.xce.conio.win.Dialog" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemButton" />
        <element api="T:gehtsoft.xce.conio.win.DialogItemLabel" />
        <element api="T:gehtsoft.xce.conio.win.FileDialog" />
        <element api="T:gehtsoft.xce.conio.win.FileOpenDialog" />
        <element api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" />
        <element api="T:gehtsoft.xce.conio.win.FileSaveDialog" />
        <element api="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" />
        <element api="T:gehtsoft.xce.conio.win.MessageBoxButton" />
        <element api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" />
        <element api="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo" />
        <element api="T:gehtsoft.xce.conio.win.MessageBox" />
        <element api="T:gehtsoft.xce.conio.win.PopupMenu" />
        <element api="T:gehtsoft.xce.conio.win.WindowManager" />
        <element api="T:gehtsoft.xce.conio.win.KeyboardLayout" />
        <element api="T:gehtsoft.xce.conio.win.MenuItem" />
        <element api="T:gehtsoft.xce.conio.win.SeparatorMenuItem" />
        <element api="T:gehtsoft.xce.conio.win.TitledMenuItem" />
        <element api="T:gehtsoft.xce.conio.win.CommandMenuItem" />
        <element api="T:gehtsoft.xce.conio.win.PopupMenuItem" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.conio.win.ColorScheme">
      <apidata name="ColorScheme" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.ColorScheme.#ctor" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.MenuItem" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.MenuItemSelected" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.MenuDisabledItem" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.MenuDisabledItemSelected" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.MenuHotKey" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.MenuHotKeySelected" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogBorder" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemLabelColor" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemLabelHotKey" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxColor" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxHotKey" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxHotKeyFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonColor" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonHotKey" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonHotKeyFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditColor" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditSelection" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditSelectionFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxColor" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelection" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelectionFocused" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelectionHighlighted" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelectionFocusedHighlighted" />
        <element api="P:gehtsoft.xce.conio.win.ColorScheme.Default" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ColorScheme.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.Default">
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogBorder">
      <apidata name="DialogBorder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogBorder" />
      <setter name="set_DialogBorder" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogBorder">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonColor">
      <apidata name="DialogItemButtonColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemButtonColor" />
      <setter name="set_DialogItemButtonColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonColorDisabled">
      <apidata name="DialogItemButtonColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemButtonColorDisabled" />
      <setter name="set_DialogItemButtonColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonColorFocused">
      <apidata name="DialogItemButtonColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemButtonColorFocused" />
      <setter name="set_DialogItemButtonColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonHotKey">
      <apidata name="DialogItemButtonHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemButtonHotKey" />
      <setter name="set_DialogItemButtonHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemButtonHotKeyFocused">
      <apidata name="DialogItemButtonHotKeyFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemButtonHotKeyFocused" />
      <setter name="set_DialogItemButtonHotKeyFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKeyFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxColor">
      <apidata name="DialogItemCheckBoxColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemCheckBoxColor" />
      <setter name="set_DialogItemCheckBoxColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxColorDisabled">
      <apidata name="DialogItemCheckBoxColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemCheckBoxColorDisabled" />
      <setter name="set_DialogItemCheckBoxColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxColorFocused">
      <apidata name="DialogItemCheckBoxColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemCheckBoxColorFocused" />
      <setter name="set_DialogItemCheckBoxColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxHotKey">
      <apidata name="DialogItemCheckBoxHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemCheckBoxHotKey" />
      <setter name="set_DialogItemCheckBoxHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemCheckBoxHotKeyFocused">
      <apidata name="DialogItemCheckBoxHotKeyFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemCheckBoxHotKeyFocused" />
      <setter name="set_DialogItemCheckBoxHotKeyFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKeyFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditColor">
      <apidata name="DialogItemEditColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemEditColor" />
      <setter name="set_DialogItemEditColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditColorDisabled">
      <apidata name="DialogItemEditColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemEditColorDisabled" />
      <setter name="set_DialogItemEditColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditColorFocused">
      <apidata name="DialogItemEditColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemEditColorFocused" />
      <setter name="set_DialogItemEditColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditSelection">
      <apidata name="DialogItemEditSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemEditSelection" />
      <setter name="set_DialogItemEditSelection" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelection">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemEditSelectionFocused">
      <apidata name="DialogItemEditSelectionFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemEditSelectionFocused" />
      <setter name="set_DialogItemEditSelectionFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelectionFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemLabelColor">
      <apidata name="DialogItemLabelColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemLabelColor" />
      <setter name="set_DialogItemLabelColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemLabelHotKey">
      <apidata name="DialogItemLabelHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemLabelHotKey" />
      <setter name="set_DialogItemLabelHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxColor">
      <apidata name="DialogItemListBoxColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxColor" />
      <setter name="set_DialogItemListBoxColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxColorDisabled">
      <apidata name="DialogItemListBoxColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxColorDisabled" />
      <setter name="set_DialogItemListBoxColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxColorFocused">
      <apidata name="DialogItemListBoxColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxColorFocused" />
      <setter name="set_DialogItemListBoxColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelection">
      <apidata name="DialogItemListBoxSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxSelection" />
      <setter name="set_DialogItemListBoxSelection" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelection">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelectionFocused">
      <apidata name="DialogItemListBoxSelectionFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxSelectionFocused" />
      <setter name="set_DialogItemListBoxSelectionFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelectionFocusedHighlighted">
      <apidata name="DialogItemListBoxSelectionFocusedHighlighted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxSelectionFocusedHighlighted" />
      <setter name="set_DialogItemListBoxSelectionFocusedHighlighted" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.DialogItemListBoxSelectionHighlighted">
      <apidata name="DialogItemListBoxSelectionHighlighted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DialogItemListBoxSelectionHighlighted" />
      <setter name="set_DialogItemListBoxSelectionHighlighted" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.MenuDisabledItem">
      <apidata name="MenuDisabledItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuDisabledItem" />
      <setter name="set_MenuDisabledItem" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItem">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.MenuDisabledItemSelected">
      <apidata name="MenuDisabledItemSelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuDisabledItemSelected" />
      <setter name="set_MenuDisabledItemSelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItemSelected">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.MenuHotKey">
      <apidata name="MenuHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuHotKey" />
      <setter name="set_MenuHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.MenuHotKeySelected">
      <apidata name="MenuHotKeySelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuHotKeySelected" />
      <setter name="set_MenuHotKeySelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKeySelected">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.MenuItem">
      <apidata name="MenuItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuItem" />
      <setter name="set_MenuItem" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuItem">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ColorScheme.MenuItemSelected">
      <apidata name="MenuItemSelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuItemSelected" />
      <setter name="set_MenuItemSelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuItemSelected">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.CommandMenuItem">
      <apidata name="CommandMenuItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.CommandMenuItem.#ctor(System.String,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.CommandMenuItem.#ctor(System.String,System.String,System.Int32)" />
        <element api="P:gehtsoft.xce.conio.win.CommandMenuItem.RightSide" />
        <element api="P:gehtsoft.xce.conio.win.CommandMenuItem.Command" />
        <element api="P:gehtsoft.xce.conio.win.CommandMenuItem.Checked" />
        <element api="P:gehtsoft.xce.conio.win.CommandMenuItem.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.Title" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HasHotkey" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKeyPosition" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.CommandMenuItem.#ctor(System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="command">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.CommandMenuItem.#ctor(System.String,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rightSide">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="command">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.CommandMenuItem.Checked">
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.CommandMenuItem.Command">
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Command" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.CommandMenuItem.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.CommandMenuItem.RightSide">
      <apidata name="RightSide" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RightSide" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.Dialog">
      <apidata name="Dialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
          <type api="T:gehtsoft.xce.editor.application.XceDialog" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:gehtsoft.xce.conio.win.Dialog.DialogResultOK" />
        <element api="F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.#ctor(System.String,gehtsoft.xce.conio.win.IColorScheme,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnOK" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnCancel" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.ResultCode" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Colors" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Items" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />
        <element api="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.#ctor(System.String,gehtsoft.xce.conio.win.IColorScheme,System.Boolean,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
        <parameter name="sizeable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)">
      <apidata name="AddItemBefore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
        <parameter name="next">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)">
      <apidata name="CenterButtons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="b1">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)">
      <apidata name="CenterButtons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="b1">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
        <parameter name="b2">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)">
      <apidata name="CenterButtons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="b1">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
        <parameter name="b2">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
        <parameter name="b3">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)">
      <apidata name="CenterButtons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="b1">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
        <parameter name="b2">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
        <parameter name="b3">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
        <parameter name="b4">
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])">
      <apidata name="CenterButtons" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buttons">
          <arrayOf rank="1">
            <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Dialog.Colors">
      <apidata name="Colors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Colors" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel">
      <apidata name="DialogResultCancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.Dialog.DialogResultOK">
      <apidata name="DialogResultOK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)">
      <apidata name="DoModal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)">
      <apidata name="EndDialog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="resultCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Dialog.Items">
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Items" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.OnCancel">
      <apidata name="OnCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)">
      <apidata name="OnItemActivated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)">
      <apidata name="OnItemChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)">
      <apidata name="OnItemClick" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.OnOK">
      <apidata name="OnOK" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="PretranslateOnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Dialog.ResultCode">
      <apidata name="ResultCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItem">
      <apidata name="DialogItem" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItem.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItem.Click">
      <apidata name="Click" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.Column">
      <apidata name="Column" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Column" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.Dialog">
      <apidata name="Dialog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Dialog" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey">
      <apidata name="HasHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasHotKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.Height">
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Height" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.HotKey">
      <apidata name="HotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HotKey" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement">
      <apidata name="IsInputElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsInputElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated">
      <apidata name="OnHotkeyActivated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSizeChanged">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="repos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.Row">
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItem.Width">
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Width" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemButton">
      <apidata name="DialogItemButton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.Enable(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemButton.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemButton.Title" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemButton.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemButton.IsInputElement" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemButton.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemButton.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemButton.UserData" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.Click">
      <apidata name="Click" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItem.Click">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.Enable(System.Boolean)">
      <apidata name="Enable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemButton.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.Enabled">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemButton.HasHotKey">
      <apidata name="HasHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasHotKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemButton.HotKey">
      <apidata name="HotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.HotKey">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HotKey" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemButton.IsInputElement">
      <apidata name="IsInputElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInputElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnHotkeyActivated">
      <apidata name="OnHotkeyActivated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnKillFocus">
      <apidata name="OnKillFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKillFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemButton.OnSetFocus">
      <apidata name="OnSetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSetFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemButton.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemButton.UserData">
      <apidata name="UserData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserData" />
      <setter name="set_UserData" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemButton" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemCheckBox">
      <apidata name="DialogItemCheckBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.Enable(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.Title" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.IsInputElement" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.Checked" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemCheckBox.CheckMark" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isChecked">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isChecked">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.Checked">
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.CheckMark">
      <apidata name="CheckMark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CheckMark" />
      <setter name="set_CheckMark" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.Click">
      <apidata name="Click" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItem.Click">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.Enable(System.Boolean)">
      <apidata name="Enable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.Enabled">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.HasHotKey">
      <apidata name="HasHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasHotKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.HotKey">
      <apidata name="HotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.HotKey">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HotKey" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.IsInputElement">
      <apidata name="IsInputElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInputElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnHotkeyActivated">
      <apidata name="OnHotkeyActivated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnKillFocus">
      <apidata name="OnKillFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKillFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemCheckBox.OnSetFocus">
      <apidata name="OnSetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSetFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemCheckBox.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemCheckBox" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemComboBox">
      <apidata name="DialogItemComboBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(System.String,System.Object)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.RemoveItem(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.RemoveAllItems" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnTextChangedByUser" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemComboBox.EditWidth" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemComboBox.CurSel" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemComboBox.Count" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemComboBox.Item(System.Int32)" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mText" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mOffset" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mCaret" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionStart" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionEnd" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionFirstPosition" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mEnabled" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInFocus" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInsertMode" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mReadonly" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enable(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetText(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetSel(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Text" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Readonly" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.IsInputElement" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(System.String)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(System.String,System.Object)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemComboBox.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemComboBox.CurSel">
      <apidata name="CurSel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurSel" />
      <setter name="set_CurSel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemComboBox.EditWidth">
      <apidata name="EditWidth" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.EditWidth">
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EditWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemComboBox.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.OnTextChangedByUser">
      <apidata name="OnTextChangedByUser" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnTextChangedByUser">
          <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.RemoveAllItems">
      <apidata name="RemoveAllItems" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.RemoveItem(System.Int32)">
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemComboBox.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemLabel">
      <apidata name="DialogItemLabel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItemLabel.#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemLabel.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemLabel.Title" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemLabel.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemLabel.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemLabel.IsInputElement" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemLabel.Enabled" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemLabel.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemLabel.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.Enabled">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemLabel.HasHotKey">
      <apidata name="HasHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasHotKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemLabel.HotKey">
      <apidata name="HotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.HotKey">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HotKey" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemLabel.IsInputElement">
      <apidata name="IsInputElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInputElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemLabel.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemLabel.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Title" />
      <setter name="set_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemLabel" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemListBox">
      <apidata name="DialogItemListBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.Enable(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(System.String,System.Object)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.RemoveItem(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.RemoveAllItems" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.EnsureVisible(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBox.OnSizeChanged" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBox.Count" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBox.Item(System.Int32)" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBox.CurSel" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBox.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBox.IsInputElement" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(System.String)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(System.String,System.Object)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBox.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBox.CurSel">
      <apidata name="CurSel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurSel" />
      <setter name="set_CurSel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.Enable(System.Boolean)">
      <apidata name="Enable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBox.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.Enabled">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.EnsureVisible(System.Int32)">
      <apidata name="EnsureVisible" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBox.IsInputElement">
      <apidata name="IsInputElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInputElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBox.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnKillFocus">
      <apidata name="OnKillFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKillFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnSetFocus">
      <apidata name="OnSetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSetFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.RemoveAllItems">
      <apidata name="RemoveAllItems" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.RemoveItem(System.Int32)">
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBox.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBox" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemListBoxString">
      <apidata name="DialogItemListBoxString" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.DialogItemListBoxString.#ctor(System.String,System.Object)" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBoxString.Label" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemListBoxString.UserData" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemListBoxString.#ctor(System.String,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="label">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBoxString.Label">
      <apidata name="Label" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Label" />
      <setter name="set_Label" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemListBoxString.UserData">
      <apidata name="UserData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UserData" />
      <setter name="set_UserData" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox">
      <apidata name="DialogItemSingleLineTextBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.DialogItemComboBox" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mText" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mOffset" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mCaret" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionStart" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionEnd" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionFirstPosition" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mEnabled" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInFocus" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInsertMode" />
        <element api="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mReadonly" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enable(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetText(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetSel(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnTextChangedByUser" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Text" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enabled" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Readonly" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.IsInputElement" />
        <element api="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.EditWidth" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.Click" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Row" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Column" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Height" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Width" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.Dialog" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HasHotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.DialogItem.ID" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.EditWidth">
      <apidata name="EditWidth" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_EditWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enable(System.Boolean)">
      <apidata name="Enable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enabled">
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.Enabled">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.IsInputElement">
      <apidata name="IsInputElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:gehtsoft.xce.conio.win.DialogItem.IsInputElement">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsInputElement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mCaret">
      <apidata name="mCaret" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mEnabled">
      <apidata name="mEnabled" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInFocus">
      <apidata name="mInFocus" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInsertMode">
      <apidata name="mInsertMode" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mOffset">
      <apidata name="mOffset" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mReadonly">
      <apidata name="mReadonly" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionEnd">
      <apidata name="mSelectionEnd" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionFirstPosition">
      <apidata name="mSelectionFirstPosition" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionStart">
      <apidata name="mSelectionStart" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mText">
      <apidata name="mText" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Text.StringBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnKillFocus">
      <apidata name="OnKillFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKillFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseMove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="leftButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rightButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnSetFocus">
      <apidata name="OnSetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSetFocus">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnTextChangedByUser">
      <apidata name="OnTextChangedByUser" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Readonly">
      <apidata name="Readonly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Readonly" />
      <setter name="set_Readonly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetSel(System.Int32,System.Int32)">
      <apidata name="SetSel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetText(System.String)">
      <apidata name="SetText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.FileDialog">
      <apidata name="FileDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.FileDialog.#ctor(System.String,System.String,System.String,gehtsoft.xce.conio.win.IColorScheme,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnFileChosen" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)" />
        <element api="P:gehtsoft.xce.conio.win.FileDialog.File" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnOK" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnCancel" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.ResultCode" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Colors" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Items" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />
        <element api="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.#ctor(System.String,System.String,System.String,gehtsoft.xce.conio.win.IColorScheme,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)">
      <apidata name="AddCustomButton" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)">
      <apidata name="AddLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)">
      <apidata name="CheckFileName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.FileDialog.File">
      <apidata name="File" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_File" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.OnFileChosen">
      <apidata name="OnFileChosen" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)">
      <apidata name="OnItemClick" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)">
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileDialog.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnSizeChanged">
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.FileOpenDialog">
      <apidata name="FileOpenDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.FileOpenDialog.#ctor(System.String,System.String,gehtsoft.xce.conio.win.FileOpenDialog.OpenMode,gehtsoft.xce.conio.win.IColorScheme)" />
        <element api="M:gehtsoft.xce.conio.win.FileOpenDialog.CheckFileName(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnFileChosen" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)" />
        <element api="P:gehtsoft.xce.conio.win.FileDialog.File" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnOK" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnCancel" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.ResultCode" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Colors" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Items" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />
        <element api="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileOpenDialog.#ctor(System.String,System.String,gehtsoft.xce.conio.win.FileOpenDialog.OpenMode,gehtsoft.xce.conio.win.IColorScheme)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
            <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
          </type>
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileOpenDialog.CheckFileName(System.String)">
      <apidata name="CheckFileName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)">
          <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode">
      <apidata name="OpenMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.None" />
        <element api="F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.ExistingFilesOnly" />
        <element api="F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.NewFilePromprt" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.ExistingFilesOnly">
      <apidata name="ExistingFilesOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.NewFilePromprt">
      <apidata name="NewFilePromprt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileOpenDialog" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.FileSaveDialog">
      <apidata name="FileSaveDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.FileSaveDialog.#ctor(System.String,System.String,gehtsoft.xce.conio.win.FileSaveDialog.SaveMode,gehtsoft.xce.conio.win.IColorScheme)" />
        <element api="M:gehtsoft.xce.conio.win.FileSaveDialog.CheckFileName(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnFileChosen" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)" />
        <element api="P:gehtsoft.xce.conio.win.FileDialog.File" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnOK" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnCancel" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.ResultCode" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Colors" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Items" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />
        <element api="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileSaveDialog.#ctor(System.String,System.String,gehtsoft.xce.conio.win.FileSaveDialog.SaveMode,gehtsoft.xce.conio.win.IColorScheme)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" ref="false">
            <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
          </type>
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.FileSaveDialog.CheckFileName(System.String)">
      <apidata name="CheckFileName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)">
          <type api="T:gehtsoft.xce.conio.win.FileDialog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode">
      <apidata name="SaveMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode.None" />
        <element api="F:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode.OverwritePrompt" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode.OverwritePrompt">
      <apidata name="OverwritePrompt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" ref="false">
          <type api="T:gehtsoft.xce.conio.win.FileSaveDialog" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.IColorScheme">
      <apidata name="IColorScheme" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:gehtsoft.xce.conio.win.ColorScheme" ref="true" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </implementors>
      <elements>
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.MenuItem" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.MenuItemSelected" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItem" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItemSelected" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKey" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKeySelected" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogBorder" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelColor" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelHotKey" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColor" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKey" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKeyFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColor" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKey" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKeyFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColor" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelection" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelectionFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColor" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorDisabled" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelection" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocused" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted" />
        <element api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogBorder">
      <apidata name="DialogBorder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogBorder" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColor">
      <apidata name="DialogItemButtonColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorDisabled">
      <apidata name="DialogItemButtonColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorFocused">
      <apidata name="DialogItemButtonColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKey">
      <apidata name="DialogItemButtonHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKeyFocused">
      <apidata name="DialogItemButtonHotKeyFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonHotKeyFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColor">
      <apidata name="DialogItemCheckBoxColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorDisabled">
      <apidata name="DialogItemCheckBoxColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorFocused">
      <apidata name="DialogItemCheckBoxColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKey">
      <apidata name="DialogItemCheckBoxHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKeyFocused">
      <apidata name="DialogItemCheckBoxHotKeyFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxHotKeyFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColor">
      <apidata name="DialogItemEditColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorDisabled">
      <apidata name="DialogItemEditColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorFocused">
      <apidata name="DialogItemEditColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelection">
      <apidata name="DialogItemEditSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditSelection" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelectionFocused">
      <apidata name="DialogItemEditSelectionFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditSelectionFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelColor">
      <apidata name="DialogItemLabelColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemLabelColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelHotKey">
      <apidata name="DialogItemLabelHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemLabelHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColor">
      <apidata name="DialogItemListBoxColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorDisabled">
      <apidata name="DialogItemListBoxColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorFocused">
      <apidata name="DialogItemListBoxColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelection">
      <apidata name="DialogItemListBoxSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelection" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocused">
      <apidata name="DialogItemListBoxSelectionFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelectionFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted">
      <apidata name="DialogItemListBoxSelectionFocusedHighlighted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelectionFocusedHighlighted" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted">
      <apidata name="DialogItemListBoxSelectionHighlighted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelectionHighlighted" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItem">
      <apidata name="MenuDisabledItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MenuDisabledItem" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItemSelected">
      <apidata name="MenuDisabledItemSelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MenuDisabledItemSelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKey">
      <apidata name="MenuHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MenuHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKeySelected">
      <apidata name="MenuHotKeySelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MenuHotKeySelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.MenuItem">
      <apidata name="MenuItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MenuItem" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.IColorScheme.MenuItemSelected">
      <apidata name="MenuItemSelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MenuItemSelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.KeyboardLayout">
      <apidata name="KeyboardLayout" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:gehtsoft.xce.conio.win.KeyboardLayout.LayoutCode" />
        <element api="P:gehtsoft.xce.conio.win.KeyboardLayout.LayoutName" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.KeyboardLayout.LayoutCode">
      <apidata name="LayoutCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LayoutCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.KeyboardLayout" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.KeyboardLayout.LayoutName">
      <apidata name="LayoutName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LayoutName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.KeyboardLayout" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.MenuItem">
      <apidata name="MenuItem" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.SeparatorMenuItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.MenuItem.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.MenuItem.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.MessageBox">
      <apidata name="MessageBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.MessageBox.Show(gehtsoft.xce.conio.win.WindowManager,gehtsoft.xce.conio.win.IColorScheme,System.String,System.String,gehtsoft.xce.conio.win.MessageBoxButtonInfo[])" />
        <element api="M:gehtsoft.xce.conio.win.MessageBox.Show(gehtsoft.xce.conio.win.WindowManager,gehtsoft.xce.conio.win.IColorScheme,System.String,System.String,gehtsoft.xce.conio.win.MessageBoxButtonSet)" />
        <element api="M:gehtsoft.xce.conio.win.MessageBox.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.MessageBox.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.MessageBox.Show(gehtsoft.xce.conio.win.WindowManager,gehtsoft.xce.conio.win.IColorScheme,System.String,System.String,gehtsoft.xce.conio.win.MessageBoxButtonInfo[])">
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mgr">
          <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buttons">
          <arrayOf rank="1">
            <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.MessageBox.Show(gehtsoft.xce.conio.win.WindowManager,gehtsoft.xce.conio.win.IColorScheme,System.String,System.String,gehtsoft.xce.conio.win.MessageBoxButtonSet)">
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mgr">
          <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buttonSet">
          <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBox" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.MessageBoxButton">
      <apidata name="MessageBoxButton" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Ok" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Cancel" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Yes" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.No" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Abort" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Retry" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Ignore" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Option1" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Option2" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Option3" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Option4" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButton.Unknown" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Abort">
      <apidata name="Abort" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Cancel">
      <apidata name="Cancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Ignore">
      <apidata name="Ignore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.No">
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Ok">
      <apidata name="Ok" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Option1">
      <apidata name="Option1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Option2">
      <apidata name="Option2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Option3">
      <apidata name="Option3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Option4">
      <apidata name="Option4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Retry">
      <apidata name="Retry" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Unknown">
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButton.Yes">
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo">
      <apidata name="MessageBoxButtonInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.MessageBoxButtonInfo.#ctor(System.String,gehtsoft.xce.conio.win.MessageBoxButton)" />
        <element api="P:gehtsoft.xce.conio.win.MessageBoxButtonInfo.Title" />
        <element api="P:gehtsoft.xce.conio.win.MessageBoxButtonInfo.ID" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.MessageBoxButtonInfo.#ctor(System.String,gehtsoft.xce.conio.win.MessageBoxButton)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ID">
          <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.MessageBoxButtonInfo.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ID" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButton" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.MessageBoxButtonInfo.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.MessageBoxButtonSet">
      <apidata name="MessageBoxButtonSet" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.Ok" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.OkCancel" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesNo" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesCancel" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesNoCancel" />
        <element api="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.AbortRetryIgnore" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.AbortRetryIgnore">
      <apidata name="AbortRetryIgnore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.Ok">
      <apidata name="Ok" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.OkCancel">
      <apidata name="OkCancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesCancel">
      <apidata name="YesCancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesNo">
      <apidata name="YesNo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesNoCancel">
      <apidata name="YesNoCancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" ref="false" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.ModalListBox">
      <apidata name="ModalListBox" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.AddItem(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.AddItem(System.String,System.Object)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.RemoveItem(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.RemoveAllItems" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.EnsureVisible(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.win.IColorScheme)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.DoModal(gehtsoft.xce.conio.win.WindowManager)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.ModalListBox.OnSizeChanged" />
        <element api="P:gehtsoft.xce.conio.win.ModalListBox.Count" />
        <element api="P:gehtsoft.xce.conio.win.ModalListBox.Item(System.Int32)" />
        <element api="P:gehtsoft.xce.conio.win.ModalListBox.CurSel" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.win.IColorScheme)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.AddItem(System.String)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.AddItem(System.String,System.Object)">
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ModalListBox.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ModalListBox.CurSel">
      <apidata name="CurSel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurSel" />
      <setter name="set_CurSel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.DoModal(gehtsoft.xce.conio.win.WindowManager)">
      <apidata name="DoModal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mgr">
          <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.EnsureVisible(System.Int32)">
      <apidata name="EnsureVisible" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.ModalListBox.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnClose">
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnClose">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="_row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnScreenSizeChanged(System.Int32,System.Int32)">
      <apidata name="OnScreenSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSizeChanged">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.RemoveAllItems">
      <apidata name="RemoveAllItems" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.RemoveItem(System.Int32)">
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.conio.win.DialogItemListBoxString" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.ModalListBox.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.PopupMenu">
      <apidata name="PopupMenu" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:gehtsoft.xce.conio.win.PopupMenu.PopupCommandNone" />
        <element api="F:gehtsoft.xce.conio.win.PopupMenu.PopupCommandEscape" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.#ctor(gehtsoft.xce.conio.win.PopupMenuItem,gehtsoft.xce.conio.win.IColorScheme,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenu.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="P:gehtsoft.xce.conio.win.PopupMenu.CommandChosen" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.#ctor(gehtsoft.xce.conio.win.PopupMenuItem,gehtsoft.xce.conio.win.IColorScheme,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="menu">
          <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
        </parameter>
        <parameter name="colors">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </parameter>
        <parameter name="vertical">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.PopupMenu.CommandChosen">
      <apidata name="CommandChosen" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CommandChosen" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.OnClose">
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnClose">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseRButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenu.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.PopupMenu.PopupCommandEscape">
      <apidata name="PopupCommandEscape" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.conio.win.PopupMenu.PopupCommandNone">
      <apidata name="PopupCommandNone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.PopupMenuItem">
      <apidata name="PopupMenuItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.#ctor(System.String)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.addItem(gehtsoft.xce.conio.win.MenuItem)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.createCommand(System.String,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.createCommand(System.String,System.String,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.createSeparator" />
        <element api="M:gehtsoft.xce.conio.win.PopupMenuItem.createPopup(System.String)" />
        <element api="P:gehtsoft.xce.conio.win.PopupMenuItem.Count" />
        <element api="P:gehtsoft.xce.conio.win.PopupMenuItem.Item(System.Int32)" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.Title" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HasHotkey" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKeyPosition" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.addItem(gehtsoft.xce.conio.win.MenuItem)">
      <apidata name="addItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.PopupMenuItem.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.createCommand(System.String,System.Int32)">
      <apidata name="createCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="command">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.createCommand(System.String,System.String,System.Int32)">
      <apidata name="createCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rightside">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="command">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.createPopup(System.String)">
      <apidata name="createPopup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.createSeparator">
      <apidata name="createSeparator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.PopupMenuItem.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.PopupMenuItem.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.SeparatorMenuItem">
      <apidata name="SeparatorMenuItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.SeparatorMenuItem.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.SeparatorMenuItem.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.SeparatorMenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.TitledMenuItem">
      <apidata name="TitledMenuItem" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.MenuItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.CommandMenuItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.PopupMenuItem" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.Title" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HasHotkey" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKey" />
        <element api="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKeyPosition" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.TitledMenuItem.HasHotkey">
      <apidata name="HasHotkey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasHotkey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKey">
      <apidata name="HotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HotKey" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.TitledMenuItem.HotKeyPosition">
      <apidata name="HotKeyPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HotKeyPosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.TitledMenuItem.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.TitledMenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.Window">
      <apidata name="Window" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.DialogItem" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.ModalListBox" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.Window.#ctor" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)">
      <apidata name="childFromPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="windowRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="windowColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)">
      <apidata name="childFromPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="windowRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="windowColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="visibleOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Column">
      <apidata name="Column" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Column" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Exists">
      <apidata name="Exists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exists" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Height">
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Height" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.invalidate">
      <apidata name="invalidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnClose">
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged">
      <apidata name="OnKeyboardLayoutChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnKillFocus">
      <apidata name="OnKillFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseMove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="leftButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rightButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseRButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseRButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)">
      <apidata name="OnScreenSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnSetFocus">
      <apidata name="OnSetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)">
      <apidata name="OnShow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="visible">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Parent">
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <apidata name="parentToWindow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="windowRow" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="windowColumn" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Row">
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <apidata name="screenToWindow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="screenRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="screenColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="windowRow" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="windowColumn" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)">
      <apidata name="show" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="visible">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Valid">
      <apidata name="Valid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Valid" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Visible">
      <apidata name="Visible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Visible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.Width">
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Width" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.Window.WindowManager">
      <apidata name="WindowManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowManager" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <apidata name="windowToParent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="windowRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="windowColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="parentRow" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="parentColumn" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <apidata name="windowToScreen" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="windowRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="windowColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="screenRow" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="screenColumn" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.WindowBorderContainer">
      <apidata name="WindowBorderContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.#ctor(System.String,gehtsoft.xce.conio.BoxBorder,System.Int16,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.#ctor(System.String,gehtsoft.xce.conio.BoxBorder,System.Int16,gehtsoft.xce.conio.win.Window,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />
        <element api="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.#ctor(System.String,gehtsoft.xce.conio.BoxBorder,System.Int16,gehtsoft.xce.conio.win.Window,System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="border">
          <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
        </parameter>
        <parameter name="borderColor">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="clientArea">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
        <parameter name="moveable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="sizeable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.#ctor(System.String,gehtsoft.xce.conio.BoxBorder,System.Int16,System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="border">
          <type api="T:gehtsoft.xce.conio.BoxBorder" ref="true" />
        </parameter>
        <parameter name="borderColor">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="moveable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="sizeable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)">
      <apidata name="attachClientArea" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="clientArea">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <apidata name="getClientArea" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="row" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="col" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="height" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="width" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseMove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="leftButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rightButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSizeChanged">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Title" />
      <setter name="set_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.conio.win.WindowManager">
      <apidata name="WindowManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.conio.win.WindowManager.#ctor(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.#ctor(System.Boolean,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.create(gehtsoft.xce.conio.win.Window,gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.doModal(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.showPopupMenu(gehtsoft.xce.conio.win.PopupMenu,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.createModal(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.close(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.setFocus(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.getFocus" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.captureMouse(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.releaseMouse(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.windowFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.windowFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.bringToFront(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.pumpMessage(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onKeyReleased(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onGetFocus(System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.onScreenBufferChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.setCaretPos(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.showCaret(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowManager.setCaretType(System.Int32,System.Boolean)" />
        <element api="P:gehtsoft.xce.conio.win.WindowManager.FastDrawMode" />
        <element api="P:gehtsoft.xce.conio.win.WindowManager.ScreenHeight" />
        <element api="P:gehtsoft.xce.conio.win.WindowManager.ScreenWidth" />
        <element api="P:gehtsoft.xce.conio.win.WindowManager.KeyboardLayout" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="save">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.#ctor(System.Boolean,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="save">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.bringToFront(gehtsoft.xce.conio.win.Window)">
      <apidata name="bringToFront" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.captureMouse(gehtsoft.xce.conio.win.Window)">
      <apidata name="captureMouse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.close(gehtsoft.xce.conio.win.Window)">
      <apidata name="close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.create(gehtsoft.xce.conio.win.Window,gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
        <parameter name="parent">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.createModal(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="createModal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.doModal(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)">
      <apidata name="doModal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.WindowManager.FastDrawMode">
      <apidata name="FastDrawMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FastDrawMode" />
      <setter name="set_FastDrawMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.getFocus">
      <apidata name="getFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.WindowManager.KeyboardLayout">
      <apidata name="KeyboardLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyboardLayout" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.KeyboardLayout" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onGetFocus(System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onGetFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onGetFocus(System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onKeyReleased(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onKeyReleased" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onKeyReleased(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseLButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseMove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseRButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseRButtonUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseWheelDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="onMouseWheelUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.onScreenBufferChanged(System.Int32,System.Int32)">
      <apidata name="onScreenBufferChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.conio.ConsoleInputListener.onScreenBufferChanged(System.Int32,System.Int32)">
          <type api="T:gehtsoft.xce.conio.ConsoleInputListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.pumpMessage(System.Int32)">
      <apidata name="pumpMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.releaseMouse(gehtsoft.xce.conio.win.Window)">
      <apidata name="releaseMouse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.WindowManager.ScreenHeight">
      <apidata name="ScreenHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScreenHeight" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.conio.win.WindowManager.ScreenWidth">
      <apidata name="ScreenWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScreenWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.setCaretPos(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32)">
      <apidata name="setCaretPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="caretWindow">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.setCaretType(System.Int32,System.Boolean)">
      <apidata name="setCaretType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="caretSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="show">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.setFocus(gehtsoft.xce.conio.win.Window)">
      <apidata name="setFocus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.showCaret(System.Boolean)">
      <apidata name="showCaret" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="show">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.showPopupMenu(gehtsoft.xce.conio.win.PopupMenu,System.Int32,System.Int32)">
      <apidata name="showPopupMenu" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="menu">
          <type api="T:gehtsoft.xce.conio.win.PopupMenu" ref="true" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.windowFromPos(System.Int32,System.Int32)">
      <apidata name="windowFromPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.conio.win.WindowManager.windowFromPos(System.Int32,System.Int32,System.Boolean)">
      <apidata name="windowFromPos" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="visibleOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.conio.win" module="gehtsoft.xce.conio.win" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.conio.win" />
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.editor.application">
      <apidata name="gehtsoft.xce.editor.application" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.editor.application.Application" />
        <element api="T:gehtsoft.xce.editor.application.AfterOpenWindowHook" />
        <element api="T:gehtsoft.xce.editor.application.BeforeCloseWindowHook" />
        <element api="T:gehtsoft.xce.editor.application.BeforeSaveWindowHook" />
        <element api="T:gehtsoft.xce.editor.application.AfterPaintWindowHook" />
        <element api="T:gehtsoft.xce.editor.application.TimerHook" />
        <element api="T:gehtsoft.xce.editor.application.KeyPressedHook" />
        <element api="T:gehtsoft.xce.editor.application.IdleHook" />
        <element api="T:gehtsoft.xce.editor.application.IEditorExtension" />
        <element api="T:gehtsoft.xce.editor.application.XceDialog" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.editor.application.AfterOpenWindowHook">
      <apidata name="AfterOpenWindowHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.AfterPaintWindowHook">
      <apidata name="AfterPaintWindowHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.Application">
      <apidata name="Application" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.editor.application.Application.InitApplication(System.String[])" />
        <element api="M:gehtsoft.xce.editor.application.Application.ReleaseApplication" />
        <element api="M:gehtsoft.xce.editor.application.Application.PumpMessages" />
        <element api="M:gehtsoft.xce.editor.application.Application.PostQuitMessage" />
        <element api="M:gehtsoft.xce.editor.application.Application.ShowMessage(System.String,System.String)" />
        <element api="M:gehtsoft.xce.editor.application.Application.ShowYesNoMessage(System.String,System.String)" />
        <element api="M:gehtsoft.xce.editor.application.Application.ShowMainMenu" />
        <element api="M:gehtsoft.xce.editor.application.Application.OpenFile(System.String)" />
        <element api="M:gehtsoft.xce.editor.application.Application.CloseWindow(gehtsoft.xce.editor.textwindow.TextWindow)" />
        <element api="M:gehtsoft.xce.editor.application.Application.ActivateWindow(gehtsoft.xce.editor.textwindow.TextWindow)" />
        <element api="M:gehtsoft.xce.editor.application.Application.repaint" />
        <element api="M:gehtsoft.xce.editor.application.Application.#ctor" />
        <element api="P:gehtsoft.xce.editor.application.Application.WindowManager" />
        <element api="P:gehtsoft.xce.editor.application.Application.ColorScheme" />
        <element api="P:gehtsoft.xce.editor.application.Application.ApplicationPath" />
        <element api="P:gehtsoft.xce.editor.application.Application.Configuration" />
        <element api="P:gehtsoft.xce.editor.application.Application.ColorerFactory" />
        <element api="P:gehtsoft.xce.editor.application.Application.Commands" />
        <element api="P:gehtsoft.xce.editor.application.Application.ActiveWindow" />
        <element api="P:gehtsoft.xce.editor.application.Application.TextWindows" />
        <element api="E:gehtsoft.xce.editor.application.Application.AfterOpenWindowEvent" />
        <element api="E:gehtsoft.xce.editor.application.Application.BeforeCloseWindowEvent" />
        <element api="E:gehtsoft.xce.editor.application.Application.TimerEvent" />
        <element api="E:gehtsoft.xce.editor.application.Application.KeyPressedEvent" />
        <element api="E:gehtsoft.xce.editor.application.Application.IdleEvent" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.ActivateWindow(gehtsoft.xce.editor.textwindow.TextWindow)">
      <apidata name="ActivateWindow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="w">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.ActiveWindow">
      <apidata name="ActiveWindow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveWindow" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.application.Application.AfterOpenWindowEvent">
      <apidata name="AfterOpenWindowEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AfterOpenWindowEvent" />
      <remover name="remove_AfterOpenWindowEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.AfterOpenWindowHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.ApplicationPath">
      <apidata name="ApplicationPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.application.Application.BeforeCloseWindowEvent">
      <apidata name="BeforeCloseWindowEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeforeCloseWindowEvent" />
      <remover name="remove_BeforeCloseWindowEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.BeforeCloseWindowHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.CloseWindow(gehtsoft.xce.editor.textwindow.TextWindow)">
      <apidata name="CloseWindow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="w">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.ColorerFactory">
      <apidata name="ColorerFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColorerFactory" />
      <returns>
        <type api="T:gehtsoft.xce.colorer.ColorerFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.ColorScheme">
      <apidata name="ColorScheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColorScheme" />
      <returns>
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.Commands">
      <apidata name="Commands" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Commands" />
      <returns>
        <type api="T:gehtsoft.xce.editor.command.EditorCommandCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.Configuration">
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.application.Application.IdleEvent">
      <apidata name="IdleEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_IdleEvent" />
      <remover name="remove_IdleEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.IdleHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.InitApplication(System.String[])">
      <apidata name="InitApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commandLine">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.application.Application.KeyPressedEvent">
      <apidata name="KeyPressedEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_KeyPressedEvent" />
      <remover name="remove_KeyPressedEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.KeyPressedHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.OpenFile(System.String)">
      <apidata name="OpenFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.PostQuitMessage">
      <apidata name="PostQuitMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.PumpMessages">
      <apidata name="PumpMessages" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.ReleaseApplication">
      <apidata name="ReleaseApplication" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.repaint">
      <apidata name="repaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.ShowMainMenu">
      <apidata name="ShowMainMenu" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.ShowMessage(System.String,System.String)">
      <apidata name="ShowMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.Application.ShowYesNoMessage(System.String,System.String)">
      <apidata name="ShowYesNoMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.TextWindows">
      <apidata name="TextWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TextWindows" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.application.Application.TimerEvent">
      <apidata name="TimerEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TimerEvent" />
      <remover name="remove_TimerEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.TimerHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.application.Application.WindowManager">
      <apidata name="WindowManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowManager" />
      <returns>
        <type api="T:gehtsoft.xce.conio.win.WindowManager" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.BeforeCloseWindowHook">
      <apidata name="BeforeCloseWindowHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.BeforeSaveWindowHook">
      <apidata name="BeforeSaveWindowHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="window">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.IdleHook">
      <apidata name="IdleHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.IEditorExtension">
      <apidata name="IEditorExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:gehtsoft.xce.extension.script" ref="true" />
      </implementors>
      <elements>
        <element api="M:gehtsoft.xce.editor.application.IEditorExtension.Initialize(gehtsoft.xce.editor.application.Application)" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.IEditorExtension.Initialize(gehtsoft.xce.editor.application.Application)">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.IEditorExtension" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.KeyPressedHook">
      <apidata name="KeyPressedHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="handled">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.TimerHook">
      <apidata name="TimerHook" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.application.XceDialog">
      <apidata name="XceDialog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.WindowBorderContainer" ref="true" />
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:gehtsoft.xce.editor.application.XceDialog.mApplication" />
        <element api="M:gehtsoft.xce.editor.application.XceDialog.#ctor(gehtsoft.xce.editor.application.Application,System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.application.XceDialog.DoModal" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)" />
        <element api="M:gehtsoft.xce.editor.application.XceDialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnOK" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.OnCancel" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.ResultCode" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Colors" />
        <element api="P:gehtsoft.xce.conio.win.Dialog.Items" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnCreate" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnSizeChanged" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />
        <element api="P:gehtsoft.xce.conio.win.WindowBorderContainer.Title" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.XceDialog.#ctor(gehtsoft.xce.editor.application.Application,System.String,System.Boolean,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sizeable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.XceDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.XceDialog.DoModal">
      <apidata name="DoModal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.XceDialog" ref="true" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.application.XceDialog.mApplication">
      <apidata name="mApplication" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.XceDialog" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.application.XceDialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="PretranslateOnKeyPressed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Dialog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="scanCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="character">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.application" />
        <type api="T:gehtsoft.xce.editor.application.XceDialog" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.editor.command">
      <apidata name="gehtsoft.xce.editor.command" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.editor.command.EditorCommandCollection" />
        <element api="T:gehtsoft.xce.editor.command.IEditorCommand" />
        <element api="T:gehtsoft.xce.editor.command.IDialogCommand" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.editor.command.EditorCommandCollection">
      <apidata name="EditorCommandCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.command.EditorCommandCollection.AddCommand(gehtsoft.xce.editor.command.IEditorCommand)" />
        <element api="M:gehtsoft.xce.editor.command.EditorCommandCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.command.EditorCommandCollection.GetEnumerator" />
        <element api="P:gehtsoft.xce.editor.command.EditorCommandCollection.Item(System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.EditorCommandCollection.AddCommand(gehtsoft.xce.editor.command.IEditorCommand)">
      <apidata name="AddCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.EditorCommandCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.EditorCommandCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.EditorCommandCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.command.EditorCommandCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.EditorCommandCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.EditorCommandCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.EditorCommandCollection" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.command.IDialogCommand">
      <apidata name="IDialogCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:gehtsoft.xce.editor.command.IDialogCommand.DialogExecute(gehtsoft.xce.editor.application.Application,gehtsoft.xce.editor.application.XceDialog,System.String)" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.IDialogCommand.DialogExecute(gehtsoft.xce.editor.application.Application,gehtsoft.xce.editor.application.XceDialog,System.String)">
      <apidata name="DialogExecute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
        <parameter name="dialog">
          <type api="T:gehtsoft.xce.editor.application.XceDialog" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.IDialogCommand" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.command.IEditorCommand">
      <apidata name="IEditorCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:gehtsoft.xce.editor.command.IEditorCommand.Execute(gehtsoft.xce.editor.application.Application,System.String)" />
        <element api="M:gehtsoft.xce.editor.command.IEditorCommand.IsChecked(gehtsoft.xce.editor.application.Application,System.String)" />
        <element api="M:gehtsoft.xce.editor.command.IEditorCommand.IsEnabled(gehtsoft.xce.editor.application.Application,System.String)" />
        <element api="P:gehtsoft.xce.editor.command.IEditorCommand.Name" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.IEditorCommand.Execute(gehtsoft.xce.editor.application.Application,System.String)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.IEditorCommand.IsChecked(gehtsoft.xce.editor.application.Application,System.String)">
      <apidata name="IsChecked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.command.IEditorCommand.IsEnabled(gehtsoft.xce.editor.application.Application,System.String)">
      <apidata name="IsEnabled" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.command.IEditorCommand.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.command" />
        <type api="T:gehtsoft.xce.editor.command.IEditorCommand" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.editor.configuration">
      <apidata name="gehtsoft.xce.editor.configuration" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" />
        <element api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" />
        <element api="T:gehtsoft.xce.editor.configuration.XceConfiguration" />
        <element api="T:gehtsoft.xce.editor.configuration.XceColorScheme" />
        <element api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.editor.configuration.FileTypeInfo">
      <apidata name="FileTypeInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Match(System.String)" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfo.IsSpellCheckRegion(gehtsoft.xce.colorer.SyntaxHighlighterRegion)" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Dispose" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Finalize" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.Encoding" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.NeedSpellcheck" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.IgnoreBOM" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.TrimEolSpace" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.TabSize" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.AutoIdent" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfo.DefaultSpellChecker" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.AutoIdent">
      <apidata name="AutoIdent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AutoIdent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.DefaultSpellChecker">
      <apidata name="DefaultSpellChecker" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultSpellChecker" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="disposal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.Encoding">
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Encoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.IgnoreBOM">
      <apidata name="IgnoreBOM" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IgnoreBOM" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfo.IsSpellCheckRegion(gehtsoft.xce.colorer.SyntaxHighlighterRegion)">
      <apidata name="IsSpellCheckRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="region">
          <type api="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfo.Match(System.String)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.NeedSpellcheck">
      <apidata name="NeedSpellcheck" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NeedSpellcheck" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.TabSize">
      <apidata name="TabSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TabSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfo.TrimEolSpace">
      <apidata name="TrimEolSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TrimEolSpace" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection">
      <apidata name="FileTypeInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Find(System.String)" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Dispose" />
        <element api="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Finalize" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Count" />
        <element api="P:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Find(System.String)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.FileTypeInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.configuration.XceColorScheme">
      <apidata name="XceColorScheme" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
      </implements>
      <elements>
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuItem" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuItemSelected" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuDisabledItem" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuDisabledItemSelected" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuHotKey" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuHotKeySelected" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogBorder" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemLabelColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemLabelHotKey" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColorFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxHotKey" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxHotKeyFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColorDisabled" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColorDisabled" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColorFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonHotKey" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonHotKeyFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorDisabled" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditSelection" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditSelectionFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorPair" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorError" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorKeyword" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColorDisabled" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColorFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelection" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionFocused" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionFocusedHighlighted" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionHighlighted" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.TextColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.CurrentLineTextColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.BlockTextColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.CurrentLineBlockTextColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.StatusLineColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.SpellCheckErrorColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.PairHighlightColor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceColorScheme.SearchHighlight" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.BlockTextColor">
      <apidata name="BlockTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockTextColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.CurrentLineBlockTextColor">
      <apidata name="CurrentLineBlockTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentLineBlockTextColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.CurrentLineTextColor">
      <apidata name="CurrentLineTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentLineTextColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogBorder">
      <apidata name="DialogBorder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogBorder" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogBorder">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColor">
      <apidata name="DialogItemButtonColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColorDisabled">
      <apidata name="DialogItemButtonColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColorFocused">
      <apidata name="DialogItemButtonColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonHotKey">
      <apidata name="DialogItemButtonHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonHotKeyFocused">
      <apidata name="DialogItemButtonHotKeyFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemButtonHotKeyFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKeyFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColor">
      <apidata name="DialogItemCheckBoxColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColorDisabled">
      <apidata name="DialogItemCheckBoxColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColorFocused">
      <apidata name="DialogItemCheckBoxColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxHotKey">
      <apidata name="DialogItemCheckBoxHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxHotKeyFocused">
      <apidata name="DialogItemCheckBoxHotKeyFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemCheckBoxHotKeyFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKeyFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColor">
      <apidata name="DialogItemEditColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorDisabled">
      <apidata name="DialogItemEditColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorError">
      <apidata name="DialogItemEditColorError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorError" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorFocused">
      <apidata name="DialogItemEditColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorKeyword">
      <apidata name="DialogItemEditColorKeyword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorKeyword" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorPair">
      <apidata name="DialogItemEditColorPair" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditColorPair" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditSelection">
      <apidata name="DialogItemEditSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditSelection" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelection">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditSelectionFocused">
      <apidata name="DialogItemEditSelectionFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemEditSelectionFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelectionFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemLabelColor">
      <apidata name="DialogItemLabelColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemLabelColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemLabelHotKey">
      <apidata name="DialogItemLabelHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemLabelHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColor">
      <apidata name="DialogItemListBoxColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColor">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColorDisabled">
      <apidata name="DialogItemListBoxColorDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxColorDisabled" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorDisabled">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColorFocused">
      <apidata name="DialogItemListBoxColorFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxColorFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelection">
      <apidata name="DialogItemListBoxSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelection" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelection">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionFocused">
      <apidata name="DialogItemListBoxSelectionFocused" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelectionFocused" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocused">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionFocusedHighlighted">
      <apidata name="DialogItemListBoxSelectionFocusedHighlighted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelectionFocusedHighlighted" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionHighlighted">
      <apidata name="DialogItemListBoxSelectionHighlighted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DialogItemListBoxSelectionHighlighted" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuDisabledItem">
      <apidata name="MenuDisabledItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MenuDisabledItem" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItem">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuDisabledItemSelected">
      <apidata name="MenuDisabledItemSelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MenuDisabledItemSelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItemSelected">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuHotKey">
      <apidata name="MenuHotKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MenuHotKey" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKey">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuHotKeySelected">
      <apidata name="MenuHotKeySelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MenuHotKeySelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKeySelected">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuItem">
      <apidata name="MenuItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MenuItem" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuItem">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuItemSelected">
      <apidata name="MenuItemSelected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_MenuItemSelected" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.conio.win.IColorScheme.MenuItemSelected">
          <type api="T:gehtsoft.xce.conio.win.IColorScheme" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.PairHighlightColor">
      <apidata name="PairHighlightColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PairHighlightColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.SearchHighlight">
      <apidata name="SearchHighlight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SearchHighlight" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.SpellCheckErrorColor">
      <apidata name="SpellCheckErrorColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SpellCheckErrorColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.StatusLineColor">
      <apidata name="StatusLineColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusLineColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceColorScheme.TextColor">
      <apidata name="TextColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TextColor" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceColorScheme" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.configuration.XceConfiguration">
      <apidata name="XceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.MenuName" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.KeymapName" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.ColorerPath" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.ColorerColorScheme" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.ColorerBackParse" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.Item(System.String)" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.PersistentBlock" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfiguration.SpellCheckers" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.ColorerBackParse">
      <apidata name="ColorerBackParse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColorerBackParse" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.ColorerColorScheme">
      <apidata name="ColorerColorScheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColorerColorScheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.ColorerPath">
      <apidata name="ColorerPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ColorerPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.configuration.ProfileSection" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.KeymapName">
      <apidata name="KeymapName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeymapName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.MenuName">
      <apidata name="MenuName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MenuName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.PersistentBlock">
      <apidata name="PersistentBlock" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PersistentBlock" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfiguration.SpellCheckers">
      <apidata name="SpellCheckers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SpellCheckers" />
      <returns>
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection">
      <apidata name="XceConfigurationSpellcheckerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.spellcheck.ISpellchecker" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.#ctor" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.Count" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.Item(System.Int32)" />
        <element api="P:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.Item(System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.spellcheck.ISpellchecker" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.spellcheck.ISpellchecker" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.spellcheck.ISpellchecker" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.spellcheck.ISpellchecker" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.configuration" />
        <type api="T:gehtsoft.xce.editor.configuration.XceConfigurationSpellcheckerCollection" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.editor.search">
      <apidata name="gehtsoft.xce.editor.search" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.editor.search.XceSearchController" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.editor.search.XceSearchController">
      <apidata name="XceSearchController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.editor.search.XceSearchController.Search(gehtsoft.xce.editor.application.Application,System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.search.XceSearchController.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.search" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.search.XceSearchController.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.search" />
        <type api="T:gehtsoft.xce.editor.search.XceSearchController" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.search.XceSearchController.Search(gehtsoft.xce.editor.application.Application,System.String,System.Boolean)">
      <apidata name="Search" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
        <parameter name="re">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.search" />
        <type api="T:gehtsoft.xce.editor.search.XceSearchController" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.editor.textwindow">
      <apidata name="gehtsoft.xce.editor.textwindow" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" />
        <element api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" />
        <element api="T:gehtsoft.xce.editor.textwindow.TextWindow" />
        <element api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.editor.textwindow.TextWindow">
      <apidata name="TextWindow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.FireSaveWindowEvent" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.Dispose" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnPaint(gehtsoft.xce.conio.Canvas)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnCreate" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnSizeChanged" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.EnsureCursorVisible" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.ShowCaret" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnActivate" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.DeselectBlock" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.StartBlock(gehtsoft.xce.editor.textwindow.TextWindowBlock,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.EndBlock(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char[],System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.String,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.BeforeModify" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.DeleteAtCursor(System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.DeleteLineAtCursor" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.JoinNextLineAtCursor" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.SplitLineAtCursor" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.HighlightRangePosition" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.HighlightRangeLength" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.SaveRequired" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockType" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockLineStart" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockLineEnd" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockColumnStart" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockColumnEnd" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow._BlockLineEnd" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow._BlockColumnStart" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow._BlockColumnEnd" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.Text" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.Highlighter" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.FileTypeInfo1" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.CursorRow" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.CursorColumn" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.TopRow" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.TopColumn" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.InsertMode" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.Spellchecker" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.Item(System.Int32,System.Int32)" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.Item(System.String)" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindow.Id" />
        <element api="E:gehtsoft.xce.editor.textwindow.TextWindow.BeforeSaveWindowEvent" />
        <element api="E:gehtsoft.xce.editor.textwindow.TextWindow.AfterPaintWindowEvent" />
        <element api="M:gehtsoft.xce.conio.win.Window.Finalize" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnClose" />
        <element api="M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.show(System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.invalidate" />
        <element api="M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnSetFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKillFocus" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged" />
        <element api="P:gehtsoft.xce.conio.win.Window.WindowManager" />
        <element api="P:gehtsoft.xce.conio.win.Window.Exists" />
        <element api="P:gehtsoft.xce.conio.win.Window.Parent" />
        <element api="P:gehtsoft.xce.conio.win.Window.Children" />
        <element api="P:gehtsoft.xce.conio.win.Window.Row" />
        <element api="P:gehtsoft.xce.conio.win.Window.Column" />
        <element api="P:gehtsoft.xce.conio.win.Window.Height" />
        <element api="P:gehtsoft.xce.conio.win.Window.Width" />
        <element api="P:gehtsoft.xce.conio.win.Window.Visible" />
        <element api="P:gehtsoft.xce.conio.win.Window.Valid" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow._BlockColumnEnd">
      <apidata name="_BlockColumnEnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get__BlockColumnEnd" />
      <setter name="set__BlockColumnEnd" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow._BlockColumnStart">
      <apidata name="_BlockColumnStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get__BlockColumnStart" />
      <setter name="set__BlockColumnStart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow._BlockLineEnd">
      <apidata name="_BlockLineEnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get__BlockLineEnd" />
      <setter name="set__BlockLineEnd" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.textwindow.TextWindow.AfterPaintWindowEvent">
      <apidata name="AfterPaintWindowEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AfterPaintWindowEvent" />
      <remover name="remove_AfterPaintWindowEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.AfterPaintWindowHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.BeforeModify">
      <apidata name="BeforeModify" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.editor.textwindow.TextWindow.BeforeSaveWindowEvent">
      <apidata name="BeforeSaveWindowEvent" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeforeSaveWindowEvent" />
      <remover name="remove_BeforeSaveWindowEvent" />
      <eventhandler>
        <type api="T:gehtsoft.xce.editor.application.BeforeSaveWindowHook" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockColumnEnd">
      <apidata name="BlockColumnEnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockColumnEnd" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockColumnStart">
      <apidata name="BlockColumnStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockColumnStart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockLineEnd">
      <apidata name="BlockLineEnd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockLineEnd" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockLineStart">
      <apidata name="BlockLineStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockLineStart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.BlockType">
      <apidata name="BlockType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockType" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.CursorColumn">
      <apidata name="CursorColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorColumn" />
      <setter name="set_CursorColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.CursorRow">
      <apidata name="CursorRow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorRow" />
      <setter name="set_CursorRow" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.DeleteAtCursor(System.Int32)">
      <apidata name="DeleteAtCursor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.DeleteLineAtCursor">
      <apidata name="DeleteLineAtCursor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.DeselectBlock">
      <apidata name="DeselectBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.Dispose(System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.EndBlock(System.Int32,System.Int32)">
      <apidata name="EndBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.EnsureCursorVisible">
      <apidata name="EnsureCursorVisible" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.FileTypeInfo1">
      <apidata name="FileTypeInfo1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileTypeInfo1" />
      <returns>
        <type api="T:gehtsoft.xce.editor.configuration.FileTypeInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.FireSaveWindowEvent">
      <apidata name="FireSaveWindowEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.Highlighter">
      <apidata name="Highlighter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Highlighter" />
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.HighlightRangeLength">
      <apidata name="HighlightRangeLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighlightRangeLength" />
      <setter name="set_HighlightRangeLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.HighlightRangePosition">
      <apidata name="HighlightRangePosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighlightRangePosition" />
      <setter name="set_HighlightRangePosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.InsertMode">
      <apidata name="InsertMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InsertMode" />
      <setter name="set_InsertMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.Item(System.Int32,System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.JoinNextLineAtCursor">
      <apidata name="JoinNextLineAtCursor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnActivate">
      <apidata name="OnActivate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnCreate">
      <apidata name="OnCreate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnCreate">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseLButtonDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseMove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="leftButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rightButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelDown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <apidata name="OnMouseWheelUp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ctrl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="alt">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnPaint(gehtsoft.xce.conio.Canvas)">
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="canvas">
          <type api="T:gehtsoft.xce.conio.Canvas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.OnSizeChanged">
      <apidata name="OnSizeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:gehtsoft.xce.conio.win.Window.OnSizeChanged">
          <type api="T:gehtsoft.xce.conio.win.Window" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.SaveRequired">
      <apidata name="SaveRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SaveRequired" />
      <setter name="set_SaveRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.ShowCaret">
      <apidata name="ShowCaret" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.Spellchecker">
      <apidata name="Spellchecker" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Spellchecker" />
      <setter name="set_Spellchecker" />
      <returns>
        <type api="T:gehtsoft.xce.spellcheck.ISpellchecker" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.SplitLineAtCursor">
      <apidata name="SplitLineAtCursor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.StartBlock(gehtsoft.xce.editor.textwindow.TextWindowBlock,System.Int32,System.Int32)">
      <apidata name="StartBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char)">
      <apidata name="Stroke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char,System.Int32)">
      <apidata name="Stroke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char[],System.Int32,System.Int32)">
      <apidata name="Stroke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.String,System.Int32,System.Int32)">
      <apidata name="Stroke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="from">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.TopColumn">
      <apidata name="TopColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TopColumn" />
      <setter name="set_TopColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindow.TopRow">
      <apidata name="TopRow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TopRow" />
      <setter name="set_TopRow" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.textwindow.TextWindowBlock">
      <apidata name="TextWindowBlock" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.None" />
        <element api="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Stream" />
        <element api="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Line" />
        <element api="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Box" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Box">
      <apidata name="Box" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Line">
      <apidata name="Line" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Stream">
      <apidata name="Stream" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.textwindow.TextWindowCollection">
      <apidata name="TextWindowCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.Find(gehtsoft.xce.editor.textwindow.TextWindow)" />
        <element api="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.#ctor" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindowCollection.Count" />
        <element api="P:gehtsoft.xce.editor.textwindow.TextWindowCollection.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindowCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.Find(gehtsoft.xce.editor.textwindow.TextWindow)">
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="w">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.TextWindowCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.TextWindowCollection.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter">
      <apidata name="XceFileBufferColorerAdapter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Finalize" />
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Dispose" />
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetFileName" />
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetLinesCount" />
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetLineLength(System.Int32)" />
        <element api="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetLine(System.Int32,System.Char[],System.Int32,System.Int32)" />
        <element api="P:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Highlighter" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetFileName">
      <apidata name="GetFileName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.colorer.ILineSource.GetFileName">
          <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetLine(System.Int32,System.Char[],System.Int32,System.Int32)">
      <apidata name="GetLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="buff">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="positionFrom">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.colorer.ILineSource.GetLine(System.Int32,System.Char[],System.Int32,System.Int32)">
          <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetLineLength(System.Int32)">
      <apidata name="GetLineLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.colorer.ILineSource.GetLineLength(System.Int32)">
          <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.GetLinesCount">
      <apidata name="GetLinesCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.colorer.ILineSource.GetLinesCount">
          <type api="T:gehtsoft.xce.colorer.ILineSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter.Highlighter">
      <apidata name="Highlighter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Highlighter" />
      <returns>
        <type api="T:gehtsoft.xce.colorer.SyntaxHighlighter" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.textwindow" />
        <type api="T:gehtsoft.xce.editor.textwindow.XceFileBufferColorerAdapter" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.editor.util">
      <apidata name="gehtsoft.xce.editor.util" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.editor.util.BlockContent" />
        <element api="T:gehtsoft.xce.editor.util.BlockContentProcessor" />
        <element api="T:gehtsoft.xce.editor.util.CharClass" />
        <element api="T:gehtsoft.xce.editor.util.CharUtil" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.editor.util.BlockContent">
      <apidata name="BlockContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.editor.util.BlockContent.Dispose" />
        <element api="M:gehtsoft.xce.editor.util.BlockContent.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.editor.util.BlockContent.Finalize" />
        <element api="M:gehtsoft.xce.editor.util.BlockContent.#ctor(System.String,System.Int32)" />
        <element api="M:gehtsoft.xce.editor.util.BlockContent.#ctor(gehtsoft.xce.editor.textwindow.TextWindow)" />
        <element api="M:gehtsoft.xce.editor.util.BlockContent.Put(gehtsoft.xce.editor.textwindow.TextWindow,System.Int32,System.Int32)" />
        <element api="P:gehtsoft.xce.editor.util.BlockContent.Buffer" />
        <element api="P:gehtsoft.xce.editor.util.BlockContent.Type" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContent.#ctor(gehtsoft.xce.editor.textwindow.TextWindow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="w">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContent.#ctor(System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tabLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.util.BlockContent.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Buffer" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContent.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContent.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContent.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContent.Put(gehtsoft.xce.editor.textwindow.TextWindow,System.Int32,System.Int32)">
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="w">
          <type api="T:gehtsoft.xce.editor.textwindow.TextWindow" ref="true" />
        </parameter>
        <parameter name="row">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.editor.util.BlockContent.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContent" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.util.BlockContentProcessor">
      <apidata name="BlockContentProcessor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.editor.util.BlockContentProcessor.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.BlockContentProcessor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.BlockContentProcessor" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.util.CharClass">
      <apidata name="CharClass" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.editor.util.CharClass.Whitespace" />
        <element api="F:gehtsoft.xce.editor.util.CharClass.Punctuation" />
        <element api="F:gehtsoft.xce.editor.util.CharClass.Word" />
        <element api="F:gehtsoft.xce.editor.util.CharClass.Unknown" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.util.CharClass.Punctuation">
      <apidata name="Punctuation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.util.CharClass.Unknown">
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.util.CharClass.Whitespace">
      <apidata name="Whitespace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.editor.util.CharClass.Word">
      <apidata name="Word" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.editor.util.CharUtil">
      <apidata name="CharUtil" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.editor.util.CharUtil.GetCharClass(System.Char)" />
        <element api="M:gehtsoft.xce.editor.util.CharUtil.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.CharUtil.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.CharUtil" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.editor.util.CharUtil.GetCharClass(System.Char)">
      <apidata name="GetCharClass" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:gehtsoft.xce.editor.util.CharClass" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.editor" module="gehtsoft.xce.editor" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.editor.util" />
        <type api="T:gehtsoft.xce.editor.util.CharUtil" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.extension">
      <apidata name="gehtsoft.xce.extension" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.extension.script" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.extension.script">
      <apidata name="script" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:gehtsoft.xce.editor.application.IEditorExtension" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.extension.script.Finalize" />
        <element api="M:gehtsoft.xce.extension.script.Dispose" />
        <element api="M:gehtsoft.xce.extension.script.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.extension.script.Initialize(gehtsoft.xce.editor.application.Application)" />
        <element api="M:gehtsoft.xce.extension.script.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.script.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension" />
        <type api="T:gehtsoft.xce.extension.script" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.script.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension" />
        <type api="T:gehtsoft.xce.extension.script" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.script.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension" />
        <type api="T:gehtsoft.xce.extension.script" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.script.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension" />
        <type api="T:gehtsoft.xce.extension.script" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.script.Initialize(gehtsoft.xce.editor.application.Application)">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="application">
          <type api="T:gehtsoft.xce.editor.application.Application" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.editor.application.IEditorExtension.Initialize(gehtsoft.xce.editor.application.Application)">
          <type api="T:gehtsoft.xce.editor.application.IEditorExtension" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension" />
        <type api="T:gehtsoft.xce.extension.script" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.extension.scriptimpl">
      <apidata name="gehtsoft.xce.extension.scriptimpl" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.extension.scriptimpl.ISystem" />
        <element api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" />
        <element api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" />
        <element api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper">
      <apidata name="EditorWrapper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.MessageBox(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.MessageBoxYesNo(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Prompt(System.String,System.String,System.Int32,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.ExecuteCommand(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.ExecuteCommandWithParam(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Stroke(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Line(System.Int32)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.LineLength(System.Int32)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.FirstSyntaxRegion(System.Int32)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.NextSyntaxRegion" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Search(System.String,System.Boolean)" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SaveRequired" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CursorLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CursorColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.TopLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.TopColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.WindowWidth" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.WindowHeight" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.FileName" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.InsertMode" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockMode" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockStartLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockStartColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockEndLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockEndColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_None" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_Line" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_Box" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_Stream" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CurrentLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CurrentLineLength" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.LinesCount" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SyntaxRegionName" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SyntaxRegionStart" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SyntaxRegionLength" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ClassInterfaceAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ClassInterfaceType" ref="false" />
            <enumValue>
              <field name="AutoDual" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AE06E68A-37DF-46C6-B4C9-1CA13410F186</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockEndColumn">
      <apidata name="BlockEndColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockEndColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockEndColumn">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockEndLine">
      <apidata name="BlockEndLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockEndLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockEndLine">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockMode">
      <apidata name="BlockMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockMode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockMode">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockStartColumn">
      <apidata name="BlockStartColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockStartColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockStartColumn">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockStartLine">
      <apidata name="BlockStartLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockStartLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockStartLine">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_Box">
      <apidata name="BlockType_Box" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_Box" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Box">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_Line">
      <apidata name="BlockType_Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Line">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_None">
      <apidata name="BlockType_None" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_None" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_None">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.BlockType_Stream">
      <apidata name="BlockType_Stream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_Stream" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Stream">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CurrentLine">
      <apidata name="CurrentLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentLine" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CurrentLine">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CurrentLineLength">
      <apidata name="CurrentLineLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentLineLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CurrentLineLength">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CursorColumn">
      <apidata name="CursorColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorColumn" />
      <setter name="set_CursorColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CursorColumn">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.CursorLine">
      <apidata name="CursorLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorLine" />
      <setter name="set_CursorLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CursorLine">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.ExecuteCommand(System.String)">
      <apidata name="ExecuteCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.ExecuteCommand(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.ExecuteCommandWithParam(System.String,System.String)">
      <apidata name="ExecuteCommandWithParam" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.ExecuteCommandWithParam(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.FileName">
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.FileName">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.FirstSyntaxRegion(System.Int32)">
      <apidata name="FirstSyntaxRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.FirstSyntaxRegion(System.Int32)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.InsertMode">
      <apidata name="InsertMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_InsertMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.InsertMode">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Line(System.Int32)">
      <apidata name="Line" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Line(System.Int32)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.LineLength(System.Int32)">
      <apidata name="LineLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.LineLength(System.Int32)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.LinesCount">
      <apidata name="LinesCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LinesCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.LinesCount">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.MessageBox(System.String,System.String)">
      <apidata name="MessageBox" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.MessageBox(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.MessageBoxYesNo(System.String,System.String)">
      <apidata name="MessageBoxYesNo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.MessageBoxYesNo(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.NextSyntaxRegion">
      <apidata name="NextSyntaxRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.NextSyntaxRegion">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Prompt(System.String,System.String,System.Int32,System.String)">
      <apidata name="Prompt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="label">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="initial">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Prompt(System.String,System.String,System.Int32,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SaveRequired">
      <apidata name="SaveRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SaveRequired" />
      <setter name="set_SaveRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SaveRequired">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Search(System.String,System.Boolean)">
      <apidata name="Search" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="re">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Search(System.String,System.Boolean)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.EditorWrapper.Stroke(System.String)">
      <apidata name="Stroke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Stroke(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SyntaxRegionLength">
      <apidata name="SyntaxRegionLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyntaxRegionLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionLength">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SyntaxRegionName">
      <apidata name="SyntaxRegionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyntaxRegionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionName">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.SyntaxRegionStart">
      <apidata name="SyntaxRegionStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyntaxRegionStart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionStart">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.TopColumn">
      <apidata name="TopColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TopColumn" />
      <setter name="set_TopColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.TopColumn">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.TopLine">
      <apidata name="TopLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TopLine" />
      <setter name="set_TopLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.TopLine">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.WindowHeight">
      <apidata name="WindowHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_WindowHeight" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.WindowHeight">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.EditorWrapper.WindowWidth">
      <apidata name="WindowWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_WindowWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.WindowWidth">
          <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper">
      <apidata name="IEditorWrapper" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:gehtsoft.xce.extension.scriptimpl.EditorWrapper" ref="true" />
      </implementors>
      <elements>
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.MessageBox(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.MessageBoxYesNo(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Prompt(System.String,System.String,System.Int32,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.ExecuteCommand(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.ExecuteCommandWithParam(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Stroke(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Line(System.Int32)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.LineLength(System.Int32)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.FirstSyntaxRegion(System.Int32)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.NextSyntaxRegion" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Search(System.String,System.Boolean)" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SaveRequired" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CursorLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CursorColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.TopLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.TopColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.WindowWidth" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.WindowHeight" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.FileName" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.InsertMode" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockMode" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockStartLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockStartColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockEndLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockEndColumn" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_None" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Line" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Box" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Stream" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CurrentLine" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CurrentLineLength" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.LinesCount" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionName" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionStart" />
        <element api="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionLength" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5B1C6EDF-A777-4667-B9FF-74CB474E6817</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsDual" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockEndColumn">
      <apidata name="BlockEndColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockEndColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockEndLine">
      <apidata name="BlockEndLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockEndLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockMode">
      <apidata name="BlockMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockMode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockStartColumn">
      <apidata name="BlockStartColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockStartColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockStartLine">
      <apidata name="BlockStartLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockStartLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Box">
      <apidata name="BlockType_Box" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_Box" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Line">
      <apidata name="BlockType_Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_None">
      <apidata name="BlockType_None" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_None" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.BlockType_Stream">
      <apidata name="BlockType_Stream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_BlockType_Stream" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CurrentLine">
      <apidata name="CurrentLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentLine" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CurrentLineLength">
      <apidata name="CurrentLineLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentLineLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CursorColumn">
      <apidata name="CursorColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorColumn" />
      <setter name="set_CursorColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.CursorLine">
      <apidata name="CursorLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorLine" />
      <setter name="set_CursorLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.ExecuteCommand(System.String)">
      <apidata name="ExecuteCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.ExecuteCommandWithParam(System.String,System.String)">
      <apidata name="ExecuteCommandWithParam" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.FileName">
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.FirstSyntaxRegion(System.Int32)">
      <apidata name="FirstSyntaxRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.InsertMode">
      <apidata name="InsertMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InsertMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Line(System.Int32)">
      <apidata name="Line" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.LineLength(System.Int32)">
      <apidata name="LineLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.LinesCount">
      <apidata name="LinesCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LinesCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.MessageBox(System.String,System.String)">
      <apidata name="MessageBox" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.MessageBoxYesNo(System.String,System.String)">
      <apidata name="MessageBoxYesNo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.NextSyntaxRegion">
      <apidata name="NextSyntaxRegion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Prompt(System.String,System.String,System.Int32,System.String)">
      <apidata name="Prompt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="label">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="initial">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="title">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SaveRequired">
      <apidata name="SaveRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SaveRequired" />
      <setter name="set_SaveRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Search(System.String,System.Boolean)">
      <apidata name="Search" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="re">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.Stroke(System.String)">
      <apidata name="Stroke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionLength">
      <apidata name="SyntaxRegionLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SyntaxRegionLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionName">
      <apidata name="SyntaxRegionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SyntaxRegionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.SyntaxRegionStart">
      <apidata name="SyntaxRegionStart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SyntaxRegionStart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.TopColumn">
      <apidata name="TopColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TopColumn" />
      <setter name="set_TopColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.TopLine">
      <apidata name="TopLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TopLine" />
      <setter name="set_TopLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.WindowHeight">
      <apidata name="WindowHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_WindowHeight" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.extension.scriptimpl.IEditorWrapper.WindowWidth">
      <apidata name="WindowWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_WindowWidth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.IEditorWrapper" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.extension.scriptimpl.ISystem">
      <apidata name="ISystem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </implementors>
      <elements>
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.NewGuid" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetApplicationPath" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetFullPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.CombinePaths(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileExists(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.DirectoryExists(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.Environment(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ExpandEnvironmentVariables(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.Files(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.Directories(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ParentDirectory(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.DirectoryFromPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileNameFromPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileExtensionFromPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetProfileString(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FindInPaths(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ReadFile(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.RegexMatch(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.WriteFile(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.AppendFile(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.CopyFile(System.String,System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.MoveFile(System.String,System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.DeleteFile(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.CreateDirectory(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ExecuteProcess(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.ISystem.StartProcess(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsDual" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>962366D6-1C6F-46CD-A372-5FB86BD1DD4F</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.AppendFile(System.String,System.String,System.String)">
      <apidata name="AppendFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.CombinePaths(System.String,System.String)">
      <apidata name="CombinePaths" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.CopyFile(System.String,System.String,System.Boolean)">
      <apidata name="CopyFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="src">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dst">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.CreateDirectory(System.String)">
      <apidata name="CreateDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.DeleteFile(System.String)">
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="src">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.Directories(System.String)">
      <apidata name="Directories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.DirectoryExists(System.String)">
      <apidata name="DirectoryExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.DirectoryFromPath(System.String)">
      <apidata name="DirectoryFromPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.Environment(System.String)">
      <apidata name="Environment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.ExecuteProcess(System.String,System.String)">
      <apidata name="ExecuteProcess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="commandLine">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.ExpandEnvironmentVariables(System.String)">
      <apidata name="ExpandEnvironmentVariables" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileExists(System.String)">
      <apidata name="FileExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileExtensionFromPath(System.String)">
      <apidata name="FileExtensionFromPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileNameFromPath(System.String)">
      <apidata name="FileNameFromPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.Files(System.String,System.String)">
      <apidata name="Files" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.FindInPaths(System.String,System.String,System.String)">
      <apidata name="FindInPaths" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pathline">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="currentPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetApplicationPath">
      <apidata name="GetApplicationPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetFullPath(System.String)">
      <apidata name="GetFullPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetProfileString(System.String,System.String,System.String)">
      <apidata name="GetProfileString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.MoveFile(System.String,System.String,System.Boolean)">
      <apidata name="MoveFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="src">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dst">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.NewGuid">
      <apidata name="NewGuid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.ParentDirectory(System.String)">
      <apidata name="ParentDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.ReadFile(System.String)">
      <apidata name="ReadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.RegexMatch(System.String,System.String)">
      <apidata name="RegexMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="regex">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.StartProcess(System.String,System.String)">
      <apidata name="StartProcess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="application">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="commandLine">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.ISystem.WriteFile(System.String,System.String,System.String)">
      <apidata name="WriteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.extension.scriptimpl.SystemImpl">
      <apidata name="SystemImpl" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.#ctor(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.GetApplicationPath" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.NewGuid" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.GetFullPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.CombinePaths(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FileExists(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.DirectoryExists(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.Environment(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ExpandEnvironmentVariables(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.Files(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.Directories(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ParentDirectory(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.DirectoryFromPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FileNameFromPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FileExtensionFromPath(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.GetProfileString(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FindInPaths(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ReadFile(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.RegexMatch(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.WriteFile(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.AppendFile(System.String,System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.CopyFile(System.String,System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.MoveFile(System.String,System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.DeleteFile(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.CreateDirectory(System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ExecuteProcess(System.String,System.String)" />
        <element api="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.StartProcess(System.String,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>EB92A632-CB18-409C-9BD1-CBD2E4CCD949</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ClassInterfaceAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ClassInterfaceType" ref="false" />
            <enumValue>
              <field name="AutoDual" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="appPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.AppendFile(System.String,System.String,System.String)">
      <apidata name="AppendFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.AppendFile(System.String,System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.CombinePaths(System.String,System.String)">
      <apidata name="CombinePaths" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.CombinePaths(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.CopyFile(System.String,System.String,System.Boolean)">
      <apidata name="CopyFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="src">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dst">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.CopyFile(System.String,System.String,System.Boolean)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.CreateDirectory(System.String)">
      <apidata name="CreateDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.CreateDirectory(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.DeleteFile(System.String)">
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="src">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.DeleteFile(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.Directories(System.String)">
      <apidata name="Directories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.Directories(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.DirectoryExists(System.String)">
      <apidata name="DirectoryExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.DirectoryExists(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.DirectoryFromPath(System.String)">
      <apidata name="DirectoryFromPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.DirectoryFromPath(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.Environment(System.String)">
      <apidata name="Environment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.Environment(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ExecuteProcess(System.String,System.String)">
      <apidata name="ExecuteProcess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="application">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="commandLine">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ExecuteProcess(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ExpandEnvironmentVariables(System.String)">
      <apidata name="ExpandEnvironmentVariables" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ExpandEnvironmentVariables(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FileExists(System.String)">
      <apidata name="FileExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileExists(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FileExtensionFromPath(System.String)">
      <apidata name="FileExtensionFromPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileExtensionFromPath(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FileNameFromPath(System.String)">
      <apidata name="FileNameFromPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FileNameFromPath(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.Files(System.String,System.String)">
      <apidata name="Files" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mask">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.Files(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.FindInPaths(System.String,System.String,System.String)">
      <apidata name="FindInPaths" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pathline">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="currentPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.FindInPaths(System.String,System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.GetApplicationPath">
      <apidata name="GetApplicationPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetApplicationPath">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.GetFullPath(System.String)">
      <apidata name="GetFullPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetFullPath(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.GetProfileString(System.String,System.String,System.String)">
      <apidata name="GetProfileString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.GetProfileString(System.String,System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.MoveFile(System.String,System.String,System.Boolean)">
      <apidata name="MoveFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="src">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dst">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.MoveFile(System.String,System.String,System.Boolean)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.NewGuid">
      <apidata name="NewGuid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.NewGuid">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ParentDirectory(System.String)">
      <apidata name="ParentDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ParentDirectory(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.ReadFile(System.String)">
      <apidata name="ReadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.ReadFile(System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.RegexMatch(System.String,System.String)">
      <apidata name="RegexMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="regex">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.RegexMatch(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.StartProcess(System.String,System.String)">
      <apidata name="StartProcess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="application">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="commandLine">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.StartProcess(System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.extension.scriptimpl.SystemImpl.WriteFile(System.String,System.String,System.String)">
      <apidata name="WriteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:gehtsoft.xce.extension.scriptimpl.ISystem.WriteFile(System.String,System.String,System.String)">
          <type api="T:gehtsoft.xce.extension.scriptimpl.ISystem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.extension.script" module="gehtsoft.xce.extension.script" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.extension.scriptimpl" />
        <type api="T:gehtsoft.xce.extension.scriptimpl.SystemImpl" ref="true" />
      </containers>
    </api>
    <api id="N:gehtsoft.xce.text">
      <apidata name="gehtsoft.xce.text" group="namespace" />
      <elements>
        <element api="T:gehtsoft.xce.text.AutoArray`1" />
        <element api="T:gehtsoft.xce.text.XceFileBufferEndOfLine" />
        <element api="T:gehtsoft.xce.text.XceFileBufferChangedDelegate" />
        <element api="T:gehtsoft.xce.text.XceFileNameChangedDelegate" />
        <element api="T:gehtsoft.xce.text.XceFileBuffer" />
        <element api="T:gehtsoft.xce.text.XceFileBuffer.BufferState" />
        <element api="T:gehtsoft.xce.text.XceFileBufferMarkers" />
        <element api="T:gehtsoft.xce.text.XceFileBufferRegex" />
      </elements>
    </api>
    <api id="T:gehtsoft.xce.text.AutoArray`1">
      <apidata name="AutoArray" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:gehtsoft.xce.text.AutoArray`1.#ctor" />
        <element api="M:gehtsoft.xce.text.AutoArray`1.Ensure(System.Int32)" />
        <element api="P:gehtsoft.xce.text.AutoArray`1.Array" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.AutoArray`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.AutoArray`1" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.AutoArray`1.Array">
      <apidata name="Array" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Array" />
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="T:gehtsoft.xce.text.AutoArray`1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.AutoArray`1" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.AutoArray`1.Ensure(System.Int32)">
      <apidata name="Ensure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="T:gehtsoft.xce.text.AutoArray`1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.AutoArray`1" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileBuffer">
      <apidata name="XceFileBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:gehtsoft.xce.text.XceFileBuffer.#ctor" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Finalize" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Dispose" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.GetRange(System.Int32,System.Int32,System.Char[],System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.GetRange(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.DeleteRange(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.InsertRange(System.Int32,System.Char[],System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.InsertRange(System.Int32,System.String)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.LineStart(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.LineLength(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.LineLength(System.Int32,System.Boolean)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.LineFromPosition(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.AppendLine" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.InsertLine(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.DeleteLine(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.String)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.Char,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.DeleteFromLine(System.Int32,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.SplitLine(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.JoinWithNext(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.JoinWithNext(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.ExpandTabsInRange(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.AutoIndentLinesInRange(System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.TabLength(System.Int32)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.ChangeEncoding(System.Text.Encoding)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.New(System.Text.Encoding,System.String)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Load(System.Text.Encoding,System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Save(System.Boolean,System.Text.Encoding)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.SaveAs(System.String,System.Boolean)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.SaveAs(System.String,System.Text.Encoding,System.Boolean)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Undo" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.Redo" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.BeginUndoTransaction" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.EndUndoTransaction" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.EnableUndo(System.Boolean)" />
        <element api="M:gehtsoft.xce.text.XceFileBuffer.ResetExternallyChanged" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.State" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.Length" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.Item(System.Int32)" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.LinesCount" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.ExpandTabs" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.TabSize" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.TrimSpace" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.EolMode" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.Eol" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.Encoding" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.FileName" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.CanUndo" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.CanRedo" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.AtSavePoint" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.Markers" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.LastChange" />
        <element api="P:gehtsoft.xce.text.XceFileBuffer.HasBeenExtenrallyChanged" />
        <element api="E:gehtsoft.xce.text.XceFileBuffer.OnChanged" />
        <element api="E:gehtsoft.xce.text.XceFileBuffer.OnNameChanged" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.AppendLine">
      <apidata name="AppendLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.AtSavePoint">
      <apidata name="AtSavePoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AtSavePoint" />
      <setter name="set_AtSavePoint" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.AutoIndentLinesInRange(System.Int32,System.Int32)">
      <apidata name="AutoIndentLinesInRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.BeginUndoTransaction">
      <apidata name="BeginUndoTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.CanRedo">
      <apidata name="CanRedo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanRedo" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.CanUndo">
      <apidata name="CanUndo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanUndo" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.ChangeEncoding(System.Text.Encoding)">
      <apidata name="ChangeEncoding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.DeleteFromLine(System.Int32,System.Int32,System.Int32)">
      <apidata name="DeleteFromLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.DeleteLine(System.Int32)">
      <apidata name="DeleteLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.DeleteRange(System.Int32,System.Int32)">
      <apidata name="DeleteRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="disposal">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.EnableUndo(System.Boolean)">
      <apidata name="EnableUndo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.Encoding">
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Encoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.EndUndoTransaction">
      <apidata name="EndUndoTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.Eol">
      <apidata name="Eol" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Eol" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Char" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.EolMode">
      <apidata name="EolMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EolMode" />
      <setter name="set_EolMode" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBufferEndOfLine" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.ExpandTabs">
      <apidata name="ExpandTabs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExpandTabs" />
      <setter name="set_ExpandTabs" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.ExpandTabsInRange(System.Int32,System.Int32)">
      <apidata name="ExpandTabsInRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.FileName">
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.GetRange(System.Int32,System.Int32)">
      <apidata name="GetRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.GetRange(System.Int32,System.Int32,System.Char[],System.Int32)">
      <apidata name="GetRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.HasBeenExtenrallyChanged">
      <apidata name="HasBeenExtenrallyChanged" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasBeenExtenrallyChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.InsertLine(System.Int32)">
      <apidata name="InsertLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.InsertRange(System.Int32,System.Char[],System.Int32,System.Int32)">
      <apidata name="InsertRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.InsertRange(System.Int32,System.String)">
      <apidata name="InsertRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.Char,System.Int32)">
      <apidata name="InsertToLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="c">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)">
      <apidata name="InsertToLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.String)">
      <apidata name="InsertToLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.JoinWithNext(System.Int32)">
      <apidata name="JoinWithNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.JoinWithNext(System.Int32,System.Int32)">
      <apidata name="JoinWithNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.LastChange">
      <apidata name="LastChange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastChange" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.LineFromPosition(System.Int32)">
      <apidata name="LineFromPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.LineLength(System.Int32)">
      <apidata name="LineLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.LineLength(System.Int32,System.Boolean)">
      <apidata name="LineLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="includeEof">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.LinesCount">
      <apidata name="LinesCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LinesCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.LineStart(System.Int32)">
      <apidata name="LineStart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Load(System.Text.Encoding,System.String,System.Boolean)">
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreBOM">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.Markers">
      <apidata name="Markers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Markers" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBufferMarkers" ref="true" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.New(System.Text.Encoding,System.String)">
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.text.XceFileBuffer.OnChanged">
      <apidata name="OnChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnChanged" />
      <remover name="remove_OnChanged" />
      <eventhandler>
        <type api="T:gehtsoft.xce.text.XceFileBufferChangedDelegate" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="E:gehtsoft.xce.text.XceFileBuffer.OnNameChanged">
      <apidata name="OnNameChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnNameChanged" />
      <remover name="remove_OnNameChanged" />
      <eventhandler>
        <type api="T:gehtsoft.xce.text.XceFileNameChangedDelegate" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Redo">
      <apidata name="Redo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.ResetExternallyChanged">
      <apidata name="ResetExternallyChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Save(System.Boolean,System.Text.Encoding)">
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writeBom">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.SaveAs(System.String,System.Boolean)">
      <apidata name="SaveAs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writeBom">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.SaveAs(System.String,System.Text.Encoding,System.Boolean)">
      <apidata name="SaveAs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="writeBom">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.SplitLine(System.Int32,System.Int32)">
      <apidata name="SplitLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lineIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.State">
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBuffer.BufferState" ref="true">
          <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.TabLength(System.Int32)">
      <apidata name="TabLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="linePosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.TabSize">
      <apidata name="TabSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TabSize" />
      <setter name="set_TabSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.TrimSpace">
      <apidata name="TrimSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrimSpace" />
      <setter name="set_TrimSpace" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBuffer.Undo">
      <apidata name="Undo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileBuffer.BufferState">
      <apidata name="BufferState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:gehtsoft.xce.text.XceFileBuffer.BufferState.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBuffer.BufferState.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBuffer.BufferState" ref="true">
          <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileBufferChangedDelegate">
      <apidata name="XceFileBufferChangedDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="sender">
          <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="major">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileBufferEndOfLine">
      <apidata name="XceFileBufferEndOfLine" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:gehtsoft.xce.text.XceFileBufferEndOfLine.eCr" />
        <element api="F:gehtsoft.xce.text.XceFileBufferEndOfLine.eCrLf" />
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.text.XceFileBufferEndOfLine.eCr">
      <apidata name="eCr" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBufferEndOfLine" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBufferEndOfLine" ref="false" />
      </containers>
    </api>
    <api id="F:gehtsoft.xce.text.XceFileBufferEndOfLine.eCrLf">
      <apidata name="eCrLf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:gehtsoft.xce.text.XceFileBufferEndOfLine" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBufferEndOfLine" ref="false" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileBufferMarkers">
      <apidata name="XceFileBufferMarkers" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:gehtsoft.xce.text.XceFileBufferMarkers.Item(System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
    <api id="P:gehtsoft.xce.text.XceFileBufferMarkers.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBufferMarkers" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileBufferRegex">
      <apidata name="XceFileBufferRegex" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:gehtsoft.xce.colorer.Regex" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:gehtsoft.xce.text.XceFileBufferRegex.#ctor(System.String)" />
        <element api="M:gehtsoft.xce.text.XceFileBufferRegex.Match(gehtsoft.xce.text.XceFileBuffer,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.Char[],System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.String,System.Int32,System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Match(System.String)" />
        <element api="M:gehtsoft.xce.colorer.Regex.NextMatch" />
        <element api="M:gehtsoft.xce.colorer.Regex.Start(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.End(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Length(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Value(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Name(System.Int32)" />
        <element api="M:gehtsoft.xce.colorer.Regex.IndexOf(System.String)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Dispose(System.Boolean)" />
        <element api="M:gehtsoft.xce.colorer.Regex.Dispose" />
        <element api="M:gehtsoft.xce.colorer.Regex.Finalize" />
        <element api="P:gehtsoft.xce.colorer.Regex.MatchesCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBufferRegex.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regularExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBufferRegex" ref="true" />
      </containers>
    </api>
    <api id="M:gehtsoft.xce.text.XceFileBufferRegex.Match(gehtsoft.xce.text.XceFileBuffer,System.Int32,System.Int32)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
        <type api="T:gehtsoft.xce.text.XceFileBufferRegex" ref="true" />
      </containers>
    </api>
    <api id="T:gehtsoft.xce.text.XceFileNameChangedDelegate">
      <apidata name="XceFileNameChangedDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="sender">
          <type api="T:gehtsoft.xce.text.XceFileBuffer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="gehtsoft.xce.text" module="gehtsoft.xce.text" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:gehtsoft.xce.text" />
      </containers>
    </api>
  </apis>
</reflection>