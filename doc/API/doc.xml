<?xml version="1.0" encoding="utf-8"?><root><group title="gehtsoft.xce" key="index" brief="brieftext" in-group="" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted"><body><p>Text is here</p></body></group><class name="BoxBorder" sig="T:gehtsoft.xce.conio.BoxBorder" key="gehtsoft.xce.conio.BoxBorder" brief="The borders for a box." type="class" prefix="" in-group="gehtsoft.xce.conio" decl-name="BoxBorder" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="BoxBorder" visibility="public" scope="instance" brief="Constructor." key="BoxBorder.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><param name="topLeft" gray="false"><body><p>A character for top-left corner of the box.</p></body></param><param name="top" gray="false"><body><p>A character for filling the top line of the box.</p></body></param><param name="topRight" gray="false"><body><p>A character for top-right corner of the box.</p></body></param><param name="left" gray="false"><body><p>A character for filling the left line of the box.</p></body></param><param name="right" gray="false"><body><p>A character for filling the right line of the box.</p></body></param><param name="bottomLeft" gray="false"><body><p>A character for bottom-left corner of the box.</p></body></param><param name="bottom" gray="false"><body><p>A character for filling the top line of the box.</p></body></param><param name="bottomRight" gray="false"><body><p>A character for bottom-right corner of the box.</p></body></param><declaration language="cs" name="BoxBorder" prefix="" suffix="" name-suffix="" return="" params="char topLeft, char top, char topRight, char left, char right, char bottomLeft, char bottom, char bottomRight" custom="" /><sig>M:gehtsoft.xce.conio.BoxBorder.#ctor(System.Char,System.Char,System.Char,System.Char,System.Char,System.Char,System.Char,System.Char)</sig></member><member name="DoubleBorderBox" visibility="public" scope="class" brief="The borders for a double-lined box." key="DoubleBorderBox.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="DoubleBorderBox" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.BoxBorder]BoxBorder[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.DoubleBorderBox</sig></member><member name="SingleBorderBox" visibility="public" scope="class" brief="The borders for a single-lined box." key="SingleBorderBox.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="SingleBorderBox" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.BoxBorder]BoxBorder[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.SingleBorderBox</sig></member><member name="Right" visibility="public" scope="instance" brief="A character for filling the right line of the box." key="Right.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="Right" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.Right</sig></member><member name="Left" visibility="public" scope="instance" brief="A character for filling the left line of the box." key="Left.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="Left" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.Left</sig></member><member name="BottomRight" visibility="public" scope="instance" brief="A character for bottom-right corner of the box." key="BottomRight.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="BottomRight" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.BottomRight</sig></member><member name="Bottom" visibility="public" scope="instance" brief="A character for filling the top line of the box." key="Bottom.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="Bottom" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.Bottom</sig></member><member name="BottomLeft" visibility="public" scope="instance" brief="A character for bottom-left corner of the box." key="BottomLeft.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="BottomLeft" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.BottomLeft</sig></member><member name="TopRight" visibility="public" scope="instance" brief="A character for top-right corner of the box." key="TopRight.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="TopRight" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.TopRight</sig></member><member name="Top" visibility="public" scope="instance" brief="A character for filling the top line of the box." key="Top.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="Top" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.Top</sig></member><member name="TopLeft" visibility="public" scope="instance" brief="A character for top-left corner of the box." key="TopLeft.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.BoxBorder" class-name="BoxBorder" exclude-from-list="false"><return /><declaration language="cs" name="TopLeft" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.BoxBorder.TopLeft</sig></member></class><class name="Canvas" sig="T:gehtsoft.xce.conio.Canvas" key="gehtsoft.xce.conio.Canvas" brief="The canvas (drawing surface) for the console output." type="class" prefix="" in-group="gehtsoft.xce.conio" decl-name="Canvas" sort="true" class-name-in-key="true" transform="def"><body><p>[b]Overview[/b]</p><p>The canvas object provides safe operations for drawing the console content.</p><p>The canvas is organized exactly in the same way as the console window. It consists of
rows of characters, each row consists of the columns. In each column one unicode character and
its color is specified.</p><p>The "safe" means that in any method:</p><list type="dot"><list-item><body><p>The coordinates of the paint area MAY be out of the canvas.</p></body></list-item><list-item><body><p>The objects to be drawn may MAY be bigger than the canvas.</p></body></list-item></list><p>In other words, the canvas methods crops the objects automatically to fit the size of this
canvas object.</p><p>[b]Colors[/b]</p><p>The Win32 console supports 16 colors which are numbered from 0x0 to 0xf.
The color of the character consists of two colors. The high half-byte is the color of the background and
the low half-byte is the color of the character. For example 0x03 means cyan on black and 0x30 means black on cyan.</p><p>The table of the colors:</p><p>[img=img/console_colors.png]</p><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="Canvas" visibility="public" scope="instance" brief="Constructor." key="Canvas.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="rows" gray="false"><body><p>The size of the canvas in rows.</p></body></param><param name="columns" gray="false"><body><p>The size of the canvas in columns.</p></body></param><declaration language="cs" name="Canvas" prefix="" suffix="" name-suffix="" return="" params="int rows, int columns" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.#ctor(System.Int32,System.Int32)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the part of string builder content in the specified color." key="write.8" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write the text from.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text from.</p></body></param><param name="text" gray="false"><body><p>The text to be drawn.</p></body></param><param name="offset" gray="false"><body><p>The offset of the character inside the text to start the draw from.</p></body></param><param name="length" gray="false"><body><p>The length of the text to be drawn.</p></body></param><param name="color" gray="false"><body><p>The color.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, System.Text.StringBuilder text, int offset, int length, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32,System.Int16)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the part of string content in the specified color." key="write.6" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write the text from.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text from.</p></body></param><param name="text" gray="false"><body><p>The text to be drawn.</p></body></param><param name="offset" gray="false"><body><p>The offset of the character inside the text to start the draw from.</p></body></param><param name="length" gray="false"><body><p>The length of the text to be drawn.</p></body></param><param name="color" gray="false"><body><p>The color.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, string text, int offset, int length, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int16)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the part of string builder content." key="write.7" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write the text from.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text from.</p></body></param><param name="text" gray="false"><body><p>The text to be drawn.</p></body></param><param name="offset" gray="false"><body><p>The offset of the character inside the text to start the draw from.</p></body></param><param name="length" gray="false"><body><p>The length of the text to be drawn.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, System.Text.StringBuilder text, int offset, int length" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the part of string content." key="write.5" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write the text from.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text from.</p></body></param><param name="text" gray="false"><body><p>The text to be drawn.</p></body></param><param name="offset" gray="false"><body><p>The offset of the character inside the text to start the draw from.</p></body></param><param name="length" gray="false"><body><p>The length of the text to be drawn.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, string text, int offset, int length" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int32,System.Int32)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the string content in the specified color." key="write.4" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write the text from.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text from.</p></body></param><param name="text" gray="false"><body><p>The text to be drawn.</p></body></param><param name="color" gray="false"><body><p>The color to draw</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, string text, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String,System.Int16)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the string content." key="write.3" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write the text from.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text from.</p></body></param><param name="text" gray="false"><body><p>The text to be drawn.</p></body></param><param name="color" gray="false"><body><p>The color to draw</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, string text, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.String)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the character and the color to the specified position." key="write.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write.</p></body></param><param name="column" gray="false"><body><p>The column index to write.</p></body></param><param name="chr" gray="false"><body><p>The character to write.</p></body></param><param name="color" gray="false"><body><p>The color to write.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, char chr, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char,System.Int16)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the color at the specified position." key="write.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write.</p></body></param><param name="column" gray="false"><body><p>The column index to write.</p></body></param><param name="color" gray="false"><body><p>The color to write.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Int16)</sig></member><member name="write" visibility="public" scope="instance" brief="Writes the character at the specified position." key="write.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row index to write.</p></body></param><param name="column" gray="false"><body><p>The column index to write.</p></body></param><param name="chr" gray="false"><body><p>The character to write.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, char chr" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char)</sig></member><member name="fill" visibility="public" scope="instance" brief="Fills the specified rectangle with the character and color." key="fill.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the rectangle.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the rectangle.</p></body></param><param name="rows" gray="false"><body><p>The number of the rows to fill.</p></body></param><param name="columns" gray="false"><body><p>The number of the columns fill.</p></body></param><param name="chr" gray="false"><body><p>The character to fill with.</p></body></param><param name="color" gray="false"><body><p>The color to fill with.</p></body></param><declaration language="cs" name="fill" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int rows, int columns, char chr, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.Int16)</sig></member><member name="fill" visibility="public" scope="instance" brief="Fills the specified rectangle with the color." key="fill.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the rectangle.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the rectangle.</p></body></param><param name="rows" gray="false"><body><p>The number of the rows to fill.</p></body></param><param name="columns" gray="false"><body><p>The number of the columns fill.</p></body></param><param name="color" gray="false"><body><p>The color to fill with.</p></body></param><declaration language="cs" name="fill" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int rows, int columns, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)</sig></member><member name="fill" visibility="public" scope="instance" brief="Fills the specified rectangle with the character." key="fill.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the rectangle.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the rectangle.</p></body></param><param name="rows" gray="false"><body><p>The number of the rows to fill.</p></body></param><param name="columns" gray="false"><body><p>The number of the columns fill.</p></body></param><param name="chr" gray="false"><body><p>The character to fill with.</p></body></param><declaration language="cs" name="fill" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int rows, int columns, char chr" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.fill(System.Int32,System.Int32,System.Int32,System.Int32,System.Char)</sig></member><member name="box" visibility="public" scope="instance" brief="Draws and fills the box." key="box.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the box.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the box.</p></body></param><param name="rows" gray="false"><body><p>The size of the box in rows.</p></body></param><param name="columns" gray="false"><body><p>The size of the box in columns.</p></body></param><param name="border" gray="false"><body><p>The box border.</p></body></param><param name="color" gray="false"><body><p>The box color.</p></body></param><param name="fillchar" gray="false"><body><p>The character to fill the box interior.</p></body></param><declaration language="cs" name="box" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int rows, int columns, [clink=gehtsoft.xce.conio.BoxBorder]BoxBorder[/clink] border, short color, char fillchar" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.box(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.BoxBorder,System.Int16,System.Char)</sig></member><member name="box" visibility="public" scope="instance" brief="Draws the box." key="box.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the box.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the box.</p></body></param><param name="rows" gray="false"><body><p>The size of the box in rows.</p></body></param><param name="columns" gray="false"><body><p>The size of the box in columns.</p></body></param><param name="border" gray="false"><body><p>The box border.</p></body></param><param name="color" gray="false"><body><p>The box color.</p></body></param><declaration language="cs" name="box" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int rows, int columns, [clink=gehtsoft.xce.conio.BoxBorder]BoxBorder[/clink] border, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.box(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.BoxBorder,System.Int16)</sig></member><member name="paint" visibility="public" scope="instance" brief="Draws content of another canvas object into this canvas." key="paint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row in this canvas to draw the other canvas from.</p></body></param><param name="column" gray="false"><body><p>The row in this canvas to draw the other canvas from.</p></body></param><param name="canvas" gray="false"><body><p>The other canvas object.</p></body></param><declaration language="cs" name="paint" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, [clink=gehtsoft.xce.conio.Canvas]Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.paint(System.Int32,System.Int32,gehtsoft.xce.conio.Canvas)</sig></member><member name="get" visibility="public" scope="instance" brief="Gets the character and the color by the specified position." key="get.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row.</p></body></param><param name="column" gray="false"><body><p>The column.</p></body></param><param name="chr" gray="false"><body><p>[output] The character code.</p></body></param><param name="color" gray="false"><body><p>[output] The color</p></body></param><declaration language="cs" name="get" prefix="" suffix="" name-suffix="" return="bool" params="int row, int column, out char chr, out short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.get(System.Int32,System.Int32,System.Char@,System.Int16@)</sig></member><member name="Columns" visibility="public" scope="instance" brief="Returns the number of columns in the canvas object." key="Columns.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><declaration language="cs" name="Columns" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.Canvas.Columns</sig></member><member name="Rows" visibility="public" scope="instance" brief="Returns the number of rows in the canvas object." key="Rows.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><declaration language="cs" name="Rows" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.Canvas.Rows</sig></member><member name="write" visibility="public" scope="instance" brief="Writes a part of the character buffer." key="write.9" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The line index.</p></body></param><param name="column" gray="false"><body><p>The column index to write the text at.</p></body></param><param name="text" gray="false"><body><p>The char array containing the text to write.</p></body></param><param name="offset" gray="false"><body><p>The offset of the text in the array.</p></body></param><param name="length" gray="false"><body><p>The length of the text in characters.</p></body></param><declaration language="cs" name="write" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, char[] text, int offset, int length" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.write(System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)</sig></member><member name="fillFg" visibility="public" scope="instance" brief="Fills the foreground color only" key="fillFg.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.Canvas" class-name="Canvas" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The first row to fill.</p></body></param><param name="column" gray="false"><body><p>The first column to fill.</p></body></param><param name="rows" gray="false"><body><p>The number of rows to fill.</p></body></param><param name="columns" gray="false"><body><p>The number of columns to fill.</p></body></param><param name="color" gray="false"><body><p>The color to fill. Only foreground part of the color is used.</p></body></param><declaration language="cs" name="fillFg" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int rows, int columns, short color" custom="" /><sig>M:gehtsoft.xce.conio.Canvas.fillFg(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)</sig></member><parent>System.IDisposable</parent></class><class name="ConsoleInput" sig="T:gehtsoft.xce.conio.ConsoleInput" key="gehtsoft.xce.conio.ConsoleInput" brief="Win32 Console Input." type="class" prefix="" in-group="gehtsoft.xce.conio" decl-name="ConsoleInput" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="ConsoleInput" visibility="public" scope="instance" brief="Constructor." key="ConsoleInput.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInput" class-name="ConsoleInput" exclude-from-list="false"><return /><declaration language="cs" name="ConsoleInput" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInput.#ctor</sig></member><member name="read" visibility="public" scope="instance" brief="Waits for one console input event and call the listener if event happened." key="read.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInput" class-name="ConsoleInput" exclude-from-list="false"><return /><param name="listener" gray="false"><body><p>A reference to a class which implements the console listener interface.</p></body></param><param name="timeout" gray="false"><body><p>The timeout of waiting for the event expressed in milliseconds.</p></body></param><declaration language="cs" name="read" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.conio.ConsoleInputListener]ConsoleInputListener[/clink] listener, int timeout" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInput.read(gehtsoft.xce.conio.ConsoleInputListener,System.Int32)</sig></member><member name="keyNameToCode" visibility="public" scope="class" brief="Gets the scan code by its name." key="keyNameToCode.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInput" class-name="ConsoleInput" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the scan code.</p></body></param><declaration language="cs" name="keyNameToCode" prefix="" suffix="" name-suffix="" return="int" params="string name" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInput.keyNameToCode(System.String)</sig></member><member name="keyCodeToName" visibility="public" scope="class" brief="Gets the scancode name by scan code." key="keyCodeToName.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInput" class-name="ConsoleInput" exclude-from-list="false"><return /><param name="code" gray="false"><body><p>The scan code.</p></body></param><declaration language="cs" name="keyCodeToName" prefix="" suffix="" name-suffix="" return="string" params="int code" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInput.keyCodeToName(System.Int32)</sig></member><member name="CurrentLayout" visibility="public" scope="instance" brief="Gets the name of the current keyboard layout." key="CurrentLayout.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInput" class-name="ConsoleInput" exclude-from-list="false"><return /><declaration language="cs" name="CurrentLayout" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.ConsoleInput.CurrentLayout</sig></member><parent>System.IDisposable</parent></class><class name="ConsoleInputListener" sig="T:gehtsoft.xce.conio.ConsoleInputListener" key="gehtsoft.xce.conio.ConsoleInputListener" brief="The interface of the console-event listener." type="interface" prefix="" in-group="gehtsoft.xce.conio" decl-name="ConsoleInputListener" sort="true" class-name-in-key="true" transform="def"><body><p>The instance of a class implementing the interface may be specified as an argument of the
[clink=gehtsoft.xce.conio.ConsoleInput.read.0]ConsoleInput.read()[/clink] method.</p><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="onKeyPressed" visibility="public" scope="instance" brief="The method is called when the user presses a key." key="onKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onKeyPressed" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onKeyReleased" visibility="public" scope="instance" brief="The method is called when the user has just released a key." key="onKeyReleased.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onKeyReleased" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onKeyReleased(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseMove" visibility="public" scope="instance" brief="The method is called when the user moves the mouse." key="onMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="lb" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rb" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="onMouseMove" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool lb, bool rb" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the user presses the left mouse button." key="onMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onMouseLButtonDown" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseLButtonUp" visibility="public" scope="instance" brief="Events is fired when the user releases the left mouse button." key="onMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onMouseLButtonUp" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the user presses the right mouse button." key="onMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onMouseRButtonDown" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the user releases the right mouse button." key="onMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onMouseRButtonUp" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the user scrolls the mouse wheel up." key="onMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onMouseWheelUp" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the user scrolls the mouse wheel down." key="onMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onMouseWheelDown" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onGetFocus" visibility="public" scope="instance" brief="The method is called when the console window receives the input focus." key="onGetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="onGetFocus" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onGetFocus(System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="onScreenBufferChanged" visibility="public" scope="instance" brief="The method is called when the user changes the size of the console window." key="onScreenBufferChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleInputListener" class-name="ConsoleInputListener" exclude-from-list="false"><return /><param name="rows" gray="false"><body><p>The new size in rows.</p></body></param><param name="columns" gray="false"><body><p>The new size in columns.</p></body></param><declaration language="cs" name="onScreenBufferChanged" prefix="virtual abstract" suffix="" name-suffix="" return="void" params="int rows, int columns" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleInputListener.onScreenBufferChanged(System.Int32,System.Int32)</sig></member></class><class name="ConsoleOutput" sig="T:gehtsoft.xce.conio.ConsoleOutput" key="gehtsoft.xce.conio.ConsoleOutput" brief="Win32 Console Output." type="class" prefix="" in-group="gehtsoft.xce.conio" decl-name="ConsoleOutput" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="ConsoleOutput" visibility="public" scope="instance" brief="Constructor of console output of the specified window size." key="ConsoleOutput.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><body><p>The method changes the size of the current console window.</p></body><return /><param name="save" gray="false"><body><p>The flag indicating that the current content of the console window must be saved
and when restored when the console output object is disposed.</p></body></param><param name="rows" gray="false"><body><p>The size of the console window in rows.</p></body></param><param name="columns" gray="false"><body><p>The size of the console window in columns.</p></body></param><declaration language="cs" name="ConsoleOutput" prefix="" suffix="" name-suffix="" return="" params="bool save, int rows, int columns" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.#ctor(System.Boolean,System.Int32,System.Int32)</sig></member><member name="ConsoleOutput" visibility="public" scope="instance" brief="Constructor of the console output." key="ConsoleOutput.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><param name="save" gray="false"><body><p>The flag indicating that the current content of the console window must be saved
and when restored when the console output object is disposed.</p></body></param><declaration language="cs" name="ConsoleOutput" prefix="" suffix="" name-suffix="" return="" params="bool save" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.#ctor(System.Boolean)</sig></member><member name="paint" visibility="public" scope="instance" brief="Writes the canvas object to the screen." key="paint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The reference to the canvas object.</p><p>The canvas object must have exactly the same size as the console screen window.</p></body></param><param name="fast" gray="false"><body><p>The flag selecting the mode of the drawing.</p><p>The fast drawing re-draws the screen completely. The slow mode redraws only the rows
which are changed.</p></body></param><declaration language="cs" name="paint" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]Canvas[/clink] canvas, bool fast" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.paint(gehtsoft.xce.conio.Canvas,System.Boolean)</sig></member><member name="setCursorType" visibility="public" scope="instance" brief="Sets the type of the caret cursor." key="setCursorType.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><param name="size" gray="false"><body><p>The height of the caret cursor in percents of the full character height.</p></body></param><param name="visible" gray="false"><body><p>The flag indicating whether the caret must be visible.</p></body></param><declaration language="cs" name="setCursorType" prefix="" suffix="" name-suffix="" return="void" params="int size, bool visible" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.setCursorType(System.Int32,System.Boolean)</sig></member><member name="getCursorType" visibility="public" scope="instance" brief="Gets the type of the caret cursor." key="getCursorType.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><param name="size" gray="false"><body><p>[output] The height of the caret cursor in percents of the full character height.</p></body></param><param name="visible" gray="false"><body><p>[output] The flag indicating whether the caret must be visible.</p></body></param><declaration language="cs" name="getCursorType" prefix="" suffix="" name-suffix="" return="void" params="out int size, out bool visible" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.getCursorType(System.Int32@,System.Boolean@)</sig></member><member name="setCursorPos" visibility="public" scope="instance" brief="Sets the caret cursor position." key="setCursorPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The zero-based row index.</p></body></param><param name="column" gray="false"><body><p>The zero-based column index.</p></body></param><declaration language="cs" name="setCursorPos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.setCursorPos(System.Int32,System.Int32)</sig></member><member name="getCursorPos" visibility="public" scope="instance" brief="Gets the caret cursor." key="getCursorPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>[output] The zero-based row index.</p></body></param><param name="column" gray="false"><body><p>[output] The zero-based column index.</p></body></param><declaration language="cs" name="getCursorPos" prefix="" suffix="" name-suffix="" return="void" params="out int row, out int column" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.getCursorPos(System.Int32@,System.Int32@)</sig></member><member name="updateSize" visibility="public" scope="instance" brief="Re-reads the size of the console window." key="updateSize.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><declaration language="cs" name="updateSize" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.ConsoleOutput.updateSize</sig></member><member name="Columns" visibility="public" scope="instance" brief="Returns the number of the columns of the console window." key="Columns.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><declaration language="cs" name="Columns" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.ConsoleOutput.Columns</sig></member><member name="Rows" visibility="public" scope="instance" brief="Returns the number of the rows of the console window." key="Rows.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ConsoleOutput" class-name="ConsoleOutput" exclude-from-list="false"><return /><declaration language="cs" name="Rows" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.ConsoleOutput.Rows</sig></member><parent>System.IDisposable</parent></class><group title="gehtsoft.xce.conio" key="gehtsoft.xce.conio" brief="Low-level console input and output procedure." in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted"><body><p>The gehtsoft.xce.conio namespace consists of the classes for low-level console
input and output.</p><p>The namespace is located in the assembly gehtsoft.xce.conio.dll</p></body></group><class name="ScanCode" sig="T:gehtsoft.xce.conio.ScanCode" key="gehtsoft.xce.conio.ScanCode" brief="The list of scan-codes." type="class" prefix="" in-group="gehtsoft.xce.conio" decl-name="ScanCode" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="LBUTTON" visibility="public" scope="class" brief="" key="LBUTTON.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LBUTTON</sig></member><member name="RBUTTON" visibility="public" scope="class" brief="" key="RBUTTON.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RBUTTON</sig></member><member name="CANCEL" visibility="public" scope="class" brief="" key="CANCEL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.CANCEL</sig></member><member name="MBUTTON" visibility="public" scope="class" brief="" key="MBUTTON.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MBUTTON</sig></member><member name="XBUTTON1" visibility="public" scope="class" brief="" key="XBUTTON1.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.XBUTTON1</sig></member><member name="XBUTTON2" visibility="public" scope="class" brief="" key="XBUTTON2.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.XBUTTON2</sig></member><member name="BACK" visibility="public" scope="class" brief="" key="BACK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BACK</sig></member><member name="TAB" visibility="public" scope="class" brief="" key="TAB.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.TAB</sig></member><member name="CLEAR" visibility="public" scope="class" brief="" key="CLEAR.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.CLEAR</sig></member><member name="RETURN" visibility="public" scope="class" brief="" key="RETURN.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RETURN</sig></member><member name="SHIFT" visibility="public" scope="class" brief="" key="SHIFT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SHIFT</sig></member><member name="CONTROL" visibility="public" scope="class" brief="" key="CONTROL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.CONTROL</sig></member><member name="MENU" visibility="public" scope="class" brief="" key="MENU.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MENU</sig></member><member name="PAUSE" visibility="public" scope="class" brief="" key="PAUSE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.PAUSE</sig></member><member name="CAPITAL" visibility="public" scope="class" brief="" key="CAPITAL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.CAPITAL</sig></member><member name="KANA" visibility="public" scope="class" brief="" key="KANA.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.KANA</sig></member><member name="HANGEUL" visibility="public" scope="class" brief="" key="HANGEUL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.HANGEUL</sig></member><member name="HANGUL" visibility="public" scope="class" brief="" key="HANGUL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.HANGUL</sig></member><member name="JUNJA" visibility="public" scope="class" brief="" key="JUNJA.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.JUNJA</sig></member><member name="FINAL" visibility="public" scope="class" brief="" key="FINAL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.FINAL</sig></member><member name="HANJA" visibility="public" scope="class" brief="" key="HANJA.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.HANJA</sig></member><member name="KANJI" visibility="public" scope="class" brief="" key="KANJI.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.KANJI</sig></member><member name="ESCAPE" visibility="public" scope="class" brief="" key="ESCAPE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ESCAPE</sig></member><member name="CONVERT" visibility="public" scope="class" brief="" key="CONVERT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.CONVERT</sig></member><member name="NONCONVERT" visibility="public" scope="class" brief="" key="NONCONVERT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NONCONVERT</sig></member><member name="ACCEPT" visibility="public" scope="class" brief="" key="ACCEPT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ACCEPT</sig></member><member name="MODECHANGE" visibility="public" scope="class" brief="" key="MODECHANGE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MODECHANGE</sig></member><member name="SPACE" visibility="public" scope="class" brief="" key="SPACE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SPACE</sig></member><member name="PRIOR" visibility="public" scope="class" brief="" key="PRIOR.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.PRIOR</sig></member><member name="NEXT" visibility="public" scope="class" brief="" key="NEXT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NEXT</sig></member><member name="END" visibility="public" scope="class" brief="" key="END.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.END</sig></member><member name="HOME" visibility="public" scope="class" brief="" key="HOME.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.HOME</sig></member><member name="LEFT" visibility="public" scope="class" brief="" key="LEFT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LEFT</sig></member><member name="UP" visibility="public" scope="class" brief="" key="UP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.UP</sig></member><member name="RIGHT" visibility="public" scope="class" brief="" key="RIGHT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RIGHT</sig></member><member name="DOWN" visibility="public" scope="class" brief="" key="DOWN.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.DOWN</sig></member><member name="SELECT" visibility="public" scope="class" brief="" key="SELECT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SELECT</sig></member><member name="PRINT" visibility="public" scope="class" brief="" key="PRINT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.PRINT</sig></member><member name="EXECUTE" visibility="public" scope="class" brief="" key="EXECUTE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.EXECUTE</sig></member><member name="SNAPSHOT" visibility="public" scope="class" brief="" key="SNAPSHOT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SNAPSHOT</sig></member><member name="INSERT" visibility="public" scope="class" brief="" key="INSERT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.INSERT</sig></member><member name="DEL" visibility="public" scope="class" brief="" key="DEL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.DEL</sig></member><member name="HELP" visibility="public" scope="class" brief="" key="HELP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.HELP</sig></member><member name="LWIN" visibility="public" scope="class" brief="" key="LWIN.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LWIN</sig></member><member name="RWIN" visibility="public" scope="class" brief="" key="RWIN.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RWIN</sig></member><member name="APPS" visibility="public" scope="class" brief="" key="APPS.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.APPS</sig></member><member name="SLEEP" visibility="public" scope="class" brief="" key="SLEEP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SLEEP</sig></member><member name="NUMPAD0" visibility="public" scope="class" brief="" key="NUMPAD0.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD0</sig></member><member name="NUMPAD1" visibility="public" scope="class" brief="" key="NUMPAD1.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD1</sig></member><member name="NUMPAD2" visibility="public" scope="class" brief="" key="NUMPAD2.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD2</sig></member><member name="NUMPAD3" visibility="public" scope="class" brief="" key="NUMPAD3.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD3</sig></member><member name="NUMPAD4" visibility="public" scope="class" brief="" key="NUMPAD4.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD4</sig></member><member name="NUMPAD5" visibility="public" scope="class" brief="" key="NUMPAD5.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD5</sig></member><member name="NUMPAD6" visibility="public" scope="class" brief="" key="NUMPAD6.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD6</sig></member><member name="NUMPAD7" visibility="public" scope="class" brief="" key="NUMPAD7.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD7</sig></member><member name="NUMPAD8" visibility="public" scope="class" brief="" key="NUMPAD8.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD8</sig></member><member name="NUMPAD9" visibility="public" scope="class" brief="" key="NUMPAD9.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMPAD9</sig></member><member name="MULTIPLY" visibility="public" scope="class" brief="" key="MULTIPLY.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MULTIPLY</sig></member><member name="ADD" visibility="public" scope="class" brief="" key="ADD.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ADD</sig></member><member name="SEPARATOR" visibility="public" scope="class" brief="" key="SEPARATOR.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SEPARATOR</sig></member><member name="SUBTRACT" visibility="public" scope="class" brief="" key="SUBTRACT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SUBTRACT</sig></member><member name="DECIMAL" visibility="public" scope="class" brief="" key="DECIMAL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.DECIMAL</sig></member><member name="DIVIDE" visibility="public" scope="class" brief="" key="DIVIDE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.DIVIDE</sig></member><member name="F1" visibility="public" scope="class" brief="" key="F1.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F1</sig></member><member name="F2" visibility="public" scope="class" brief="" key="F2.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F2</sig></member><member name="F3" visibility="public" scope="class" brief="" key="F3.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F3</sig></member><member name="F4" visibility="public" scope="class" brief="" key="F4.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F4</sig></member><member name="F5" visibility="public" scope="class" brief="" key="F5.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F5</sig></member><member name="F6" visibility="public" scope="class" brief="" key="F6.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F6</sig></member><member name="F7" visibility="public" scope="class" brief="" key="F7.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F7</sig></member><member name="F8" visibility="public" scope="class" brief="" key="F8.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F8</sig></member><member name="F9" visibility="public" scope="class" brief="" key="F9.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F9</sig></member><member name="F10" visibility="public" scope="class" brief="" key="F10.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F10</sig></member><member name="F11" visibility="public" scope="class" brief="" key="F11.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F11</sig></member><member name="F12" visibility="public" scope="class" brief="" key="F12.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F12</sig></member><member name="F13" visibility="public" scope="class" brief="" key="F13.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F13</sig></member><member name="F14" visibility="public" scope="class" brief="" key="F14.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F14</sig></member><member name="F15" visibility="public" scope="class" brief="" key="F15.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F15</sig></member><member name="F16" visibility="public" scope="class" brief="" key="F16.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F16</sig></member><member name="F17" visibility="public" scope="class" brief="" key="F17.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F17</sig></member><member name="F18" visibility="public" scope="class" brief="" key="F18.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F18</sig></member><member name="F19" visibility="public" scope="class" brief="" key="F19.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F19</sig></member><member name="F20" visibility="public" scope="class" brief="" key="F20.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F20</sig></member><member name="F21" visibility="public" scope="class" brief="" key="F21.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F21</sig></member><member name="F22" visibility="public" scope="class" brief="" key="F22.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F22</sig></member><member name="F23" visibility="public" scope="class" brief="" key="F23.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F23</sig></member><member name="F24" visibility="public" scope="class" brief="" key="F24.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F24</sig></member><member name="NUMLOCK" visibility="public" scope="class" brief="" key="NUMLOCK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NUMLOCK</sig></member><member name="SCROLL" visibility="public" scope="class" brief="" key="SCROLL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SCROLL</sig></member><member name="OEM_NEC_EQUAL" visibility="public" scope="class" brief="" key="OEM_NEC_EQUAL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_NEC_EQUAL</sig></member><member name="OEM_FJ_JISHO" visibility="public" scope="class" brief="" key="OEM_FJ_JISHO.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_FJ_JISHO</sig></member><member name="OEM_FJ_MASSHOU" visibility="public" scope="class" brief="" key="OEM_FJ_MASSHOU.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_FJ_MASSHOU</sig></member><member name="OEM_FJ_TOUROKU" visibility="public" scope="class" brief="" key="OEM_FJ_TOUROKU.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_FJ_TOUROKU</sig></member><member name="OEM_FJ_LOYA" visibility="public" scope="class" brief="" key="OEM_FJ_LOYA.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_FJ_LOYA</sig></member><member name="OEM_FJ_ROYA" visibility="public" scope="class" brief="" key="OEM_FJ_ROYA.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_FJ_ROYA</sig></member><member name="LSHIFT" visibility="public" scope="class" brief="" key="LSHIFT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LSHIFT</sig></member><member name="RSHIFT" visibility="public" scope="class" brief="" key="RSHIFT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RSHIFT</sig></member><member name="LCONTROL" visibility="public" scope="class" brief="" key="LCONTROL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LCONTROL</sig></member><member name="RCONTROL" visibility="public" scope="class" brief="" key="RCONTROL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RCONTROL</sig></member><member name="LMENU" visibility="public" scope="class" brief="" key="LMENU.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LMENU</sig></member><member name="RMENU" visibility="public" scope="class" brief="" key="RMENU.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.RMENU</sig></member><member name="BROWSER_BACK" visibility="public" scope="class" brief="" key="BROWSER_BACK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_BACK</sig></member><member name="BROWSER_FORWARD" visibility="public" scope="class" brief="" key="BROWSER_FORWARD.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_FORWARD</sig></member><member name="BROWSER_REFRESH" visibility="public" scope="class" brief="" key="BROWSER_REFRESH.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_REFRESH</sig></member><member name="BROWSER_STOP" visibility="public" scope="class" brief="" key="BROWSER_STOP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_STOP</sig></member><member name="BROWSER_SEARCH" visibility="public" scope="class" brief="" key="BROWSER_SEARCH.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_SEARCH</sig></member><member name="BROWSER_FAVORITES" visibility="public" scope="class" brief="" key="BROWSER_FAVORITES.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_FAVORITES</sig></member><member name="BROWSER_HOME" visibility="public" scope="class" brief="" key="BROWSER_HOME.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.BROWSER_HOME</sig></member><member name="VOLUME_MUTE" visibility="public" scope="class" brief="" key="VOLUME_MUTE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.VOLUME_MUTE</sig></member><member name="VOLUME_DOWN" visibility="public" scope="class" brief="" key="VOLUME_DOWN.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.VOLUME_DOWN</sig></member><member name="VOLUME_UP" visibility="public" scope="class" brief="" key="VOLUME_UP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.VOLUME_UP</sig></member><member name="MEDIA_NEXT_TRACK" visibility="public" scope="class" brief="" key="MEDIA_NEXT_TRACK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MEDIA_NEXT_TRACK</sig></member><member name="MEDIA_PREV_TRACK" visibility="public" scope="class" brief="" key="MEDIA_PREV_TRACK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MEDIA_PREV_TRACK</sig></member><member name="MEDIA_STOP" visibility="public" scope="class" brief="" key="MEDIA_STOP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MEDIA_STOP</sig></member><member name="MEDIA_PLAY_PAUSE" visibility="public" scope="class" brief="" key="MEDIA_PLAY_PAUSE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.MEDIA_PLAY_PAUSE</sig></member><member name="LAUNCH_MAIL" visibility="public" scope="class" brief="" key="LAUNCH_MAIL.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LAUNCH_MAIL</sig></member><member name="LAUNCH_MEDIA_SELECT" visibility="public" scope="class" brief="" key="LAUNCH_MEDIA_SELECT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LAUNCH_MEDIA_SELECT</sig></member><member name="LAUNCH_APP1" visibility="public" scope="class" brief="" key="LAUNCH_APP1.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LAUNCH_APP1</sig></member><member name="LAUNCH_APP2" visibility="public" scope="class" brief="" key="LAUNCH_APP2.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.LAUNCH_APP2</sig></member><member name="OEM_1" visibility="public" scope="class" brief="" key="OEM_1.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_1</sig></member><member name="OEM_PLUS" visibility="public" scope="class" brief="" key="OEM_PLUS.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_PLUS</sig></member><member name="OEM_COMMA" visibility="public" scope="class" brief="" key="OEM_COMMA.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_COMMA</sig></member><member name="OEM_MINUS" visibility="public" scope="class" brief="" key="OEM_MINUS.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_MINUS</sig></member><member name="OEM_PERIOD" visibility="public" scope="class" brief="" key="OEM_PERIOD.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_PERIOD</sig></member><member name="OEM_2" visibility="public" scope="class" brief="" key="OEM_2.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_2</sig></member><member name="OEM_3" visibility="public" scope="class" brief="" key="OEM_3.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_3</sig></member><member name="OEM_4" visibility="public" scope="class" brief="" key="OEM_4.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_4</sig></member><member name="OEM_5" visibility="public" scope="class" brief="" key="OEM_5.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_5</sig></member><member name="OEM_6" visibility="public" scope="class" brief="" key="OEM_6.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_6</sig></member><member name="OEM_7" visibility="public" scope="class" brief="" key="OEM_7.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_7</sig></member><member name="OEM_8" visibility="public" scope="class" brief="" key="OEM_8.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_8</sig></member><member name="OEM_AX" visibility="public" scope="class" brief="" key="OEM_AX.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_AX</sig></member><member name="OEM_102" visibility="public" scope="class" brief="" key="OEM_102.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.OEM_102</sig></member><member name="ICO_HELP" visibility="public" scope="class" brief="" key="ICO_HELP.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ICO_HELP</sig></member><member name="ICO_00" visibility="public" scope="class" brief="" key="ICO_00.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ICO_00</sig></member><member name="ZERO" visibility="public" scope="class" brief="" key="ZERO.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ZERO</sig></member><member name="ONE" visibility="public" scope="class" brief="" key="ONE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.ONE</sig></member><member name="TWO" visibility="public" scope="class" brief="" key="TWO.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.TWO</sig></member><member name="FREE" visibility="public" scope="class" brief="" key="FREE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.FREE</sig></member><member name="FOUR" visibility="public" scope="class" brief="" key="FOUR.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.FOUR</sig></member><member name="FIVE" visibility="public" scope="class" brief="" key="FIVE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.FIVE</sig></member><member name="SIX" visibility="public" scope="class" brief="" key="SIX.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SIX</sig></member><member name="SEVEN" visibility="public" scope="class" brief="" key="SEVEN.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.SEVEN</sig></member><member name="EIGHT" visibility="public" scope="class" brief="" key="EIGHT.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.EIGHT</sig></member><member name="NINE" visibility="public" scope="class" brief="" key="NINE.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.NINE</sig></member><member name="A" visibility="public" scope="class" brief="" key="A.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.A</sig></member><member name="B" visibility="public" scope="class" brief="" key="B.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.B</sig></member><member name="C" visibility="public" scope="class" brief="" key="C.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.C</sig></member><member name="D" visibility="public" scope="class" brief="" key="D.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.D</sig></member><member name="E" visibility="public" scope="class" brief="" key="E.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.E</sig></member><member name="F" visibility="public" scope="class" brief="" key="F.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.F</sig></member><member name="G" visibility="public" scope="class" brief="" key="G.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.G</sig></member><member name="H" visibility="public" scope="class" brief="" key="H.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.H</sig></member><member name="I" visibility="public" scope="class" brief="" key="I.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.I</sig></member><member name="J" visibility="public" scope="class" brief="" key="J.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.J</sig></member><member name="K" visibility="public" scope="class" brief="" key="K.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.K</sig></member><member name="L" visibility="public" scope="class" brief="" key="L.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.L</sig></member><member name="M" visibility="public" scope="class" brief="" key="M.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.M</sig></member><member name="N" visibility="public" scope="class" brief="" key="N.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.N</sig></member><member name="O" visibility="public" scope="class" brief="" key="O.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.O</sig></member><member name="P" visibility="public" scope="class" brief="" key="P.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.P</sig></member><member name="Q" visibility="public" scope="class" brief="" key="Q.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.Q</sig></member><member name="R" visibility="public" scope="class" brief="" key="R.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.R</sig></member><member name="S" visibility="public" scope="class" brief="" key="S.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.S</sig></member><member name="T" visibility="public" scope="class" brief="" key="T.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.T</sig></member><member name="U" visibility="public" scope="class" brief="" key="U.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.U</sig></member><member name="V" visibility="public" scope="class" brief="" key="V.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.V</sig></member><member name="W" visibility="public" scope="class" brief="" key="W.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.W</sig></member><member name="X" visibility="public" scope="class" brief="" key="X.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.X</sig></member><member name="Y" visibility="public" scope="class" brief="" key="Y.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.Y</sig></member><member name="Z" visibility="public" scope="class" brief="" key="Z.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.ScanCode" class-name="ScanCode" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.ScanCode.Z</sig></member></class><class name="TextClipboard" sig="T:gehtsoft.xce.conio.TextClipboard" key="gehtsoft.xce.conio.TextClipboard" brief="The class to inter-operate with Win32 text clipboard" type="class" prefix="" in-group="gehtsoft.xce.conio" decl-name="TextClipboard" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="IsTextAvailable" visibility="public" scope="class" brief="Checks whether the text in the specified format is available in the clipboard." key="IsTextAvailable.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboard" class-name="TextClipboard" exclude-from-list="false"><return /><param name="format" gray="false" /><declaration language="cs" name="IsTextAvailable" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.conio.TextClipboardFormat]TextClipboardFormat[/clink] format" custom="" /><sig>M:gehtsoft.xce.conio.TextClipboard.IsTextAvailable(gehtsoft.xce.conio.TextClipboardFormat)</sig></member><member name="GetText" visibility="public" scope="class" brief="Gets the text in any available format." key="GetText.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboard" class-name="TextClipboard" exclude-from-list="false"><return /><declaration language="cs" name="GetText" prefix="" suffix="" name-suffix="" return="string" params="" custom="" /><sig>M:gehtsoft.xce.conio.TextClipboard.GetText</sig></member><member name="GetText" visibility="public" scope="class" brief="Gets the text in the specified format." key="GetText.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboard" class-name="TextClipboard" exclude-from-list="false"><return /><param name="format" gray="false" /><declaration language="cs" name="GetText" prefix="" suffix="" name-suffix="" return="string" params="[clink=gehtsoft.xce.conio.TextClipboardFormat]TextClipboardFormat[/clink] format" custom="" /><sig>M:gehtsoft.xce.conio.TextClipboard.GetText(gehtsoft.xce.conio.TextClipboardFormat)</sig></member><member name="SetText" visibility="public" scope="class" brief="Sets unicode text to the clipboard." key="SetText.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboard" class-name="TextClipboard" exclude-from-list="false"><return /><param name="text" gray="false" /><declaration language="cs" name="SetText" prefix="" suffix="" name-suffix="" return="void" params="string text" custom="" /><sig>M:gehtsoft.xce.conio.TextClipboard.SetText(System.String)</sig></member><member name="SetText" visibility="public" scope="class" brief="Sets the text in the specified format to the clipboard." key="SetText.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboard" class-name="TextClipboard" exclude-from-list="false"><return /><param name="text" gray="false" /><param name="format" gray="false" /><declaration language="cs" name="SetText" prefix="" suffix="" name-suffix="" return="void" params="string text, [clink=gehtsoft.xce.conio.TextClipboardFormat]TextClipboardFormat[/clink] format" custom="" /><sig>M:gehtsoft.xce.conio.TextClipboard.SetText(System.String,gehtsoft.xce.conio.TextClipboardFormat)</sig></member></class><class name="TextClipboardFormat" sig="T:gehtsoft.xce.conio.TextClipboardFormat" key="gehtsoft.xce.conio.TextClipboardFormat" brief="" type="enum" prefix="" in-group="gehtsoft.xce.conio" decl-name="TextClipboardFormat" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio]gehtsoft.xce.conio[/clink].</p></body><member name="UnicodeText" visibility="public" scope="class" brief="" key="UnicodeText.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboardFormat" class-name="TextClipboardFormat" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.TextClipboardFormat.UnicodeText</sig></member><member name="Text" visibility="public" scope="class" brief="" key="Text.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.TextClipboardFormat" class-name="TextClipboardFormat" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.TextClipboardFormat.Text</sig></member></class><class name="ColorScheme" sig="T:gehtsoft.xce.conio.win.ColorScheme" key="gehtsoft.xce.conio.win.ColorScheme" brief="The class implements the default container for the color scheme." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="ColorScheme" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="ColorScheme" visibility="public" scope="instance" brief="Constructor." key="ColorScheme.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ColorScheme" class-name="ColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="ColorScheme" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.ColorScheme.#ctor</sig></member><member name="Default" visibility="public" scope="class" brief="Returns the default white-cyan color scheme." key="Default.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ColorScheme" class-name="ColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="Default" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.ColorScheme.Default</sig></member><member name="MenuItem" visibility="public" scope="instance" brief="The color for the enabled, non-selected menu item." key="MenuItem.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuItem" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuItem</sig></member><member name="MenuItemSelected" visibility="public" scope="instance" brief="The color for the enabled, selected menu item." key="MenuItemSelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuItemSelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuItemSelected</sig></member><member name="MenuDisabledItem" visibility="public" scope="instance" brief="The color for the disabled, non-selected menu item." key="MenuDisabledItem.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuDisabledItem" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItem</sig></member><member name="MenuDisabledItemSelected" visibility="public" scope="instance" brief="The color for the disabled, selected menu item." key="MenuDisabledItemSelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuDisabledItemSelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItemSelected</sig></member><member name="MenuHotKey" visibility="public" scope="instance" brief="The color for the hot key character on non-selected menu item." key="MenuHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKey</sig></member><member name="MenuHotKeySelected" visibility="public" scope="instance" brief="The color for the hot key character on selected menu item." key="MenuHotKeySelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuHotKeySelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKeySelected</sig></member><member name="DialogBorder" visibility="public" scope="instance" brief="The color of the dialog border." key="DialogBorder.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogBorder" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogBorder</sig></member><member name="DialogItemLabelColor" visibility="public" scope="instance" brief="The color of the label control." key="DialogItemLabelColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemLabelColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelColor</sig></member><member name="DialogItemLabelHotKey" visibility="public" scope="instance" brief="The color of the hot key character on the label control." key="DialogItemLabelHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemLabelHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelHotKey</sig></member><member name="DialogItemCheckBoxColor" visibility="public" scope="instance" brief="The color of the check box control." key="DialogItemCheckBoxColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColor</sig></member><member name="DialogItemCheckBoxColorFocused" visibility="public" scope="instance" brief="The color of the active (focused) check box control." key="DialogItemCheckBoxColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorFocused</sig></member><member name="DialogItemCheckBoxHotKey" visibility="public" scope="instance" brief="The color of the hot key on check box control." key="DialogItemCheckBoxHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKey</sig></member><member name="DialogItemCheckBoxHotKeyFocused" visibility="public" scope="instance" brief="The color of the hot key on active (focused) check box control." key="DialogItemCheckBoxHotKeyFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxHotKeyFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKeyFocused</sig></member><member name="DialogItemCheckBoxColorDisabled" visibility="public" scope="instance" brief="The color of the disabled check box control." key="DialogItemCheckBoxColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorDisabled</sig></member><member name="DialogItemButtonColor" visibility="public" scope="instance" brief="" key="DialogItemButtonColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColor</sig></member><member name="DialogItemButtonColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemButtonColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorDisabled</sig></member><member name="DialogItemButtonColorFocused" visibility="public" scope="instance" brief="" key="DialogItemButtonColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorFocused</sig></member><member name="DialogItemButtonHotKey" visibility="public" scope="instance" brief="" key="DialogItemButtonHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKey</sig></member><member name="DialogItemButtonHotKeyFocused" visibility="public" scope="instance" brief="" key="DialogItemButtonHotKeyFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonHotKeyFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKeyFocused</sig></member><member name="DialogItemEditColor" visibility="public" scope="instance" brief="" key="DialogItemEditColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColor</sig></member><member name="DialogItemEditColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemEditColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorDisabled</sig></member><member name="DialogItemEditColorFocused" visibility="public" scope="instance" brief="" key="DialogItemEditColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorFocused</sig></member><member name="DialogItemEditSelection" visibility="public" scope="instance" brief="" key="DialogItemEditSelection.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditSelection" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelection</sig></member><member name="DialogItemEditSelectionFocused" visibility="public" scope="instance" brief="" key="DialogItemEditSelectionFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditSelectionFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelectionFocused</sig></member><member name="DialogItemListBoxColor" visibility="public" scope="instance" brief="" key="DialogItemListBoxColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColor</sig></member><member name="DialogItemListBoxColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemListBoxColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorDisabled</sig></member><member name="DialogItemListBoxColorFocused" visibility="public" scope="instance" brief="" key="DialogItemListBoxColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorFocused</sig></member><member name="DialogItemListBoxSelection" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelection.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelection" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelection</sig></member><member name="DialogItemListBoxSelectionFocused" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocused</sig></member><member name="DialogItemListBoxSelectionHighlighted" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionHighlighted.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionHighlighted" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted</sig></member><member name="DialogItemListBoxSelectionFocusedHighlighted" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionFocusedHighlighted.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionFocusedHighlighted" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted</sig></member><parent>[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]</parent></class><class name="CommandMenuItem" sig="T:gehtsoft.xce.conio.win.CommandMenuItem" key="gehtsoft.xce.conio.win.CommandMenuItem" brief="The menu item associated with the command." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="CommandMenuItem" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="CommandMenuItem" visibility="public" scope="instance" brief="Constructor for a simple name." key="CommandMenuItem.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.CommandMenuItem" class-name="CommandMenuItem" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The name of the command.</p></body></param><param name="command" gray="false"><body><p>The identifier of the command.</p></body></param><declaration language="cs" name="CommandMenuItem" prefix="" suffix="" name-suffix="" return="" params="string title, int command" custom="" /><sig>M:gehtsoft.xce.conio.win.CommandMenuItem.#ctor(System.String,System.Int32)</sig></member><member name="CommandMenuItem" visibility="public" scope="instance" brief="Constructor for the composite name." key="CommandMenuItem.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.CommandMenuItem" class-name="CommandMenuItem" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The name of the command.</p></body></param><param name="rightSide" gray="false"><body><p>The hint (for example a keyboard shortcut) to be shown on right size of the command bar.</p></body></param><param name="command" gray="false"><body><p>The identifier of the command.</p></body></param><declaration language="cs" name="CommandMenuItem" prefix="" suffix="" name-suffix="" return="" params="string title, string rightSide, int command" custom="" /><sig>M:gehtsoft.xce.conio.win.CommandMenuItem.#ctor(System.String,System.String,System.Int32)</sig></member><member name="RightSide" visibility="public" scope="instance" brief="The hint." key="RightSide.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.CommandMenuItem" class-name="CommandMenuItem" exclude-from-list="false"><return /><declaration language="cs" name="RightSide" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.CommandMenuItem.RightSide</sig></member><member name="Command" visibility="public" scope="instance" brief="The identifier of the command." key="Command.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.CommandMenuItem" class-name="CommandMenuItem" exclude-from-list="false"><return /><declaration language="cs" name="Command" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.CommandMenuItem.Command</sig></member><member name="Checked" visibility="public" scope="instance" brief="The flag indicating that the check flag must be shown at left of the menu item." key="Checked.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.CommandMenuItem" class-name="CommandMenuItem" exclude-from-list="false"><body><p>The menu item is not checked by default.</p></body><return /><declaration language="cs" name="Checked" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.CommandMenuItem.Checked</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating whether the menu item is enabled or disabled." key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.CommandMenuItem" class-name="CommandMenuItem" exclude-from-list="false"><body><p>The disabled menu item cannot be chosen. The menu item is enabled by default.</p></body><return /><declaration language="cs" name="Enabled" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.CommandMenuItem.Enabled</sig></member><parent>[clink=gehtsoft.xce.conio.win.MenuItem]MenuItem[/clink]</parent></class><class name="Dialog" sig="T:gehtsoft.xce.conio.win.Dialog" key="gehtsoft.xce.conio.win.Dialog" brief="The dialog window." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="Dialog" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogResultOK" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Enter." key="DialogResultOK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultOK</sig></member><member name="DialogResultCancel" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Escape." key="DialogResultCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel</sig></member><member name="Dialog" visibility="public" scope="instance" brief="Constructor." key="Dialog.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The title of the dialog window.</p></body></param><param name="colors" gray="false"><body><p>The color scheme to be used.</p></body></param><param name="sizeable" gray="false"><body><p>The flag indicating whether the dialog window must be sizeable.</p></body></param><param name="height" gray="false"><body><p>Height of the dialog in rows (including the border).</p></body></param><param name="width" gray="false"><body><p>Width of the dialog in columns (including the border).</p></body></param><declaration language="cs" name="Dialog" prefix="" suffix="" name-suffix="" return="" params="string title, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors, bool sizeable, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.#ctor(System.String,gehtsoft.xce.conio.win.IColorScheme,System.Boolean,System.Int32,System.Int32)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new dialog item." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>You don't need to create the window objects for dialog items. The window objects will be created
automatically when the dialog is created.</p></body><return /><param name="item" gray="false"><body><p>A new dialog item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="DoModal" visibility="public" scope="instance" brief="Creates the dialog window and waits until the dialog is closed." key="DoModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="manager" gray="false"><body><p>The window manager.</p></body></param><declaration language="cs" name="DoModal" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] manager" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)</sig></member><member name="EndDialog" visibility="public" scope="instance" brief="Closes the dialog and sets the dialog result code." key="EndDialog.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="resultCode" gray="false"><body><p>The dialog result code.</p></body></param><declaration language="cs" name="EndDialog" prefix="" suffix="" name-suffix="" return="void" params="int resultCode" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)</sig></member><member name="PretranslateOnKeyPressed" visibility="public" scope="instance" brief="The method must be called by an implementation of custom dialog item class before processing a key." key="PretranslateOnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation processes the following keys:</p><p>1) The focus is passed to the next/previous item when Tab/Shift-Tab is pressed.</p><p>2) The hot keys of buttons and labels are processed.</p><p>3) When Enter is pressed, the control with [c]Dialog.DialogResultOK[/c] identifier is clicked.</p><p>4) When Escape is pressed, the control with [c]Dialog.DialogResultCancel[/c] identifier is clicked.</p></body><return /><param name="scanCode" gray="false"><body><p>The scan code received.</p></body></param><param name="character" gray="false"><body><p>The character entered.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating whether the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating whether the control key is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating whether the alt key is pressed.</p></body></param><declaration language="cs" name="PretranslateOnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="bool" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnItemClick" visibility="public" scope="instance" brief="The method is called when the dialog item has been clicked." key="OnItemClick.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation ends the dialog if the control with [c]Dialog.DialogResultOK[/c] or
[c]Dialog.DialogResultCancel[/c] identifier is clicked and puts the identifier of the clicked object into
the dialog result code.</p></body><return /><param name="item" gray="false"><body><p>The item clicked.</p></body></param><declaration language="cs" name="OnItemClick" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemActivated" visibility="public" scope="instance" brief="The method is called when the dialog item got focus." key="OnItemActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The activated item.</p></body></param><declaration language="cs" name="OnItemActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemChanged" visibility="public" scope="instance" brief="The method is called when the content or the selection of the dialog item is changed." key="OnItemChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The changed item.</p></body></param><declaration language="cs" name="OnItemChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="ResultCode" visibility="public" scope="instance" brief="The result code of the dialog." key="ResultCode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The result code of the dialog can be set by [clink=gehtsoft.xce.conio.win.Dialog.EndDialog.0]Dialog.EndDialog()[/clink] method.</p></body><return /><declaration language="cs" name="ResultCode" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.ResultCode</sig></member><member name="Colors" visibility="public" scope="instance" brief="The color scheme of the dialog." key="Colors.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Colors" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Colors</sig></member><member name="Items" visibility="public" scope="instance" brief="The enumeration of the dialog items." key="Items.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Items" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Items</sig></member><member name="AddItemBefore" visibility="public" scope="instance" brief="Adds a new item before another item." key="AddItemBefore.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item to be added.</p></body></param><param name="next" gray="false"><body><p>The existing item to add the item before it.</p></body></param><declaration language="cs" name="AddItemBefore" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item, [clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] next" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnOK" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultOK button." key="OnOK.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultOK[/c] identifier is clicked.
If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultOK[/c].</p></body><return /><declaration language="cs" name="OnOK" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnOK</sig></member><member name="OnCancel" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultCancel button." key="OnCancel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultCancel[/c] identifier is clicked.</p><p>If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultCancel[/c].</p></body><return /><declaration language="cs" name="OnCancel" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnCancel</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the button specified in its row." key="CenterButtons.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="b1" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers two buttons specified in their row." key="CenterButtons.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers three buttons specified in their row." key="CenterButtons.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><param name="b3" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b3" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the dialog item buttons." key="CenterButtons.4" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="buttons" gray="false"><body><p>An array of the buttons to be centered.</p></body></param><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink][] buttons" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])</sig></member><member name="getClientArea" visibility="public" scope="instance" brief="Gets the size and coordinates of the client area." key="getClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the client area.</p></body></param><param name="col" gray="false"><body><p>The column of the top-left corner of the client area.</p></body></param><param name="height" gray="false"><body><p>The height of the client area in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the client area in rows.</p></body></param><declaration language="cs" name="getClientArea" prefix="virtual" suffix="" name-suffix="" return="void" params="out int row, out int col, out int height, out int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)</sig></member><member name="Title" visibility="public" scope="instance" brief="The title of the window." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowBorderContainer.Title</sig></member><member name="attachClientArea" visibility="protected" scope="instance" brief="Attaches the client area to the window." key="attachClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><declaration language="cs" name="attachClientArea" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.WindowBorderContainer]WindowBorderContainer[/clink]</parent></class><class name="DialogItem" sig="T:gehtsoft.xce.conio.win.DialogItem" key="gehtsoft.xce.conio.win.DialogItem" brief="The base class for dialog items." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItem" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="DialogItem" visibility="protected" scope="instance" brief="Constructor." key="DialogItem.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="height" gray="false"><body><p>Height of the dialog item in rows.</p></body></param><param name="width" gray="false"><body><p>Widths of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItem" prefix="" suffix="" name-suffix="" return="" params="int id, int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.Window]Window[/clink]</parent></class><class name="DialogItemButton" sig="T:gehtsoft.xce.conio.win.DialogItemButton" key="gehtsoft.xce.conio.win.DialogItemButton" brief="Dialog button control." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemButton" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogItemButton" visibility="public" scope="instance" brief="Constructor for the specified button size." key="DialogItemButton.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemButton" class-name="DialogItemButton" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The button title.</p></body></param><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="width" gray="false"><body><p>Widths of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItemButton" prefix="" suffix="" name-suffix="" return="" params="string title, int id, int row, int column, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemButton.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="DialogItemButton" visibility="public" scope="instance" brief="Constructor for the default button size." key="DialogItemButton.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemButton" class-name="DialogItemButton" exclude-from-list="false"><body><p>The default width of the button is equal to the length of the title.</p></body><return /><param name="title" gray="false"><body><p>The button title.</p></body></param><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><declaration language="cs" name="DialogItemButton" prefix="" suffix="" name-suffix="" return="" params="string title, int id, int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemButton.#ctor(System.String,System.Int32,System.Int32,System.Int32)</sig></member><member name="Enable" visibility="public" scope="instance" brief="Enables or disables the button." key="Enable.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemButton" class-name="DialogItemButton" exclude-from-list="false"><return /><param name="enable" gray="false" /><declaration language="cs" name="Enable" prefix="" suffix="" name-suffix="" return="void" params="bool enable" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemButton.Enable(System.Boolean)</sig></member><member name="Title" visibility="public" scope="instance" brief="Gets the button title." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemButton" class-name="DialogItemButton" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemButton.Title</sig></member><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]</parent></class><class name="DialogItemCheckBox" sig="T:gehtsoft.xce.conio.win.DialogItemCheckBox" key="gehtsoft.xce.conio.win.DialogItemCheckBox" brief="The dialog check box control." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemCheckBox" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogItemCheckBox" visibility="public" scope="instance" brief="Constructor for the specified check box size size." key="DialogItemCheckBox.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemCheckBox" class-name="DialogItemCheckBox" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The button title.</p></body></param><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="isChecked" gray="false"><body><p>The flag indicating the initial value of the check box.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="width" gray="false"><body><p>Widths of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItemCheckBox" prefix="" suffix="" name-suffix="" return="" params="string title, int id, bool isChecked, int row, int column, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemCheckBox.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)</sig></member><member name="DialogItemCheckBox" visibility="public" scope="instance" brief="Constructor for the default check box size size." key="DialogItemCheckBox.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemCheckBox" class-name="DialogItemCheckBox" exclude-from-list="false"><body><p>The default width of the checkbox is equal to the length of the title plus 4 columns.</p></body><return /><param name="title" gray="false"><body><p>The button title.</p></body></param><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="isChecked" gray="false"><body><p>The flag indicating the initial value of the check box.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="width" gray="false"><body><p>Widths of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItemCheckBox" prefix="" suffix="" name-suffix="" return="" params="string title, int id, bool isChecked, int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemCheckBox.#ctor(System.String,System.Int32,System.Boolean,System.Int32,System.Int32)</sig></member><member name="Enable" visibility="public" scope="instance" brief="Enables or disables the control." key="Enable.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemCheckBox" class-name="DialogItemCheckBox" exclude-from-list="false"><return /><param name="enable" gray="false" /><declaration language="cs" name="Enable" prefix="" suffix="" name-suffix="" return="void" params="bool enable" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemCheckBox.Enable(System.Boolean)</sig></member><member name="Title" visibility="public" scope="instance" brief="Gets the title of the check box." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemCheckBox" class-name="DialogItemCheckBox" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemCheckBox.Title</sig></member><member name="Checked" visibility="public" scope="instance" brief="Gets or sets the checked status of the check box." key="Checked.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemCheckBox" class-name="DialogItemCheckBox" exclude-from-list="false"><return /><declaration language="cs" name="Checked" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemCheckBox.Checked</sig></member><member name="CheckMark" visibility="public" scope="instance" brief="Gets or sets the character used to display the check mark." key="CheckMark.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemCheckBox" class-name="DialogItemCheckBox" exclude-from-list="false"><return /><declaration language="cs" name="CheckMark" prefix="" suffix=" get; set;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemCheckBox.CheckMark</sig></member><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]</parent></class><class name="DialogItemComboBox" sig="T:gehtsoft.xce.conio.win.DialogItemComboBox" key="gehtsoft.xce.conio.win.DialogItemComboBox" brief="Dialog edit combo box" type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemComboBox" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogItemComboBox" visibility="public" scope="instance" brief="Constructor." key="DialogItemComboBox.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><param name="text" gray="false"><body><p>The initial text for the edit part of the combo box</p></body></param><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="width" gray="false"><body><p>Width of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItemComboBox" prefix="" suffix="" name-suffix="" return="" params="string text, int id, int row, int column, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Creates a new item without user data and adds it into list part of the control to the end of the list." key="AddItem.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item text.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="string item" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(System.String)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Creates a new item with user data and adds it into list part of the control to the end of the list." key="AddItem.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item text.</p></body></param><param name="userData" gray="false"><body><p>The user data associated with the item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="string item, object userData" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(System.String,System.Object)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new list box item into the list part of the control." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>A new item to be added.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)</sig></member><member name="RemoveItem" visibility="public" scope="instance" brief="Removes an item from the list part of the control." key="RemoveItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The zero-based index of the item.</p></body></param><declaration language="cs" name="RemoveItem" prefix="" suffix="" name-suffix="" return="void" params="int index" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.RemoveItem(System.Int32)</sig></member><member name="RemoveAllItems" visibility="public" scope="instance" brief="Removes all items from the list part of the control." key="RemoveAllItems.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><declaration language="cs" name="RemoveAllItems" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.RemoveAllItems</sig></member><member name="Count" visibility="public" scope="instance" brief="Returns the number of the items in the list part of the control." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemComboBox.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the item of from the list part of the control by the index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The zero-based index of the item.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemComboBox.Item(System.Int32)</sig></member><member name="CurSel" visibility="public" scope="instance" brief="Gets or sets currently selected list item." key="CurSel.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><declaration language="cs" name="CurSel" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemComboBox.CurSel</sig></member><member name="OnTextChangedByUser" visibility="public" scope="instance" brief="The method is called when the user types the text in the combobox." key="OnTextChangedByUser.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemComboBox" class-name="DialogItemComboBox" exclude-from-list="false"><return /><declaration language="cs" name="OnTextChangedByUser" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemComboBox.OnTextChangedByUser</sig></member><member name="Enable" visibility="public" scope="instance" brief="Enables or disables the control." key="Enable.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="enable" gray="false" /><declaration language="cs" name="Enable" prefix="" suffix="" name-suffix="" return="void" params="bool enable" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enable(System.Boolean)</sig></member><member name="SetText" visibility="public" scope="instance" brief="Sets the text." key="SetText.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="text" gray="false"><body><p>The new text to set.</p></body></param><declaration language="cs" name="SetText" prefix="" suffix="" name-suffix="" return="void" params="string text" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetText(System.String)</sig></member><member name="SetSel" visibility="public" scope="instance" brief="Sets the selection." key="SetSel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="from" gray="false"><body><p>The first character of the selection.</p></body></param><param name="to" gray="false"><body><p>The first character after the selection end.</p></body></param><declaration language="cs" name="SetSel" prefix="" suffix="" name-suffix="" return="void" params="int from, int to" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetSel(System.Int32,System.Int32)</sig></member><member name="Text" visibility="public" scope="instance" brief="Gets the current text in the control." key="Text.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="Text" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Text</sig></member><member name="Readonly" visibility="public" scope="instance" brief="Gets or sets the readonly mode of the control." key="Readonly.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="Readonly" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Readonly</sig></member><member name="mText" visibility="protected" scope="instance" brief="The text of the control." key="mText.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mText" prefix="" suffix="" name-suffix="" return="StringBuilder" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mText</sig></member><member name="mOffset" visibility="protected" scope="instance" brief="The offset of the first visible character in the text." key="mOffset.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mOffset" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mOffset</sig></member><member name="mCaret" visibility="protected" scope="instance" brief="The position of the caret in the text." key="mCaret.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mCaret" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mCaret</sig></member><member name="mSelectionStart" visibility="protected" scope="instance" brief="The position of the first selected character in the text." key="mSelectionStart.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mSelectionStart" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionStart</sig></member><member name="mSelectionEnd" visibility="protected" scope="instance" brief="The position next to the last selected character in the text." key="mSelectionEnd.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mSelectionEnd" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionEnd</sig></member><member name="mInsertMode" visibility="protected" scope="instance" brief="The insert/overtype mode." key="mInsertMode.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mInsertMode" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInsertMode</sig></member><member name="mReadonly" visibility="protected" scope="instance" brief="The read-only flag" key="mReadonly.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mReadonly" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mReadonly</sig></member><member name="EditWidth" visibility="protected" scope="instance" brief="Gets the width of the text edit part of the window." key="EditWidth.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="EditWidth" prefix="virtual" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.EditWidth</sig></member><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.DialogItemSingleLineTextBox]DialogItemSingleLineTextBox[/clink]</parent><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink]&gt;</parent></class><class name="DialogItemLabel" sig="T:gehtsoft.xce.conio.win.DialogItemLabel" key="gehtsoft.xce.conio.win.DialogItemLabel" brief="Dialog label control." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemLabel" sort="true" class-name-in-key="true" transform="def"><body><p>The label performs no activity and can be used to display the labels for other controls and to activate these controls
by hot keys. When label's hotkey is pressed, the control next to the label is activated.</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogItemLabel" visibility="public" scope="instance" brief="Constructor." key="DialogItemLabel.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemLabel" class-name="DialogItemLabel" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The label title.</p></body></param><param name="id" gray="false"><body><p>The control identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><declaration language="cs" name="DialogItemLabel" prefix="" suffix="" name-suffix="" return="" params="string title, int id, int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemLabel.#ctor(System.String,System.Int32,System.Int32,System.Int32)</sig></member><member name="Title" visibility="public" scope="instance" brief="Gets the title of the label." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemLabel" class-name="DialogItemLabel" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemLabel.Title</sig></member><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]</parent></class><class name="DialogItemListBox" sig="T:gehtsoft.xce.conio.win.DialogItemListBox" key="gehtsoft.xce.conio.win.DialogItemListBox" brief="The dialog single-selection listbox control." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemListBox" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="Enable" visibility="public" scope="instance" brief="Enables or disables the control." key="Enable.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="enable" gray="false" /><declaration language="cs" name="Enable" prefix="" suffix="" name-suffix="" return="void" params="bool enable" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.Enable(System.Boolean)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Creates a new item without user data and adds it to the end of the list." key="AddItem.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The title of the item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="string item" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(System.String)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Creates a new item with user data and adds it to the end of the list." key="AddItem.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The title of the item.</p></body></param><param name="userData" gray="false"><body><p>The user data associated with the item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="string item, object userData" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(System.String,System.Object)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new list box item." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item object to be added.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)</sig></member><member name="RemoveItem" visibility="public" scope="instance" brief="Removes the item at the specified index." key="RemoveItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the item.</p></body></param><declaration language="cs" name="RemoveItem" prefix="" suffix="" name-suffix="" return="void" params="int index" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.RemoveItem(System.Int32)</sig></member><member name="RemoveAllItems" visibility="public" scope="instance" brief="Removes all items from the list box." key="RemoveAllItems.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><declaration language="cs" name="RemoveAllItems" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.RemoveAllItems</sig></member><member name="EnsureVisible" visibility="public" scope="instance" brief="Scrolls the control to make the item visible." key="EnsureVisible.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the item.</p></body></param><declaration language="cs" name="EnsureVisible" prefix="" suffix="" name-suffix="" return="void" params="int index" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.EnsureVisible(System.Int32)</sig></member><member name="DialogItemListBox" visibility="public" scope="instance" brief="Constructor." key="DialogItemListBox.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="height" gray="false"><body><p>Height of the dialog item in rows.</p></body></param><param name="width" gray="false"><body><p>Widths of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItemListBox" prefix="" suffix="" name-suffix="" return="" params="int id, int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="Count" visibility="public" scope="instance" brief="Gets the number of list items." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemListBox.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the item by the index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><param name="index" gray="false" /><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemListBox.Item(System.Int32)</sig></member><member name="CurSel" visibility="public" scope="instance" brief="Gets the index of the currently selected item." key="CurSel.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBox" class-name="DialogItemListBox" exclude-from-list="false"><return /><declaration language="cs" name="CurSel" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemListBox.CurSel</sig></member><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]</parent><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink]&gt;</parent><parent>System.Collections.IEnumerable</parent></class><class name="DialogItemListBoxString" sig="T:gehtsoft.xce.conio.win.DialogItemListBoxString" key="gehtsoft.xce.conio.win.DialogItemListBoxString" brief="The item of the dialog list box." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemListBoxString" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogItemListBoxString" visibility="public" scope="instance" brief="Constructor." key="DialogItemListBoxString.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBoxString" class-name="DialogItemListBoxString" exclude-from-list="false"><return /><param name="label" gray="false"><body><p>The label (text) of the list box item.</p></body></param><param name="userData" gray="false"><body><p>The user data associated with the list box.</p></body></param><declaration language="cs" name="DialogItemListBoxString" prefix="" suffix="" name-suffix="" return="" params="string label, object userData" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemListBoxString.#ctor(System.String,System.Object)</sig></member><member name="Label" visibility="public" scope="instance" brief="Returns the label (text) of the list box item." key="Label.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBoxString" class-name="DialogItemListBoxString" exclude-from-list="false"><return /><declaration language="cs" name="Label" prefix="virtual" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemListBoxString.Label</sig></member><member name="UserData" visibility="public" scope="instance" brief="Returns the user data associated with the list box item." key="UserData.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemListBoxString" class-name="DialogItemListBoxString" exclude-from-list="false"><return /><declaration language="cs" name="UserData" prefix="virtual" suffix=" get; set;" name-suffix="" return="object" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemListBoxString.UserData</sig></member></class><class name="DialogItemSingleLineTextBox" sig="T:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" key="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" brief="Dialog single-line edit box." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="DialogItemSingleLineTextBox" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="DialogItemSingleLineTextBox" visibility="public" scope="instance" brief="Constructor." key="DialogItemSingleLineTextBox.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="text" gray="false"><body><p>The initial text.</p></body></param><param name="id" gray="false"><body><p>The item identifier.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area.</p></body></param><param name="width" gray="false"><body><p>Width of the dialog item in columns.</p></body></param><declaration language="cs" name="DialogItemSingleLineTextBox" prefix="" suffix="" name-suffix="" return="" params="string text, int id, int row, int column, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="Enable" visibility="public" scope="instance" brief="Enables or disables the control." key="Enable.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="enable" gray="false" /><declaration language="cs" name="Enable" prefix="" suffix="" name-suffix="" return="void" params="bool enable" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Enable(System.Boolean)</sig></member><member name="SetText" visibility="public" scope="instance" brief="Sets the text." key="SetText.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="text" gray="false"><body><p>The new text to set.</p></body></param><declaration language="cs" name="SetText" prefix="" suffix="" name-suffix="" return="void" params="string text" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetText(System.String)</sig></member><member name="SetSel" visibility="public" scope="instance" brief="Sets the selection." key="SetSel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><param name="from" gray="false"><body><p>The first character of the selection.</p></body></param><param name="to" gray="false"><body><p>The first character after the selection end.</p></body></param><declaration language="cs" name="SetSel" prefix="" suffix="" name-suffix="" return="void" params="int from, int to" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.SetSel(System.Int32,System.Int32)</sig></member><member name="Text" visibility="public" scope="instance" brief="Gets the current text in the control." key="Text.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="Text" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Text</sig></member><member name="Readonly" visibility="public" scope="instance" brief="Gets or sets the readonly mode of the control." key="Readonly.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="Readonly" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.Readonly</sig></member><member name="mText" visibility="protected" scope="instance" brief="The text of the control." key="mText.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mText" prefix="" suffix="" name-suffix="" return="StringBuilder" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mText</sig></member><member name="mOffset" visibility="protected" scope="instance" brief="The offset of the first visible character in the text." key="mOffset.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mOffset" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mOffset</sig></member><member name="mCaret" visibility="protected" scope="instance" brief="The position of the caret in the text." key="mCaret.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mCaret" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mCaret</sig></member><member name="mSelectionStart" visibility="protected" scope="instance" brief="The position of the first selected character in the text." key="mSelectionStart.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mSelectionStart" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionStart</sig></member><member name="mSelectionEnd" visibility="protected" scope="instance" brief="The position next to the last selected character in the text." key="mSelectionEnd.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mSelectionEnd" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mSelectionEnd</sig></member><member name="mInsertMode" visibility="protected" scope="instance" brief="The insert/overtype mode." key="mInsertMode.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mInsertMode" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mInsertMode</sig></member><member name="mReadonly" visibility="protected" scope="instance" brief="The read-only flag" key="mReadonly.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="mReadonly" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.mReadonly</sig></member><member name="OnTextChangedByUser" visibility="protected" scope="instance" brief="The method is called when the user changes the text content." key="OnTextChangedByUser.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="OnTextChangedByUser" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.OnTextChangedByUser</sig></member><member name="EditWidth" visibility="protected" scope="instance" brief="Gets the width of the text edit part of the window." key="EditWidth.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItemSingleLineTextBox" class-name="DialogItemSingleLineTextBox" exclude-from-list="false"><return /><declaration language="cs" name="EditWidth" prefix="virtual" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItemSingleLineTextBox.EditWidth</sig></member><member name="Click" visibility="public" scope="instance" brief="Clicks the dialog item." key="Click.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Click" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.Click</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the top-left corner of the dialog item relative to top-left corner of the dialog client area." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="Height of the dialog item in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="Widths of the dialog item in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Width</sig></member><member name="Dialog" visibility="public" scope="instance" brief="The dialog object to which the dialog item belongs." key="Dialog.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Dialog" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Dialog</sig></member><member name="IsInputElement" visibility="public" scope="instance" brief="The flag indicating that the dialog item can process the dialog input." key="IsInputElement.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="IsInputElement" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.IsInputElement</sig></member><member name="Enabled" visibility="public" scope="instance" brief="The flag indicating that the dialog item is enabled" key="Enabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="Enabled" prefix="abstact" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.Enabled</sig></member><member name="HasHotKey" visibility="public" scope="instance" brief="The flag indicating that the dialog item has hot key." key="HasHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HasHotKey" prefix="virtual" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HasHotKey</sig></member><member name="HotKey" visibility="public" scope="instance" brief="The hot key of the dialog item." key="HotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="HotKey" prefix="virtual" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.HotKey</sig></member><member name="ID" visibility="public" scope="instance" brief="The dialog item identifier." key="ID.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="ID" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.DialogItem.ID</sig></member><member name="repos" visibility="public" scope="instance" brief="Reposition the control." key="repos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><body><p>The method must be used instead of [clink=gehtsoft.xce.conio.win.Window.move.0]move()[/clink] when the dialog
is not created yet.</p></body><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="repos" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.repos(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnHotkeyActivated" visibility="public" scope="instance" brief="The method is called when the item is activated using a hot key." key="OnHotkeyActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.DialogItem" class-name="DialogItem" exclude-from-list="false"><return /><declaration language="cs" name="OnHotkeyActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.DialogItem.OnHotkeyActivated</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]</parent></class><group title="gehtsoft.xce.conio.win" key="gehtsoft.xce.conio.win" brief="CUA console interface" in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted"><body><p>The namespace [c]gehtsoft.xce.conio.win[/c] consists of the classes for implementing the
CUA-based window user interface inside the console.</p><p>See [url=img/conio_win.png]Class Diagram[/url] of the [c]gehtsoft.xce.conio.win[/c] package.</p></body></group><class name="FileDialog" sig="T:gehtsoft.xce.conio.win.FileDialog" key="gehtsoft.xce.conio.win.FileDialog" brief="The modal file prompt dialog." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="FileDialog" sort="true" class-name-in-key="true" transform="def"><body><p>See also [clink=gehtsoft.xce.conio.win.FileOpenDialog]FileOpenDialog[/clink] and [clink=gehtsoft.xce.conio.win.FileSaveDialog]FileSaveDialog[/clink]
classes.</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="FileDialog" visibility="public" scope="instance" brief="Constructor." key="FileDialog.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>Dialog title.</p></body></param><param name="defaultDirectory" gray="false"><body><p>Default directory to show.</p><p>If the value is null and default file is specified, the directory containing the default will be shown.
If the value is null and default file is not specified, the current working directory will be shown.</p></body></param><param name="defaultFile" gray="false"><body><p>The default file name to show on dialog open.</p></body></param><param name="colors" gray="false"><body><p>The color scheme.</p></body></param><param name="height" gray="false"><body><p>Height of the dialog.</p><p>The value must be not less than 9.</p></body></param><param name="width" gray="false"><body><p>Width of the dialog.</p><p>The value must be not less than 20.</p></body></param><declaration language="cs" name="FileDialog" prefix="" suffix="" name-suffix="" return="" params="string title, string defaultDirectory, string defaultFile, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.#ctor(System.String,System.String,System.String,gehtsoft.xce.conio.win.IColorScheme,System.Int32,System.Int32)</sig></member><member name="AddLocation" visibility="public" scope="instance" brief="Adds a location to the location list." key="AddLocation.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="location" gray="false"><body><p>The folder name to add into locations.</p></body></param><declaration language="cs" name="AddLocation" prefix="" suffix="" name-suffix="" return="void" params="string location" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)</sig></member><member name="CheckFileName" visibility="protected" scope="instance" brief="The method validates the file name." key="CheckFileName.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><body><p>If the method returns [c]true[/c] the dialog ends and file name will be returned to the caller.</p><p>If the method returns [c]false[/c] the dialog continues to work.</p></body><return /><param name="name" gray="false"><body><p>The file name chosen by the user.</p></body></param><declaration language="cs" name="CheckFileName" prefix="protected virtual" suffix="" name-suffix="" return="bool" params="string name" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)</sig></member><member name="AddCustomButton" visibility="protected" scope="instance" brief="Adds a custom button in addition to Ok and Cancel." key="AddCustomButton.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="id" gray="false"><body><p>The button identifier (use identifiers 0x2000 and above).</p></body></param><param name="title" gray="false"><body><p>The button title.</p></body></param><declaration language="cs" name="AddCustomButton" prefix="" suffix="" name-suffix="" return="void" params="int id, string title" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)</sig></member><member name="File" visibility="public" scope="instance" brief="The file name chosen by the user." key="File.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><declaration language="cs" name="File" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.FileDialog.File</sig></member><member name="DialogResultOK" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Enter." key="DialogResultOK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultOK</sig></member><member name="DialogResultCancel" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Escape." key="DialogResultCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new dialog item." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>You don't need to create the window objects for dialog items. The window objects will be created
automatically when the dialog is created.</p></body><return /><param name="item" gray="false"><body><p>A new dialog item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="DoModal" visibility="public" scope="instance" brief="Creates the dialog window and waits until the dialog is closed." key="DoModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="manager" gray="false"><body><p>The window manager.</p></body></param><declaration language="cs" name="DoModal" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] manager" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)</sig></member><member name="EndDialog" visibility="public" scope="instance" brief="Closes the dialog and sets the dialog result code." key="EndDialog.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="resultCode" gray="false"><body><p>The dialog result code.</p></body></param><declaration language="cs" name="EndDialog" prefix="" suffix="" name-suffix="" return="void" params="int resultCode" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)</sig></member><member name="PretranslateOnKeyPressed" visibility="public" scope="instance" brief="The method must be called by an implementation of custom dialog item class before processing a key." key="PretranslateOnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation processes the following keys:</p><p>1) The focus is passed to the next/previous item when Tab/Shift-Tab is pressed.</p><p>2) The hot keys of buttons and labels are processed.</p><p>3) When Enter is pressed, the control with [c]Dialog.DialogResultOK[/c] identifier is clicked.</p><p>4) When Escape is pressed, the control with [c]Dialog.DialogResultCancel[/c] identifier is clicked.</p></body><return /><param name="scanCode" gray="false"><body><p>The scan code received.</p></body></param><param name="character" gray="false"><body><p>The character entered.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating whether the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating whether the control key is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating whether the alt key is pressed.</p></body></param><declaration language="cs" name="PretranslateOnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="bool" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnItemClick" visibility="public" scope="instance" brief="The method is called when the dialog item has been clicked." key="OnItemClick.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation ends the dialog if the control with [c]Dialog.DialogResultOK[/c] or
[c]Dialog.DialogResultCancel[/c] identifier is clicked and puts the identifier of the clicked object into
the dialog result code.</p></body><return /><param name="item" gray="false"><body><p>The item clicked.</p></body></param><declaration language="cs" name="OnItemClick" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemActivated" visibility="public" scope="instance" brief="The method is called when the dialog item got focus." key="OnItemActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The activated item.</p></body></param><declaration language="cs" name="OnItemActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemChanged" visibility="public" scope="instance" brief="The method is called when the content or the selection of the dialog item is changed." key="OnItemChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The changed item.</p></body></param><declaration language="cs" name="OnItemChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="ResultCode" visibility="public" scope="instance" brief="The result code of the dialog." key="ResultCode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The result code of the dialog can be set by [clink=gehtsoft.xce.conio.win.Dialog.EndDialog.0]Dialog.EndDialog()[/clink] method.</p></body><return /><declaration language="cs" name="ResultCode" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.ResultCode</sig></member><member name="Colors" visibility="public" scope="instance" brief="The color scheme of the dialog." key="Colors.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Colors" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Colors</sig></member><member name="Items" visibility="public" scope="instance" brief="The enumeration of the dialog items." key="Items.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Items" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Items</sig></member><member name="AddItemBefore" visibility="public" scope="instance" brief="Adds a new item before another item." key="AddItemBefore.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item to be added.</p></body></param><param name="next" gray="false"><body><p>The existing item to add the item before it.</p></body></param><declaration language="cs" name="AddItemBefore" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item, [clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] next" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnOK" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultOK button." key="OnOK.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultOK[/c] identifier is clicked.
If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultOK[/c].</p></body><return /><declaration language="cs" name="OnOK" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnOK</sig></member><member name="OnCancel" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultCancel button." key="OnCancel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultCancel[/c] identifier is clicked.</p><p>If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultCancel[/c].</p></body><return /><declaration language="cs" name="OnCancel" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnCancel</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the button specified in its row." key="CenterButtons.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="b1" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers two buttons specified in their row." key="CenterButtons.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers three buttons specified in their row." key="CenterButtons.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><param name="b3" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b3" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the dialog item buttons." key="CenterButtons.4" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="buttons" gray="false"><body><p>An array of the buttons to be centered.</p></body></param><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink][] buttons" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])</sig></member><member name="getClientArea" visibility="public" scope="instance" brief="Gets the size and coordinates of the client area." key="getClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the client area.</p></body></param><param name="col" gray="false"><body><p>The column of the top-left corner of the client area.</p></body></param><param name="height" gray="false"><body><p>The height of the client area in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the client area in rows.</p></body></param><declaration language="cs" name="getClientArea" prefix="virtual" suffix="" name-suffix="" return="void" params="out int row, out int col, out int height, out int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)</sig></member><member name="Title" visibility="public" scope="instance" brief="The title of the window." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowBorderContainer.Title</sig></member><member name="attachClientArea" visibility="protected" scope="instance" brief="Attaches the client area to the window." key="attachClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><declaration language="cs" name="attachClientArea" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.Dialog]Dialog[/clink]</parent></class><class name="FileOpenDialog" sig="T:gehtsoft.xce.conio.win.FileOpenDialog" key="gehtsoft.xce.conio.win.FileOpenDialog" brief="The open file name prompt." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="FileOpenDialog" sort="true" class-name-in-key="true" transform="def"><body><p>The class is the implementation of the [clink=gehtsoft.xce.conio.win.FileDialog]FileDialog[/clink] for open file operations.</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="FileOpenDialog" visibility="public" scope="instance" brief="Constructor" key="FileOpenDialog.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileOpenDialog" class-name="FileOpenDialog" exclude-from-list="false"><return /><param name="directory" gray="false"><body><p>Default directory to show.</p><p>If the value is null and default file is specified, the directory containing the default will be shown.
If the value is null and default file is not specified, the current working directory will be shown.</p></body></param><param name="defaultFile" gray="false"><body><p>The default file name to show on dialog open.</p></body></param><param name="colors" gray="false"><body><p>The color scheme.</p></body></param><param name="mode" gray="false"><body><p>The flags for the dialog.</p></body></param><param name="defaultFile" gray="false"><body><p>The default file name to show on dialog open.</p></body></param><declaration language="cs" name="FileOpenDialog" prefix="" suffix="" name-suffix="" return="" params="string directory, string defaultFile, [clink=gehtsoft.xce.conio.win.FileOpenDialog.OpenMode]FileOpenDialog.OpenMode[/clink] mode, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors" custom="" /><sig>M:gehtsoft.xce.conio.win.FileOpenDialog.#ctor(System.String,System.String,gehtsoft.xce.conio.win.FileOpenDialog.OpenMode,gehtsoft.xce.conio.win.IColorScheme)</sig></member><member name="AddLocation" visibility="public" scope="instance" brief="Adds a location to the location list." key="AddLocation.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="location" gray="false"><body><p>The folder name to add into locations.</p></body></param><declaration language="cs" name="AddLocation" prefix="" suffix="" name-suffix="" return="void" params="string location" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)</sig></member><member name="CheckFileName" visibility="protected" scope="instance" brief="The method validates the file name." key="CheckFileName.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><body><p>If the method returns [c]true[/c] the dialog ends and file name will be returned to the caller.</p><p>If the method returns [c]false[/c] the dialog continues to work.</p></body><return /><param name="name" gray="false"><body><p>The file name chosen by the user.</p></body></param><declaration language="cs" name="CheckFileName" prefix="protected virtual" suffix="" name-suffix="" return="bool" params="string name" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)</sig></member><member name="AddCustomButton" visibility="protected" scope="instance" brief="Adds a custom button in addition to Ok and Cancel." key="AddCustomButton.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="id" gray="false"><body><p>The button identifier (use identifiers 0x2000 and above).</p></body></param><param name="title" gray="false"><body><p>The button title.</p></body></param><declaration language="cs" name="AddCustomButton" prefix="" suffix="" name-suffix="" return="void" params="int id, string title" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)</sig></member><member name="File" visibility="public" scope="instance" brief="The file name chosen by the user." key="File.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><declaration language="cs" name="File" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.FileDialog.File</sig></member><member name="DialogResultOK" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Enter." key="DialogResultOK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultOK</sig></member><member name="DialogResultCancel" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Escape." key="DialogResultCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new dialog item." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>You don't need to create the window objects for dialog items. The window objects will be created
automatically when the dialog is created.</p></body><return /><param name="item" gray="false"><body><p>A new dialog item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="DoModal" visibility="public" scope="instance" brief="Creates the dialog window and waits until the dialog is closed." key="DoModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="manager" gray="false"><body><p>The window manager.</p></body></param><declaration language="cs" name="DoModal" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] manager" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)</sig></member><member name="EndDialog" visibility="public" scope="instance" brief="Closes the dialog and sets the dialog result code." key="EndDialog.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="resultCode" gray="false"><body><p>The dialog result code.</p></body></param><declaration language="cs" name="EndDialog" prefix="" suffix="" name-suffix="" return="void" params="int resultCode" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)</sig></member><member name="PretranslateOnKeyPressed" visibility="public" scope="instance" brief="The method must be called by an implementation of custom dialog item class before processing a key." key="PretranslateOnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation processes the following keys:</p><p>1) The focus is passed to the next/previous item when Tab/Shift-Tab is pressed.</p><p>2) The hot keys of buttons and labels are processed.</p><p>3) When Enter is pressed, the control with [c]Dialog.DialogResultOK[/c] identifier is clicked.</p><p>4) When Escape is pressed, the control with [c]Dialog.DialogResultCancel[/c] identifier is clicked.</p></body><return /><param name="scanCode" gray="false"><body><p>The scan code received.</p></body></param><param name="character" gray="false"><body><p>The character entered.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating whether the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating whether the control key is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating whether the alt key is pressed.</p></body></param><declaration language="cs" name="PretranslateOnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="bool" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnItemClick" visibility="public" scope="instance" brief="The method is called when the dialog item has been clicked." key="OnItemClick.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation ends the dialog if the control with [c]Dialog.DialogResultOK[/c] or
[c]Dialog.DialogResultCancel[/c] identifier is clicked and puts the identifier of the clicked object into
the dialog result code.</p></body><return /><param name="item" gray="false"><body><p>The item clicked.</p></body></param><declaration language="cs" name="OnItemClick" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemActivated" visibility="public" scope="instance" brief="The method is called when the dialog item got focus." key="OnItemActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The activated item.</p></body></param><declaration language="cs" name="OnItemActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemChanged" visibility="public" scope="instance" brief="The method is called when the content or the selection of the dialog item is changed." key="OnItemChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The changed item.</p></body></param><declaration language="cs" name="OnItemChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="ResultCode" visibility="public" scope="instance" brief="The result code of the dialog." key="ResultCode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The result code of the dialog can be set by [clink=gehtsoft.xce.conio.win.Dialog.EndDialog.0]Dialog.EndDialog()[/clink] method.</p></body><return /><declaration language="cs" name="ResultCode" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.ResultCode</sig></member><member name="Colors" visibility="public" scope="instance" brief="The color scheme of the dialog." key="Colors.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Colors" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Colors</sig></member><member name="Items" visibility="public" scope="instance" brief="The enumeration of the dialog items." key="Items.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Items" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Items</sig></member><member name="AddItemBefore" visibility="public" scope="instance" brief="Adds a new item before another item." key="AddItemBefore.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item to be added.</p></body></param><param name="next" gray="false"><body><p>The existing item to add the item before it.</p></body></param><declaration language="cs" name="AddItemBefore" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item, [clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] next" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnOK" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultOK button." key="OnOK.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultOK[/c] identifier is clicked.
If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultOK[/c].</p></body><return /><declaration language="cs" name="OnOK" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnOK</sig></member><member name="OnCancel" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultCancel button." key="OnCancel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultCancel[/c] identifier is clicked.</p><p>If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultCancel[/c].</p></body><return /><declaration language="cs" name="OnCancel" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnCancel</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the button specified in its row." key="CenterButtons.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="b1" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers two buttons specified in their row." key="CenterButtons.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers three buttons specified in their row." key="CenterButtons.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><param name="b3" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b3" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the dialog item buttons." key="CenterButtons.4" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="buttons" gray="false"><body><p>An array of the buttons to be centered.</p></body></param><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink][] buttons" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])</sig></member><member name="getClientArea" visibility="public" scope="instance" brief="Gets the size and coordinates of the client area." key="getClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the client area.</p></body></param><param name="col" gray="false"><body><p>The column of the top-left corner of the client area.</p></body></param><param name="height" gray="false"><body><p>The height of the client area in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the client area in rows.</p></body></param><declaration language="cs" name="getClientArea" prefix="virtual" suffix="" name-suffix="" return="void" params="out int row, out int col, out int height, out int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)</sig></member><member name="Title" visibility="public" scope="instance" brief="The title of the window." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowBorderContainer.Title</sig></member><member name="attachClientArea" visibility="protected" scope="instance" brief="Attaches the client area to the window." key="attachClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><declaration language="cs" name="attachClientArea" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.FileDialog]FileDialog[/clink]</parent></class><class name="FileOpenDialog.OpenMode" sig="T:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" key="gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" brief="" type="enum" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="FileOpenDialog.OpenMode" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="None" visibility="public" scope="class" brief="" key="None.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" class-name="FileOpenDialog.OpenMode" exclude-from-list="false"><return /><declaration language="cs" name="None" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.FileOpenDialog.OpenMode]FileOpenDialog.OpenMode[/clink]" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.None</sig></member><member name="ExistingFilesOnly" visibility="public" scope="class" brief="The flag allows choosing of the existing files only." key="ExistingFilesOnly.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" class-name="FileOpenDialog.OpenMode" exclude-from-list="false"><return /><declaration language="cs" name="ExistingFilesOnly" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.FileOpenDialog.OpenMode]FileOpenDialog.OpenMode[/clink]" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.ExistingFilesOnly</sig></member><member name="NewFilePromprt" visibility="public" scope="class" brief="The flag forces a create prompt in case file chosen does not exist." key="NewFilePromprt.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileOpenDialog.OpenMode" class-name="FileOpenDialog.OpenMode" exclude-from-list="false"><return /><declaration language="cs" name="NewFilePromprt" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.FileOpenDialog.OpenMode]FileOpenDialog.OpenMode[/clink]" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.FileOpenDialog.OpenMode.NewFilePromprt</sig></member></class><class name="FileSaveDialog" sig="T:gehtsoft.xce.conio.win.FileSaveDialog" key="gehtsoft.xce.conio.win.FileSaveDialog" brief="The save/save as file name prompt." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="FileSaveDialog" sort="true" class-name-in-key="true" transform="def"><body><p>The class is the implementation of the [clink=gehtsoft.xce.conio.win.FileDialog]FileDialog[/clink] for save file operations.</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="FileSaveDialog" visibility="public" scope="instance" brief="" key="FileSaveDialog.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileSaveDialog" class-name="FileSaveDialog" exclude-from-list="false"><return /><param name="directory" gray="false"><body><p>Default directory to show.</p><p>If the value is null and default file is specified, the directory containing the default will be shown.
If the value is null and default file is not specified, the current working directory will be shown.</p></body></param><param name="defaultFile" gray="false"><body><p>The default file name to show on dialog open.</p></body></param><param name="colors" gray="false"><body><p>The color scheme.</p></body></param><param name="mode" gray="false"><body><p>The flags for the dialog.</p></body></param><param name="defaultFile" gray="false"><body><p>The default file name to show on dialog open.</p></body></param><declaration language="cs" name="FileSaveDialog" prefix="" suffix="" name-suffix="" return="" params="string directory, string defaultFile, [clink=gehtsoft.xce.conio.win.FileSaveDialog.SaveMode]FileSaveDialog.SaveMode[/clink] mode, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors" custom="" /><sig>M:gehtsoft.xce.conio.win.FileSaveDialog.#ctor(System.String,System.String,gehtsoft.xce.conio.win.FileSaveDialog.SaveMode,gehtsoft.xce.conio.win.IColorScheme)</sig></member><member name="AddLocation" visibility="public" scope="instance" brief="Adds a location to the location list." key="AddLocation.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="location" gray="false"><body><p>The folder name to add into locations.</p></body></param><declaration language="cs" name="AddLocation" prefix="" suffix="" name-suffix="" return="void" params="string location" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.AddLocation(System.String)</sig></member><member name="CheckFileName" visibility="protected" scope="instance" brief="The method validates the file name." key="CheckFileName.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><body><p>If the method returns [c]true[/c] the dialog ends and file name will be returned to the caller.</p><p>If the method returns [c]false[/c] the dialog continues to work.</p></body><return /><param name="name" gray="false"><body><p>The file name chosen by the user.</p></body></param><declaration language="cs" name="CheckFileName" prefix="protected virtual" suffix="" name-suffix="" return="bool" params="string name" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.CheckFileName(System.String)</sig></member><member name="AddCustomButton" visibility="protected" scope="instance" brief="Adds a custom button in addition to Ok and Cancel." key="AddCustomButton.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><param name="id" gray="false"><body><p>The button identifier (use identifiers 0x2000 and above).</p></body></param><param name="title" gray="false"><body><p>The button title.</p></body></param><declaration language="cs" name="AddCustomButton" prefix="" suffix="" name-suffix="" return="void" params="int id, string title" custom="" /><sig>M:gehtsoft.xce.conio.win.FileDialog.AddCustomButton(System.Int32,System.String)</sig></member><member name="File" visibility="public" scope="instance" brief="The file name chosen by the user." key="File.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileDialog" class-name="FileDialog" exclude-from-list="false"><return /><declaration language="cs" name="File" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.FileDialog.File</sig></member><member name="DialogResultOK" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Enter." key="DialogResultOK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultOK</sig></member><member name="DialogResultCancel" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Escape." key="DialogResultCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new dialog item." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>You don't need to create the window objects for dialog items. The window objects will be created
automatically when the dialog is created.</p></body><return /><param name="item" gray="false"><body><p>A new dialog item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="DoModal" visibility="public" scope="instance" brief="Creates the dialog window and waits until the dialog is closed." key="DoModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="manager" gray="false"><body><p>The window manager.</p></body></param><declaration language="cs" name="DoModal" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] manager" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.DoModal(gehtsoft.xce.conio.win.WindowManager)</sig></member><member name="EndDialog" visibility="public" scope="instance" brief="Closes the dialog and sets the dialog result code." key="EndDialog.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="resultCode" gray="false"><body><p>The dialog result code.</p></body></param><declaration language="cs" name="EndDialog" prefix="" suffix="" name-suffix="" return="void" params="int resultCode" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)</sig></member><member name="PretranslateOnKeyPressed" visibility="public" scope="instance" brief="The method must be called by an implementation of custom dialog item class before processing a key." key="PretranslateOnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation processes the following keys:</p><p>1) The focus is passed to the next/previous item when Tab/Shift-Tab is pressed.</p><p>2) The hot keys of buttons and labels are processed.</p><p>3) When Enter is pressed, the control with [c]Dialog.DialogResultOK[/c] identifier is clicked.</p><p>4) When Escape is pressed, the control with [c]Dialog.DialogResultCancel[/c] identifier is clicked.</p></body><return /><param name="scanCode" gray="false"><body><p>The scan code received.</p></body></param><param name="character" gray="false"><body><p>The character entered.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating whether the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating whether the control key is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating whether the alt key is pressed.</p></body></param><declaration language="cs" name="PretranslateOnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="bool" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnItemClick" visibility="public" scope="instance" brief="The method is called when the dialog item has been clicked." key="OnItemClick.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation ends the dialog if the control with [c]Dialog.DialogResultOK[/c] or
[c]Dialog.DialogResultCancel[/c] identifier is clicked and puts the identifier of the clicked object into
the dialog result code.</p></body><return /><param name="item" gray="false"><body><p>The item clicked.</p></body></param><declaration language="cs" name="OnItemClick" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemActivated" visibility="public" scope="instance" brief="The method is called when the dialog item got focus." key="OnItemActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The activated item.</p></body></param><declaration language="cs" name="OnItemActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemChanged" visibility="public" scope="instance" brief="The method is called when the content or the selection of the dialog item is changed." key="OnItemChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The changed item.</p></body></param><declaration language="cs" name="OnItemChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="ResultCode" visibility="public" scope="instance" brief="The result code of the dialog." key="ResultCode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The result code of the dialog can be set by [clink=gehtsoft.xce.conio.win.Dialog.EndDialog.0]Dialog.EndDialog()[/clink] method.</p></body><return /><declaration language="cs" name="ResultCode" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.ResultCode</sig></member><member name="Colors" visibility="public" scope="instance" brief="The color scheme of the dialog." key="Colors.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Colors" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Colors</sig></member><member name="Items" visibility="public" scope="instance" brief="The enumeration of the dialog items." key="Items.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Items" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Items</sig></member><member name="AddItemBefore" visibility="public" scope="instance" brief="Adds a new item before another item." key="AddItemBefore.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item to be added.</p></body></param><param name="next" gray="false"><body><p>The existing item to add the item before it.</p></body></param><declaration language="cs" name="AddItemBefore" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item, [clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] next" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnOK" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultOK button." key="OnOK.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultOK[/c] identifier is clicked.
If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultOK[/c].</p></body><return /><declaration language="cs" name="OnOK" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnOK</sig></member><member name="OnCancel" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultCancel button." key="OnCancel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultCancel[/c] identifier is clicked.</p><p>If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultCancel[/c].</p></body><return /><declaration language="cs" name="OnCancel" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnCancel</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the button specified in its row." key="CenterButtons.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="b1" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers two buttons specified in their row." key="CenterButtons.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers three buttons specified in their row." key="CenterButtons.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><param name="b3" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b3" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the dialog item buttons." key="CenterButtons.4" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="buttons" gray="false"><body><p>An array of the buttons to be centered.</p></body></param><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink][] buttons" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])</sig></member><member name="getClientArea" visibility="public" scope="instance" brief="Gets the size and coordinates of the client area." key="getClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the client area.</p></body></param><param name="col" gray="false"><body><p>The column of the top-left corner of the client area.</p></body></param><param name="height" gray="false"><body><p>The height of the client area in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the client area in rows.</p></body></param><declaration language="cs" name="getClientArea" prefix="virtual" suffix="" name-suffix="" return="void" params="out int row, out int col, out int height, out int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)</sig></member><member name="Title" visibility="public" scope="instance" brief="The title of the window." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowBorderContainer.Title</sig></member><member name="attachClientArea" visibility="protected" scope="instance" brief="Attaches the client area to the window." key="attachClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><declaration language="cs" name="attachClientArea" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.FileDialog]FileDialog[/clink]</parent></class><class name="FileSaveDialog.SaveMode" sig="T:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" key="gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" brief="" type="enum" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="FileSaveDialog.SaveMode" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="None" visibility="public" scope="class" brief="" key="None.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" class-name="FileSaveDialog.SaveMode" exclude-from-list="false"><return /><declaration language="cs" name="None" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.FileSaveDialog.SaveMode]FileSaveDialog.SaveMode[/clink]" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode.None</sig></member><member name="OverwritePrompt" visibility="public" scope="class" brief="The flag forces the overwrite prompt in case the file chosen already exists." key="OverwritePrompt.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.FileSaveDialog.SaveMode" class-name="FileSaveDialog.SaveMode" exclude-from-list="false"><return /><declaration language="cs" name="OverwritePrompt" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.FileSaveDialog.SaveMode]FileSaveDialog.SaveMode[/clink]" params="" custom="" /><sig>F:gehtsoft.xce.conio.win.FileSaveDialog.SaveMode.OverwritePrompt</sig></member></class><class name="IColorScheme" sig="T:gehtsoft.xce.conio.win.IColorScheme" key="gehtsoft.xce.conio.win.IColorScheme" brief="The interface to the provider of the color information." type="interface" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="IColorScheme" sort="true" class-name-in-key="true" transform="def"><body><p>The namespace also has the default implementation of this interface. See [clink=gehtsoft.xce.conio.win.ColorScheme]ColorScheme[/clink]</p><p>Please note that in console application "color" usually means both, background and foreground color. For more information about the colors
please see [clink=gehtsoft.xce.conio.Canvas]Canvas[/clink].</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="MenuItem" visibility="public" scope="instance" brief="The color for the enabled, non-selected menu item." key="MenuItem.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuItem" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuItem</sig></member><member name="MenuItemSelected" visibility="public" scope="instance" brief="The color for the enabled, selected menu item." key="MenuItemSelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuItemSelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuItemSelected</sig></member><member name="MenuDisabledItem" visibility="public" scope="instance" brief="The color for the disabled, non-selected menu item." key="MenuDisabledItem.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuDisabledItem" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItem</sig></member><member name="MenuDisabledItemSelected" visibility="public" scope="instance" brief="The color for the disabled, selected menu item." key="MenuDisabledItemSelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuDisabledItemSelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuDisabledItemSelected</sig></member><member name="MenuHotKey" visibility="public" scope="instance" brief="The color for the hot key character on non-selected menu item." key="MenuHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKey</sig></member><member name="MenuHotKeySelected" visibility="public" scope="instance" brief="The color for the hot key character on selected menu item." key="MenuHotKeySelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuHotKeySelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.MenuHotKeySelected</sig></member><member name="DialogBorder" visibility="public" scope="instance" brief="The color of the dialog border." key="DialogBorder.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogBorder" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogBorder</sig></member><member name="DialogItemLabelColor" visibility="public" scope="instance" brief="The color of the label control." key="DialogItemLabelColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemLabelColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelColor</sig></member><member name="DialogItemLabelHotKey" visibility="public" scope="instance" brief="The color of the hot key character on the label control." key="DialogItemLabelHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemLabelHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemLabelHotKey</sig></member><member name="DialogItemCheckBoxColor" visibility="public" scope="instance" brief="The color of the check box control." key="DialogItemCheckBoxColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColor</sig></member><member name="DialogItemCheckBoxColorFocused" visibility="public" scope="instance" brief="The color of the active (focused) check box control." key="DialogItemCheckBoxColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorFocused</sig></member><member name="DialogItemCheckBoxHotKey" visibility="public" scope="instance" brief="The color of the hot key on check box control." key="DialogItemCheckBoxHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKey</sig></member><member name="DialogItemCheckBoxHotKeyFocused" visibility="public" scope="instance" brief="The color of the hot key on active (focused) check box control." key="DialogItemCheckBoxHotKeyFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxHotKeyFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxHotKeyFocused</sig></member><member name="DialogItemCheckBoxColorDisabled" visibility="public" scope="instance" brief="The color of the disabled check box control." key="DialogItemCheckBoxColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemCheckBoxColorDisabled</sig></member><member name="DialogItemButtonColor" visibility="public" scope="instance" brief="" key="DialogItemButtonColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColor</sig></member><member name="DialogItemButtonColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemButtonColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorDisabled</sig></member><member name="DialogItemButtonColorFocused" visibility="public" scope="instance" brief="" key="DialogItemButtonColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonColorFocused</sig></member><member name="DialogItemButtonHotKey" visibility="public" scope="instance" brief="" key="DialogItemButtonHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKey</sig></member><member name="DialogItemButtonHotKeyFocused" visibility="public" scope="instance" brief="" key="DialogItemButtonHotKeyFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonHotKeyFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemButtonHotKeyFocused</sig></member><member name="DialogItemEditColor" visibility="public" scope="instance" brief="" key="DialogItemEditColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColor</sig></member><member name="DialogItemEditColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemEditColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorDisabled</sig></member><member name="DialogItemEditColorFocused" visibility="public" scope="instance" brief="" key="DialogItemEditColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditColorFocused</sig></member><member name="DialogItemEditSelection" visibility="public" scope="instance" brief="" key="DialogItemEditSelection.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditSelection" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelection</sig></member><member name="DialogItemEditSelectionFocused" visibility="public" scope="instance" brief="" key="DialogItemEditSelectionFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditSelectionFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemEditSelectionFocused</sig></member><member name="DialogItemListBoxColor" visibility="public" scope="instance" brief="" key="DialogItemListBoxColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColor</sig></member><member name="DialogItemListBoxColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemListBoxColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorDisabled</sig></member><member name="DialogItemListBoxColorFocused" visibility="public" scope="instance" brief="" key="DialogItemListBoxColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxColorFocused</sig></member><member name="DialogItemListBoxSelection" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelection.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelection" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelection</sig></member><member name="DialogItemListBoxSelectionFocused" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocused</sig></member><member name="DialogItemListBoxSelectionHighlighted" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionHighlighted.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionHighlighted" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted</sig></member><member name="DialogItemListBoxSelectionFocusedHighlighted" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionFocusedHighlighted.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionFocusedHighlighted" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted</sig></member></class><class name="KeyboardLayout" sig="T:gehtsoft.xce.conio.win.KeyboardLayout" key="gehtsoft.xce.conio.win.KeyboardLayout" brief="The information about the keyboard input layout" type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="KeyboardLayout" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="LayoutCode" visibility="public" scope="instance" brief="The language code (LCID)" key="LayoutCode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.KeyboardLayout" class-name="KeyboardLayout" exclude-from-list="false"><return /><declaration language="cs" name="LayoutCode" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.KeyboardLayout.LayoutCode</sig></member><member name="LayoutName" visibility="public" scope="instance" brief="The name of the layout." key="LayoutName.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.KeyboardLayout" class-name="KeyboardLayout" exclude-from-list="false"><return /><declaration language="cs" name="LayoutName" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.KeyboardLayout.LayoutName</sig></member></class><class name="MenuItem" sig="T:gehtsoft.xce.conio.win.MenuItem" key="gehtsoft.xce.conio.win.MenuItem" brief="The base class for the menu item." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="MenuItem" sort="true" class-name-in-key="true" transform="def"><body><p>The class is abstract. The following implementation of the
menu items are provided:</p><list type="dot"><list-item><body><p>[clink=gehtsoft.xce.conio.win.CommandMenuItem]CommandMenuItem[/clink]</p></body></list-item><list-item><body><p>[clink=gehtsoft.xce.conio.win.SeparatorMenuItem]SeparatorMenuItem[/clink]</p></body></list-item><list-item><body><p>[clink=gehtsoft.xce.conio.win.PopupMenuItem]PopupMenuItem[/clink]</p></body></list-item></list><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="MenuItem" visibility="public" scope="instance" brief="Constructor" key="MenuItem.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MenuItem" class-name="MenuItem" exclude-from-list="false"><return /><declaration language="cs" name="MenuItem" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.MenuItem.#ctor</sig></member></class><class name="MessageBox" sig="T:gehtsoft.xce.conio.win.MessageBox" key="gehtsoft.xce.conio.win.MessageBox" brief="The modal message box." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="MessageBox" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="Show" visibility="public" scope="class" brief="Shows the message box with the custom button set." key="Show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBox" class-name="MessageBox" exclude-from-list="false"><return><body><p>The method returns the identifier of the button pressed.</p></body></return><param name="mgr" gray="false"><body><p>Window manager.</p></body></param><param name="colors" gray="false"><body><p>Color scheme.</p></body></param><param name="message" gray="false"><body><p>The message to be shown.</p></body></param><param name="title" gray="false"><body><p>The message box title.</p></body></param><param name="buttons" gray="false"><body><p>The array of the buttons descriptors. It is not recommended to create more than four buttons.</p></body></param><declaration language="cs" name="Show" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.MessageBoxButton]MessageBoxButton[/clink]" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] mgr, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors, string message, string title, [clink=gehtsoft.xce.conio.win.MessageBoxButtonInfo]MessageBoxButtonInfo[/clink][] buttons" custom="" /><sig>M:gehtsoft.xce.conio.win.MessageBox.Show(gehtsoft.xce.conio.win.WindowManager,gehtsoft.xce.conio.win.IColorScheme,System.String,System.String,gehtsoft.xce.conio.win.MessageBoxButtonInfo[])</sig></member><member name="Show" visibility="public" scope="class" brief="Shows the message box with the pre-defined button set." key="Show.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBox" class-name="MessageBox" exclude-from-list="false"><return><body><p>The method returns the identifier of the button pressed.</p></body></return><param name="mgr" gray="false"><body><p>Window manager.</p></body></param><param name="colors" gray="false"><body><p>Color scheme.</p></body></param><param name="message" gray="false"><body><p>The message to be shown.</p></body></param><param name="title" gray="false"><body><p>The message box title.</p></body></param><param name="buttons" gray="false"><body><p>The buttons.</p></body></param><declaration language="cs" name="Show" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.MessageBoxButton]MessageBoxButton[/clink]" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] mgr, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors, string message, string title, [clink=gehtsoft.xce.conio.win.MessageBoxButtonSet]MessageBoxButtonSet[/clink] buttonSet" custom="" /><sig>M:gehtsoft.xce.conio.win.MessageBox.Show(gehtsoft.xce.conio.win.WindowManager,gehtsoft.xce.conio.win.IColorScheme,System.String,System.String,gehtsoft.xce.conio.win.MessageBoxButtonSet)</sig></member></class><class name="MessageBoxButton" sig="T:gehtsoft.xce.conio.win.MessageBoxButton" key="gehtsoft.xce.conio.win.MessageBoxButton" brief="The standard identifiers of the message box buttons." type="enum" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="MessageBoxButton" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="Ok" visibility="public" scope="class" brief="" key="Ok.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Ok</sig></member><member name="Cancel" visibility="public" scope="class" brief="" key="Cancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Cancel</sig></member><member name="Yes" visibility="public" scope="class" brief="" key="Yes.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Yes</sig></member><member name="No" visibility="public" scope="class" brief="" key="No.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.No</sig></member><member name="Abort" visibility="public" scope="class" brief="" key="Abort.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Abort</sig></member><member name="Retry" visibility="public" scope="class" brief="" key="Retry.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Retry</sig></member><member name="Ignore" visibility="public" scope="class" brief="" key="Ignore.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Ignore</sig></member><member name="Option1" visibility="public" scope="class" brief="" key="Option1.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Option1</sig></member><member name="Option2" visibility="public" scope="class" brief="" key="Option2.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Option2</sig></member><member name="Option3" visibility="public" scope="class" brief="" key="Option3.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Option3</sig></member><member name="Option4" visibility="public" scope="class" brief="" key="Option4.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Option4</sig></member><member name="Unknown" visibility="public" scope="class" brief="" key="Unknown.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButton" class-name="MessageBoxButton" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButton.Unknown</sig></member></class><class name="MessageBoxButtonInfo" sig="T:gehtsoft.xce.conio.win.MessageBoxButtonInfo" key="gehtsoft.xce.conio.win.MessageBoxButtonInfo" brief="The message button descriptor." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="MessageBoxButtonInfo" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="MessageBoxButtonInfo" visibility="public" scope="instance" brief="Constructor." key="MessageBoxButtonInfo.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButtonInfo" class-name="MessageBoxButtonInfo" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The button title.</p></body></param><param name="ID" gray="false"><body><p>The button identifier.</p></body></param><declaration language="cs" name="MessageBoxButtonInfo" prefix="" suffix="" name-suffix="" return="" params="string title, [clink=gehtsoft.xce.conio.win.MessageBoxButton]MessageBoxButton[/clink] ID" custom="" /><sig>M:gehtsoft.xce.conio.win.MessageBoxButtonInfo.#ctor(System.String,gehtsoft.xce.conio.win.MessageBoxButton)</sig></member></class><class name="MessageBoxButtonSet" sig="T:gehtsoft.xce.conio.win.MessageBoxButtonSet" key="gehtsoft.xce.conio.win.MessageBoxButtonSet" brief="The list of the default sets of the message box buttons." type="enum" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="MessageBoxButtonSet" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="Ok" visibility="public" scope="class" brief="" key="Ok.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButtonSet" class-name="MessageBoxButtonSet" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButtonSet.Ok</sig></member><member name="OkCancel" visibility="public" scope="class" brief="" key="OkCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButtonSet" class-name="MessageBoxButtonSet" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButtonSet.OkCancel</sig></member><member name="YesNo" visibility="public" scope="class" brief="" key="YesNo.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButtonSet" class-name="MessageBoxButtonSet" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesNo</sig></member><member name="YesNoCancel" visibility="public" scope="class" brief="" key="YesNoCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButtonSet" class-name="MessageBoxButtonSet" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButtonSet.YesNoCancel</sig></member><member name="AbortRetryIgnore" visibility="public" scope="class" brief="" key="AbortRetryIgnore.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.MessageBoxButtonSet" class-name="MessageBoxButtonSet" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.MessageBoxButtonSet.AbortRetryIgnore</sig></member></class><class name="ModalListBox" sig="T:gehtsoft.xce.conio.win.ModalListBox" key="gehtsoft.xce.conio.win.ModalListBox" brief="The list box implemented as a modal window." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="ModalListBox" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="AddItem" visibility="public" scope="instance" brief="Adds a new item as a string." key="AddItem.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The title of the item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="string item" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.AddItem(System.String)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new item as a string and user data." key="AddItem.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The title of the item.</p></body></param><param name="userData" gray="false"><body><p>The user data associated with the item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="string item, object userData" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.AddItem(System.String,System.Object)</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new item as an object." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The menu item to be added.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="int" params="[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.AddItem(gehtsoft.xce.conio.win.DialogItemListBoxString)</sig></member><member name="RemoveItem" visibility="public" scope="instance" brief="Removes the specified item by the index." key="RemoveItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The zero-based index of the item.</p></body></param><declaration language="cs" name="RemoveItem" prefix="" suffix="" name-suffix="" return="void" params="int index" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.RemoveItem(System.Int32)</sig></member><member name="RemoveAllItems" visibility="public" scope="instance" brief="Removes all items from the list." key="RemoveAllItems.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><declaration language="cs" name="RemoveAllItems" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.RemoveAllItems</sig></member><member name="EnsureVisible" visibility="public" scope="instance" brief="Makes the item specified visible." key="EnsureVisible.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The zero-based index of the item.</p></body></param><declaration language="cs" name="EnsureVisible" prefix="" suffix="" name-suffix="" return="void" params="int index" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.EnsureVisible(System.Int32)</sig></member><member name="ModalListBox" visibility="public" scope="instance" brief="Constructor." key="ModalListBox.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the window.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the window.</p></body></param><param name="height" gray="false"><body><p>The height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the window in columns.</p></body></param><param name="colors" gray="false"><body><p>The color scheme to be used.</p></body></param><declaration language="cs" name="ModalListBox" prefix="" suffix="" name-suffix="" return="" params="int row, int column, int height, int width, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,gehtsoft.xce.conio.win.IColorScheme)</sig></member><member name="DoModal" visibility="public" scope="instance" brief="Shows the modal list box." key="DoModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><body><p>The method is executed while the window is open.</p><p>The default implementation closes the window when</p><list type="dot"><list-item><body><p>TAB, RETURN or ESCAPE keys are pressed.</p></body></list-item><list-item><body><p>The user clicks on the selected item.</p></body></list-item><list-item><body><p>The user clicks outside the window border.</p></body></list-item></list></body><return /><param name="mgr" gray="false" /><declaration language="cs" name="DoModal" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] mgr" custom="" /><sig>M:gehtsoft.xce.conio.win.ModalListBox.DoModal(gehtsoft.xce.conio.win.WindowManager)</sig></member><member name="Count" visibility="public" scope="instance" brief="Returns the number of the items in the list box." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.ModalListBox.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the item by its index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><param name="index" gray="false" /><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.DialogItemListBoxString]DialogItemListBoxString[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.conio.win.ModalListBox.Item(System.Int32)</sig></member><member name="CurSel" visibility="public" scope="instance" brief="Gets or sets the index of the currently selected item." key="CurSel.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.ModalListBox" class-name="ModalListBox" exclude-from-list="false"><return /><declaration language="cs" name="CurSel" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.ModalListBox.CurSel</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.Window]Window[/clink]</parent></class><class name="PopupMenu" sig="T:gehtsoft.xce.conio.win.PopupMenu" key="gehtsoft.xce.conio.win.PopupMenu" brief="The window to display a pop-up menu." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="PopupMenu" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="PopupCommandNone" visibility="public" scope="class" brief="The predefined command identifier which is used when no command has been selected." key="PopupCommandNone.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenu" class-name="PopupMenu" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.PopupMenu.PopupCommandNone</sig></member><member name="PopupCommandEscape" visibility="public" scope="class" brief="The predefined command identifier which is used when the user cancels the menu." key="PopupCommandEscape.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenu" class-name="PopupMenu" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.PopupMenu.PopupCommandEscape</sig></member><member name="PopupMenu" visibility="public" scope="instance" brief="Constructor." key="PopupMenu.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenu" class-name="PopupMenu" exclude-from-list="false"><body><p>The constructor do not shows the menu. Use [clink=gehtsoft.xce.conio.win.WindowManager.showPopupMenu.0]WindowManager.showPopupMenu()[/clink]
menu to show the menu and let the user to choose the command.</p></body><return /><param name="menu" gray="false"><body><p>The popup menu commands to be displayed.</p></body></param><param name="colors" gray="false"><body><p>The color scheme to be used.</p></body></param><param name="vertical" gray="false"><body><p>The alignment for the top-level menu.</p><p>If the flag is [c]true[/c] the top-level menu commands will be displayed vertically (from left to right)
If the flag is [c]false[/c] the top-level menu commands will be displayed horizontally (from top to bottom).</p><p>The flag affects top-level menu only. All sub-menus will be displayed horizontally.</p></body></param><declaration language="cs" name="PopupMenu" prefix="" suffix="" name-suffix="" return="" params="[clink=gehtsoft.xce.conio.win.PopupMenuItem]PopupMenuItem[/clink] menu, [clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink] colors, bool vertical" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenu.#ctor(gehtsoft.xce.conio.win.PopupMenuItem,gehtsoft.xce.conio.win.IColorScheme,System.Boolean)</sig></member><member name="CommandChosen" visibility="public" scope="instance" brief="Returns the identifier of the command chosen by the user." key="CommandChosen.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenu" class-name="PopupMenu" exclude-from-list="false"><return /><declaration language="cs" name="CommandChosen" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.PopupMenu.CommandChosen</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.Window]Window[/clink]</parent></class><class name="PopupMenuItem" sig="T:gehtsoft.xce.conio.win.PopupMenuItem" key="gehtsoft.xce.conio.win.PopupMenuItem" brief="The menu item which opens another menu." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="PopupMenuItem" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="PopupMenuItem" visibility="public" scope="instance" brief="Constructor." key="PopupMenuItem.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The name of the sub-menu.</p></body></param><declaration language="cs" name="PopupMenuItem" prefix="" suffix="" name-suffix="" return="" params="string title" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenuItem.#ctor(System.String)</sig></member><member name="addItem" visibility="public" scope="instance" brief="Adds a new menu item to the menu." key="addItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>A menu item to be added.</p></body></param><declaration language="cs" name="addItem" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.MenuItem]MenuItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenuItem.addItem(gehtsoft.xce.conio.win.MenuItem)</sig></member><member name="createCommand" visibility="public" scope="instance" brief="Creates a new command and adds it to the end of the menu." key="createCommand.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The name of the command.</p></body></param><param name="command" gray="false"><body><p>The identifier of the command.</p></body></param><declaration language="cs" name="createCommand" prefix="" suffix="" name-suffix="" return="void" params="string title, int command" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenuItem.createCommand(System.String,System.Int32)</sig></member><member name="createCommand" visibility="public" scope="instance" brief="Creates a new command with hint and adds it to the end of the menu." key="createCommand.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The name of the command.</p></body></param><param name="rightside" gray="false"><body><p>The hint (for example a keyboard shortcut) to be shown on right size of the command bar.</p></body></param><param name="command" gray="false"><body><p>the identifier of the command.</p></body></param><declaration language="cs" name="createCommand" prefix="" suffix="" name-suffix="" return="void" params="string title, string rightside, int command" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenuItem.createCommand(System.String,System.String,System.Int32)</sig></member><member name="createSeparator" visibility="public" scope="instance" brief="Create a separator and adds it to the end of the sub-menu." key="createSeparator.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><declaration language="cs" name="createSeparator" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenuItem.createSeparator</sig></member><member name="createPopup" visibility="public" scope="instance" brief="Creates a submenu and adds it to the end of the menu." key="createPopup.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The name of the submenu.</p></body></param><declaration language="cs" name="createPopup" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.PopupMenuItem]PopupMenuItem[/clink]" params="string title" custom="" /><sig>M:gehtsoft.xce.conio.win.PopupMenuItem.createPopup(System.String)</sig></member><member name="Count" visibility="public" scope="instance" brief="Returns the number of the menu items." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.PopupMenuItem.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Returns the menu item by its index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.PopupMenuItem" class-name="PopupMenuItem" exclude-from-list="false"><return /><param name="index" gray="false" /><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.MenuItem]MenuItem[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.conio.win.PopupMenuItem.Item(System.Int32)</sig></member><parent>[clink=gehtsoft.xce.conio.win.MenuItem]MenuItem[/clink]</parent><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.MenuItem]MenuItem[/clink]&gt;</parent></class><class name="SeparatorMenuItem" sig="T:gehtsoft.xce.conio.win.SeparatorMenuItem" key="gehtsoft.xce.conio.win.SeparatorMenuItem" brief="The separator menu item" type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="SeparatorMenuItem" sort="true" class-name-in-key="true" transform="def"><body><p>The separator menu item is just a line separating menu items.</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="SeparatorMenuItem" visibility="public" scope="instance" brief="Constructor." key="SeparatorMenuItem.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.SeparatorMenuItem" class-name="SeparatorMenuItem" exclude-from-list="false"><return /><declaration language="cs" name="SeparatorMenuItem" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.SeparatorMenuItem.#ctor</sig></member><parent>[clink=gehtsoft.xce.conio.win.MenuItem]MenuItem[/clink]</parent></class><class name="Window" sig="T:gehtsoft.xce.conio.win.Window" key="gehtsoft.xce.conio.win.Window" brief="The base of the console window." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="Window" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="Window" visibility="public" scope="instance" brief="Constructor." key="Window.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The constructor does [b]not[/b] create the window as a user interface object.</p><p>Use [clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink] to create or
close the windows.</p></body><return /><declaration language="cs" name="Window" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.#ctor</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>System.IDisposable</parent></class><class name="WindowBorderContainer" sig="T:gehtsoft.xce.conio.win.WindowBorderContainer" key="gehtsoft.xce.conio.win.WindowBorderContainer" brief="The window with border which can be moved and sized by the mouse" type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="WindowBorderContainer" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="WindowBorderContainer" visibility="public" scope="instance" brief="Constructor." key="WindowBorderContainer.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="title" gray="false"><body><p>The window title.</p></body></param><param name="border" gray="false"><body><p>The type of the window border.</p></body></param><param name="borderColor" gray="false"><body><p>The color of the window border.</p></body></param><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><param name="moveable" gray="false"><body><p>The flag indicating that the window must be moveable.</p></body></param><param name="sizeable" gray="false"><body><p>The flag indicating that the window must be sizeable.</p></body></param><declaration language="cs" name="WindowBorderContainer" prefix="" suffix="" name-suffix="" return="" params="string title, [clink=gehtsoft.xce.conio.BoxBorder]gehtsoft.xce.conio.BoxBorder[/clink] border, short borderColor, [clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea, bool moveable, bool sizeable" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.#ctor(System.String,gehtsoft.xce.conio.BoxBorder,System.Int16,gehtsoft.xce.conio.win.Window,System.Boolean,System.Boolean)</sig></member><member name="getClientArea" visibility="public" scope="instance" brief="Gets the size and coordinates of the client area." key="getClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the client area.</p></body></param><param name="col" gray="false"><body><p>The column of the top-left corner of the client area.</p></body></param><param name="height" gray="false"><body><p>The height of the client area in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the client area in rows.</p></body></param><declaration language="cs" name="getClientArea" prefix="virtual" suffix="" name-suffix="" return="void" params="out int row, out int col, out int height, out int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)</sig></member><member name="Title" visibility="public" scope="instance" brief="The title of the window." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowBorderContainer.Title</sig></member><member name="WindowBorderContainer" visibility="protected" scope="instance" brief="Constructor without the client area." key="WindowBorderContainer.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><body><p>The client area must be attached later, when the window is being created using
[clink=gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea.0]attachClientArea()[/clink] method.</p></body><return /><param name="title" gray="false"><body><p>The window title.</p></body></param><param name="border" gray="false"><body><p>The type of the window border.</p></body></param><param name="borderColor" gray="false"><body><p>The color of the window border.</p></body></param><param name="moveable" gray="false"><body><p>The flag indicating that the window must be moveable.</p></body></param><param name="sizeable" gray="false"><body><p>The flag indicating that the window must be sizeable.</p></body></param><declaration language="cs" name="WindowBorderContainer" prefix="" suffix="" name-suffix="" return="" params="string title, [clink=gehtsoft.xce.conio.BoxBorder]gehtsoft.xce.conio.BoxBorder[/clink] border, short borderColor, bool moveable, bool sizeable" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.#ctor(System.String,gehtsoft.xce.conio.BoxBorder,System.Int16,System.Boolean,System.Boolean)</sig></member><member name="attachClientArea" visibility="protected" scope="instance" brief="Attaches the client area to the window." key="attachClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><declaration language="cs" name="attachClientArea" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.Window]Window[/clink]</parent></class><class name="WindowManager" sig="T:gehtsoft.xce.conio.win.WindowManager" key="gehtsoft.xce.conio.win.WindowManager" brief="The console windows manager." type="class" prefix="" in-group="gehtsoft.xce.conio.win" decl-name="WindowManager" sort="true" class-name-in-key="true" transform="def"><body><p>The window manager object processed the console input and output and routes the messages among all CUA windows in the application.</p><p>It is recommended to have only one manager object per the whole console application.</p><p>The type defined in the [c]gehtsoft.xce.conio.win.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.conio.win]gehtsoft.xce.conio.win[/clink].</p></body><member name="WindowManager" visibility="public" scope="instance" brief="Constructor." key="WindowManager.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="save" gray="false"><body><p>The flag indicating that the content of the console window must be saved in order
to be restored when the window manager object is disposed.</p></body></param><declaration language="cs" name="WindowManager" prefix="" suffix="" name-suffix="" return="" params="bool save" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.#ctor(System.Boolean)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Constructor for the console window of the specified window size." key="WindowManager.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>The constructing of the object will change the size of the current console window. The size of the window
will be restored when the object is disposed. Please note that the size will be restored regardless to the value of the
[c]save[/c] flag. This flag manages only saving/restoring of the window content.</p></body><return /><param name="save" gray="false"><body><p>The flag indicating that the content of the console window must be saved in order
to be restored when the window manager object is disposed.</p></body></param><param name="rows" gray="false"><body><p>The size of the console window in rows.</p></body></param><param name="columns" gray="false"><body><p>The size of the console window in columns.</p></body></param><declaration language="cs" name="WindowManager" prefix="" suffix="" name-suffix="" return="" params="bool save, int rows, int columns" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.#ctor(System.Boolean,System.Int32,System.Int32)</sig></member><member name="create" visibility="public" scope="instance" brief="Creates a regular window." key="create.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="window" gray="false"><body><p>The window object.</p></body></param><param name="parent" gray="false"><body><p>The parent window. If the parent window is specified, the window will be created inside the parent window.
If the parent window is [c]null[/c], the window will be created right on the desktop.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the window.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the window.</p></body></param><param name="height" gray="false"><body><p>The height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the window in columns.</p></body></param><declaration language="cs" name="create" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window, [clink=gehtsoft.xce.conio.win.Window]Window[/clink] parent, int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.create(gehtsoft.xce.conio.win.Window,gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="doModal" visibility="public" scope="instance" brief="Creates a modal window, shows it and then pumps the message while the window is not closed." key="doModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="window" gray="false"><body><p>The window object.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the window.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the window.</p></body></param><param name="height" gray="false"><body><p>The height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the window in columns.</p></body></param><declaration language="cs" name="doModal" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window, int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.doModal(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="showPopupMenu" visibility="public" scope="instance" brief="Shows a pop-up menu object and pumps the messages while the menu is not closed." key="showPopupMenu.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="menu" gray="false"><body><p>The menu object to show.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the menu.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the menu.</p></body></param><declaration language="cs" name="showPopupMenu" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.PopupMenu]PopupMenu[/clink] menu, int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.showPopupMenu(gehtsoft.xce.conio.win.PopupMenu,System.Int32,System.Int32)</sig></member><member name="createModal" visibility="public" scope="instance" brief="Create the modal window." key="createModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>When the model window is created, the focus can be passed only to the most recently created modal window or its children windows.</p></body><return /><param name="window" gray="false"><body><p>The window to create.</p></body></param><param name="row" gray="false"><body><p>The row of the top-left corner of the window.</p></body></param><param name="column" gray="false"><body><p>The column of the top-left corner of the window.</p></body></param><param name="height" gray="false"><body><p>The height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the window in columns.</p></body></param><declaration language="cs" name="createModal" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window, int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.createModal(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="close" visibility="public" scope="instance" brief="Close the window." key="close.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="window" gray="false"><body><p>The window to be closed.</p></body></param><declaration language="cs" name="close" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.close(gehtsoft.xce.conio.win.Window)</sig></member><member name="setFocus" visibility="public" scope="instance" brief="Set focus to the window." key="setFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>The window in focus will receive the user keyboard input.</p></body><return /><param name="window" gray="false"><body><p>The window to set focus.</p></body></param><declaration language="cs" name="setFocus" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.setFocus(gehtsoft.xce.conio.win.Window)</sig></member><member name="getFocus" visibility="public" scope="instance" brief="Get the window which is currently in focus." key="getFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><declaration language="cs" name="getFocus" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.getFocus</sig></member><member name="captureMouse" visibility="public" scope="instance" brief="Capture the mouse." key="captureMouse.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>When the mouse is captured, the capturing window will receive all mouse events, regardless
the position where the mouse appears. By default the window receives only the mouse events
which appears over the window area.</p><p>If the mouse is already captured, the capture won't be set.</p></body><return /><param name="window" gray="false"><body><p>The window to captures.</p></body></param><declaration language="cs" name="captureMouse" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.captureMouse(gehtsoft.xce.conio.win.Window)</sig></member><member name="releaseMouse" visibility="public" scope="instance" brief="Releases the mouse captures." key="releaseMouse.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="window" gray="false" /><declaration language="cs" name="releaseMouse" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.releaseMouse(gehtsoft.xce.conio.win.Window)</sig></member><member name="windowFromPos" visibility="public" scope="instance" brief="Gets the topmost window at the specified screen position." key="windowFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>The method returns the window at the specified position or [c]null[/c] if there is no window at
the specified position.</p></body><return /><param name="row" gray="false"><body><p>The row (screen position).</p></body></param><param name="column" gray="false"><body><p>The column (screen position).</p></body></param><declaration language="cs" name="windowFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.windowFromPos(System.Int32,System.Int32)</sig></member><member name="windowFromPos" visibility="public" scope="instance" brief="Gets the topmost visible window at the specified screen position." key="windowFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>The method returns the window at the specified position or [c]null[/c] if there is no window at
the specified position.</p></body><return /><param name="row" gray="false"><body><p>The row (screen position).</p></body></param><param name="column" gray="false"><body><p>The column (screen position).</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating that the only visible windows must be searched.</p></body></param><declaration language="cs" name="windowFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int row, int column, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.windowFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="bringToFront" visibility="public" scope="instance" brief="Brings the specified window to the front." key="bringToFront.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="window" gray="false"><body><p>The window to put in front.</p></body></param><declaration language="cs" name="bringToFront" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] window" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.bringToFront(gehtsoft.xce.conio.win.Window)</sig></member><member name="pumpMessage" visibility="public" scope="instance" brief="Pumps the messages." key="pumpMessage.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>The function is an analogues of the windows application message loop. At every call
of this method, the following activities are performed:</p><p>1) The manager checks whether any of the windows has changed the position or was invalidated. In this case the
manager updates all invalidated windows and then composes the new screen content and outputs it.</p><p>2) The manager waits for the input event and the routes the messages about the input events to the proper windows.</p></body><return /><param name="timeout" gray="false"><body><p>The timeout to wait the message expressed in milliseconds.</p></body></param><declaration language="cs" name="pumpMessage" prefix="" suffix="" name-suffix="" return="void" params="int timeout" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.pumpMessage(System.Int32)</sig></member><member name="setCaretPos" visibility="public" scope="instance" brief="Sets the caret position." key="setCaretPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="caretWindow" gray="false"><body><p>The window containing the caret.</p></body></param><param name="row" gray="false"><body><p>The row of the caret against the top-left corner of the window.</p></body></param><param name="column" gray="false"><body><p>The column of the caret against the top-left corner of the window.</p></body></param><declaration language="cs" name="setCaretPos" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] caretWindow, int row, int column" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.setCaretPos(gehtsoft.xce.conio.win.Window,System.Int32,System.Int32)</sig></member><member name="showCaret" visibility="public" scope="instance" brief="Shows or hides the caret." key="showCaret.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="show" gray="false"><body><p>Specify [c]true[/c] to show the caret and [c]false[/c] to hide the caret.</p></body></param><declaration language="cs" name="showCaret" prefix="" suffix="" name-suffix="" return="void" params="bool show" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.showCaret(System.Boolean)</sig></member><member name="setCaretType" visibility="public" scope="instance" brief="Sets the type of the caret and show or hide it." key="setCaretType.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><param name="caretSize" gray="false"><body><p>The height of the caret in percents of the full character height.</p></body></param><param name="show" gray="false"><body><p>Specify [c]true[/c] to show the caret and [c]false[/c] to hide the caret.</p></body></param><declaration language="cs" name="setCaretType" prefix="" suffix="" name-suffix="" return="void" params="int caretSize, bool show" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowManager.setCaretType(System.Int32,System.Boolean)</sig></member><member name="FastDrawMode" visibility="public" scope="instance" brief="The flag of the drawing mode." key="FastDrawMode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><body><p>The flag is used when the composed console image is drawn into the console window.</p><p>The fast drawing re-draws the screen completely. The slow mode redraws only the rows which are changed.</p></body><return /><declaration language="cs" name="FastDrawMode" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowManager.FastDrawMode</sig></member><member name="ScreenHeight" visibility="public" scope="instance" brief="Height of the screen in rows." key="ScreenHeight.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><declaration language="cs" name="ScreenHeight" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowManager.ScreenHeight</sig></member><member name="ScreenWidth" visibility="public" scope="instance" brief="Width of the screen in columns." key="ScreenWidth.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><declaration language="cs" name="ScreenWidth" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowManager.ScreenWidth</sig></member><member name="KeyboardLayout" visibility="public" scope="instance" brief="Gets the current keyboard layout." key="KeyboardLayout.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowManager" class-name="WindowManager" exclude-from-list="false"><return /><declaration language="cs" name="KeyboardLayout" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.KeyboardLayout]KeyboardLayout[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowManager.KeyboardLayout</sig></member><parent>System.IDisposable</parent><parent>[clink=gehtsoft.xce.conio.ConsoleInputListener]gehtsoft.xce.conio.ConsoleInputListener[/clink]</parent></class><class name="ColorerFactory" sig="T:gehtsoft.xce.colorer.ColorerFactory" key="gehtsoft.xce.colorer.ColorerFactory" brief="The colorer factory." type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="ColorerFactory" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="ColorerFactory" visibility="public" scope="instance" brief="Constructor." key="ColorerFactory.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ColorerFactory" class-name="ColorerFactory" exclude-from-list="false"><return /><declaration language="cs" name="ColorerFactory" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.colorer.ColorerFactory.#ctor</sig></member><member name="Init" visibility="public" scope="instance" brief="Initialize the colorer factory." key="Init.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ColorerFactory" class-name="ColorerFactory" exclude-from-list="false"><return /><param name="colorerCataloguePath" gray="false"><body><p>The path and file name of the catalog.xml configuration file.</p></body></param><param name="colorerHRDClass" gray="false"><body><p>The class name of the color sets to be used.</p></body></param><param name="colorerHRDName" gray="false"><body><p>The color scheme in the class to be used.</p></body></param><param name="backParse" gray="false"><body><p>The number of lines to back parse.</p></body></param><declaration language="cs" name="Init" prefix="" suffix="" name-suffix="" return="void" params="string colorerCataloguePath, string colorerHRDClass, string colorerHRDName, int backParse" custom="" /><sig>M:gehtsoft.xce.colorer.ColorerFactory.Init(System.String,System.String,System.String,System.Int32)</sig></member><member name="CreateHighlighter" visibility="public" scope="instance" brief="Create the syntax highlighter for the text source." key="CreateHighlighter.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ColorerFactory" class-name="ColorerFactory" exclude-from-list="false"><body><p>The returned object must be disposed after the usage.</p></body><return /><param name="lineSource" gray="false"><body><p>The text source to be parsed.</p></body></param><declaration language="cs" name="CreateHighlighter" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.colorer.SyntaxHighlighter]SyntaxHighlighter[/clink]" params="[clink=gehtsoft.xce.colorer.ILineSource]ILineSource[/clink] lineSource" custom="" /><sig>M:gehtsoft.xce.colorer.ColorerFactory.CreateHighlighter(gehtsoft.xce.colorer.ILineSource)</sig></member><member name="FindSyntaxRegion" visibility="public" scope="instance" brief="Finds the syntax region definition by the name." key="FindSyntaxRegion.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ColorerFactory" class-name="ColorerFactory" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the syntax region.</p><p>The name must be fully qualified, i.e. must include both, the scheme and the region name, for example: [c]"def:Comment[/c], where
[c]def[/c] is the scheme name and the [c]Comment[/c] is the region name.</p></body></param><declaration language="cs" name="FindSyntaxRegion" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.colorer.SyntaxRegion]SyntaxRegion[/clink]" params="string name" custom="" /><sig>M:gehtsoft.xce.colorer.ColorerFactory.FindSyntaxRegion(System.String)</sig></member><member name="FindStyledRegion" visibility="public" scope="instance" brief="Finds the styled region definition by the name." key="FindStyledRegion.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ColorerFactory" class-name="ColorerFactory" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the styled region.</p><p>The name must be fully qualified, i.e. must include both, the scheme and the region name, for example: [c]"def:Comment[/c], where
[c]def[/c] is the scheme name and the [c]Comment[/c] is the region name.</p></body></param><declaration language="cs" name="FindStyledRegion" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.colorer.StyledRegion]StyledRegion[/clink]" params="string name" custom="" /><sig>M:gehtsoft.xce.colorer.ColorerFactory.FindStyledRegion(System.String)</sig></member><member name="Dispose" visibility="public" scope="instance" brief="Dispose the factory." key="Dispose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ColorerFactory" class-name="ColorerFactory" exclude-from-list="false"><body><p>Please note that all syntax highlighters created using this factory must be also disposed before
disposing the factory.</p></body><return /><declaration language="cs" name="Dispose" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.colorer.ColorerFactory.Dispose</sig></member><parent>System.IDisposable</parent></class><group title="gehtsoft.xce.colorer" key="gehtsoft.xce.colorer" brief=".NET wrapper for colorer-take5" in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted"><body><p>The gehtsoft.xce.colorer.dll assembly contains the set of the wrapper classes for
colorer ([eurl=http://colorer.sourceforge.net/]http://colorer.sourceforge.net/[/eurl])
syntax-highlighting library.</p><p>See [url=img/colorer1.png]Class Diagram[/url] of the [c]gehtsoft.xce.colorer[/c] package.</p></body></group><class name="ILineSource" sig="T:gehtsoft.xce.colorer.ILineSource" key="gehtsoft.xce.colorer.ILineSource" brief="The interface to the text to be parsed." type="interface" prefix="" in-group="gehtsoft.xce.colorer" decl-name="ILineSource" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="GetFileName" visibility="public" scope="instance" brief="The method must return the file name." key="GetFileName.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ILineSource" class-name="ILineSource" exclude-from-list="false"><return /><declaration language="cs" name="GetFileName" prefix="virutal" suffix="abstract" name-suffix="" return="string" params="" custom="" /><sig>M:gehtsoft.xce.colorer.ILineSource.GetFileName</sig></member><member name="GetLinesCount" visibility="public" scope="instance" brief="The method must return the number of the lines in the file." key="GetLinesCount.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ILineSource" class-name="ILineSource" exclude-from-list="false"><return /><declaration language="cs" name="GetLinesCount" prefix="virutal" suffix="abstract" name-suffix="" return="int" params="" custom="" /><sig>M:gehtsoft.xce.colorer.ILineSource.GetLinesCount</sig></member><member name="GetLineLength" visibility="public" scope="instance" brief="The method must return length of the file line in characters." key="GetLineLength.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ILineSource" class-name="ILineSource" exclude-from-list="false"><return /><param name="lno" gray="false"><body><p>The index of the line. The first line has index 0.</p></body></param><declaration language="cs" name="GetLineLength" prefix="virutal" suffix="abstract" name-suffix="" return="int" params="int lno" custom="" /><sig>M:gehtsoft.xce.colorer.ILineSource.GetLineLength(System.Int32)</sig></member><member name="GetLine" visibility="public" scope="instance" brief="The method must return the line content." key="GetLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.ILineSource" class-name="ILineSource" exclude-from-list="false"><return /><param name="line" gray="false"><body><p>The index of the line. The first line has index 0.</p></body></param><param name="buffer" gray="false"><body><p>The buffer to copy the line content to.</p></body></param><param name="lineColumnFrom" gray="false"><body><p>The column to get the line content starting at.</p></body></param><param name="length" gray="false"><body><p>The number of characters to get.</p></body></param><declaration language="cs" name="GetLine" prefix="virutal" suffix="abstract" name-suffix="" return="int" params="int line, char[] buffer, int lineColumnFrom, int length" custom="" /><sig>M:gehtsoft.xce.colorer.ILineSource.GetLine(System.Int32,System.Char[],System.Int32,System.Int32)</sig></member></class><article title="Colorer Regular Expression Syntax" key="gehtsoft.xce.colorer.RegexSyntax" in-group="gehtsoft.xce.colorer" brief="The article describes the syntax of the colorer regular expressions" transform="def" alias-id="null" exclude-from-list="false" briefless="false"><body><p>[b]Syntax[/b]</p><p>All regexps must be enclosed between slashes ([c]/[/c]). After the end slash there can be modifiers:[br]
[c]/[i]patterns[/i]/[i]modifiers[/i][/c]</p><p>[b]Modifiers[/b]</p><table width=""><table-row is-header="false"><table-col width=""><body><p>i</p></body></table-col><table-col width=""><body><p>The character case is ignored when patters are matched</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>x</p></body></table-col><table-col width=""><body><p>The space, carriage return and line feed characters in the regular expression are ignored.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>m</p></body></table-col><table-col width=""><body><p>The [c]$[/c] pattern matches the carriage return and line feed characters. The ^ pattern matches the position after the line feed or
carriage return characters.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>s</p></body></table-col><table-col width=""><body><p>The [c].[/c] pattern matches the carriage return and line feed characters.</p></body></table-col></table-row></table><p>[b]Metacharacters[/b]</p><table width=""><table-row is-header="false"><table-col width=""><body><p>^</p></body></table-col><table-col width=""><body><p>Matches the beginning of the string.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>$</p></body></table-col><table-col width=""><body><p>Matches the end of the string.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>.</p></body></table-col><table-col width=""><body><p>Matches any characters</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>[]</p></body></table-col><table-col width=""><body><p>Matches the charset specified. The characters may be either listed between the square brackets or
specified as a range between characters.</p><p>Also may include the following character classes:</p><table width=""><table-row is-header="false"><table-col width=""><body><p>\d</p></body></table-col><table-col width=""><body><p>Any digit</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\D</p></body></table-col><table-col width=""><body><p>Any not digit</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\w</p></body></table-col><table-col width=""><body><p>Any letter</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\w</p></body></table-col><table-col width=""><body><p>Any not letter</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\s</p></body></table-col><table-col width=""><body><p>A space, tabulation</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\S</p></body></table-col><table-col width=""><body><p>Not a space, tabulation</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\n</p></body></table-col><table-col width=""><body><p>carriage return or line feed character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\N</p></body></table-col><table-col width=""><body><p>Not a carriage return or line feed character.</p></body></table-col></table-row></table><p>Examples:</p><table width=""><table-row is-header="false"><table-col width=""><body><p>[abc]</p></body></table-col><table-col width=""><body><p>Matches a, b or c</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>[a-c]</p></body></table-col><table-col width=""><body><p>Matches a, b or c</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>[a-cz]</p></body></table-col><table-col width=""><body><p>Matches a, b, c or z</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>[0-9a-hA-H]</p></body></table-col><table-col width=""><body><p>Matches a hexadecimal digit</p></body></table-col></table-row></table></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\</p></body></table-col><table-col width=""><body><p>The escape character:</p><p>- If followed by the special character such as brackets - matches the character escaped.</p><p>- If followed by a letter (a-z) - matches special pattern (see below for details).</p><p>- If followed by a number (0-9) - matches previous group pattern referred by a patter index (see below for details).</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\b</p></body></table-col><table-col width=""><body><p>Matches a word break.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\B</p></body></table-col><table-col width=""><body><p>Matches not a word break.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\n</p></body></table-col><table-col width=""><body><p>Matches a line feed (0x10) or carriage return (0x13).</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\N</p></body></table-col><table-col width=""><body><p>Matches not a line feed (0x10) or carriage return (0x13).</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\t</p></body></table-col><table-col width=""><body><p>Matches a tabulation (0x09)</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\s</p></body></table-col><table-col width=""><body><p>Matches any whitespace character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\S</p></body></table-col><table-col width=""><body><p>Matches not a whitespace character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\w</p></body></table-col><table-col width=""><body><p>Matches a word character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\W</p></body></table-col><table-col width=""><body><p>Matches not a word character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\d</p></body></table-col><table-col width=""><body><p>Matches a digit.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\D</p></body></table-col><table-col width=""><body><p>Matches not a digit.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\u</p></body></table-col><table-col width=""><body><p>Matches an uppercase character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\l</p></body></table-col><table-col width=""><body><p>Matches a lowercase character.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\xNN</p></body></table-col><table-col width=""><body><p>A character with a hexadecimal code XX</p></body></table-col></table-row></table><p>[b]Groups and operators[/b]</p><table width=""><table-row is-header="false"><table-col width=""><body><p>([i]patterns[/i])</p></body></table-col><table-col width=""><body><p>Groups patterns. The groups are counted from the left to right, by the opening brackets: (1(2)(3(4)))</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>(?{[i]name[/i]}[i]patterns[/i])</p></body></table-col><table-col width=""><body><p>Group patterns and give the group a name.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>|</p></body></table-col><table-col width=""><body><p>Alternative. Matches previous or next pattern.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>*</p></body></table-col><table-col width=""><body><p>Match preceding patterns 0 or more times.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>+</p></body></table-col><table-col width=""><body><p>Match preceding patterns 1 or more times.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>?</p></body></table-col><table-col width=""><body><p>Match preceding patterns 0 or 1 times.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>{n}</p></body></table-col><table-col width=""><body><p>Match preceding patterns n times.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>{n,}</p></body></table-col><table-col width=""><body><p>Match preceding patterns n or more times.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>{n,m}</p></body></table-col><table-col width=""><body><p>Match preceding patterns n to m times.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>\[i]n[/i]</p></body></table-col><table-col width=""><body><p>Match the value of the group n where n is a number between 1 and 9.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>?=</p></body></table-col><table-col width=""><body><p>Match the preceding pattern ahead.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>?!</p></body></table-col><table-col width=""><body><p>Negative match the preceding pattern ahead.</p></body></table-col></table-row></table></body></article><class name="Regex" sig="T:gehtsoft.xce.colorer.Regex" key="gehtsoft.xce.colorer.Regex" brief="Regular Expression" type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="Regex" sort="true" class-name-in-key="true" transform="def"><body><p>To match an editor buffer use the [clink=gehtsoft.xce.text.XceFileBufferRegex]gehtsoft.xce.text.XceFileBufferRegex[/clink] class.</p><p>An instance of the class MUST be disposed after usage.</p><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="Match" visibility="public" scope="instance" brief="Matches a character array." key="Match.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><body><p>The method returns [c]true[/c] if match has been found.</p></body><return /><param name="value" gray="false"><body><p>The string to match.</p></body></param><param name="startIndex" gray="false"><body><p>The index of the first character in the string to be matched.</p></body></param><param name="length" gray="false"><body><p>The length of the string to be matched.</p></body></param><declaration language="cs" name="Match" prefix="" suffix="" name-suffix="" return="bool" params="char[] value, int startIndex, int length" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Match(System.Char[],System.Int32,System.Int32)</sig></member><member name="Match" visibility="public" scope="instance" brief="Matches a sub string." key="Match.3" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><body><p>The method returns [c]true[/c] if match has been found.</p></body><return /><param name="value" gray="false"><body><p>The value to be matched.</p></body></param><param name="startIndex" gray="false"><body><p>The first index in the string to be matched.</p></body></param><param name="length" gray="false"><body><p>The length of the string to be matched.</p></body></param><declaration language="cs" name="Match" prefix="" suffix="" name-suffix="" return="bool" params="string value, int startIndex, int length" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Match(System.String,System.Int32,System.Int32)</sig></member><member name="Match" visibility="public" scope="instance" brief="Matches a whole string." key="Match.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><body><p>The method returns [c]true[/c] if match has been found.</p></body><return /><param name="value" gray="false"><body><p>The value to be matched.</p></body></param><declaration language="cs" name="Match" prefix="" suffix="" name-suffix="" return="bool" params="string value" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Match(System.String)</sig></member><member name="Regex" visibility="public" scope="instance" brief="Constructor." key="Regex.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><param name="regularExpression" gray="false"><body><p>The regular expression.</p><p>See the [link=gehtsoft.xce.colorer.RegexSyntax]regular expression syntax[/link].</p></body></param><declaration language="cs" name="Regex" prefix="" suffix="" name-suffix="" return="" params="string regularExpression" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.#ctor(System.String)</sig></member><member name="NextMatch" visibility="public" scope="instance" brief="Finds the next match in the same string as specified in the previous call of the Match method." key="NextMatch.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><body><p>The method returns [c]true[/c] if match has been found.</p></body><return /><declaration language="cs" name="NextMatch" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.NextMatch</sig></member><member name="Start" visibility="public" scope="instance" brief="Gets the index of the first character of the match of the specified group." key="Start.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><param name="group" gray="false"><body><p>The index of the group. The index 0 matches the whole regular expression.</p></body></param><declaration language="cs" name="Start" prefix="" suffix="" name-suffix="" return="int" params="int group" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Start(System.Int32)</sig></member><member name="End" visibility="public" scope="instance" brief="Get the index of the last character of the match of the specified group." key="End.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><param name="group" gray="false"><body><p>The index of the group. The index 0 matches the whole regular expression.</p></body></param><declaration language="cs" name="End" prefix="" suffix="" name-suffix="" return="int" params="int group" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.End(System.Int32)</sig></member><member name="Length" visibility="public" scope="instance" brief="Get the length of the match of the specified group." key="Length.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><param name="group" gray="false"><body><p>The index of the group. The index 0 matches the whole regular expression.</p></body></param><declaration language="cs" name="Length" prefix="" suffix="" name-suffix="" return="int" params="int group" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Length(System.Int32)</sig></member><member name="Value" visibility="public" scope="instance" brief="Gets the match value as a string." key="Value.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><param name="group" gray="false"><body><p>The index of the group. The index 0 matches the whole regular expression.</p></body></param><declaration language="cs" name="Value" prefix="" suffix="" name-suffix="" return="string" params="int group" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Value(System.Int32)</sig></member><member name="Name" visibility="public" scope="instance" brief="Gets the name of the group by its index." key="Name.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><param name="group" gray="false"><body><p>The index of the group. The index 0 matches the whole regular expression.</p></body></param><declaration language="cs" name="Name" prefix="" suffix="" name-suffix="" return="string" params="int group" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.Name(System.Int32)</sig></member><member name="IndexOf" visibility="public" scope="instance" brief="Gets the index of the group by its name." key="IndexOf.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><body><p>If the group with the name specified is not found, -1 is returned.</p></body><return /><param name="group" gray="false"><body><p>The name of the group.</p></body></param><declaration language="cs" name="IndexOf" prefix="" suffix="" name-suffix="" return="int" params="string group" custom="" /><sig>M:gehtsoft.xce.colorer.Regex.IndexOf(System.String)</sig></member><member name="MatchesCount" visibility="public" scope="instance" brief="Returns the number of the matches." key="MatchesCount.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.Regex" class-name="Regex" exclude-from-list="false"><return /><declaration language="cs" name="MatchesCount" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.Regex.MatchesCount</sig></member><parent>System.IDisposable</parent></class><class name="StyledRegion" sig="T:gehtsoft.xce.colorer.StyledRegion" key="gehtsoft.xce.colorer.StyledRegion" brief="The styled region definition." type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="StyledRegion" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="BackgroupColor" visibility="public" scope="instance" brief="Gets the background color for the styled region." key="BackgroupColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.StyledRegion" class-name="StyledRegion" exclude-from-list="false"><body><p>The background color is the color index in range of [c]0x00-0x0f[/c] for the console schemes or
the RGB quad of other schemas.</p></body><return /><declaration language="cs" name="BackgroupColor" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.StyledRegion.BackgroupColor</sig></member><member name="ForegroundColor" visibility="public" scope="instance" brief="Gets the foreground color for the styled region." key="ForegroundColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.StyledRegion" class-name="StyledRegion" exclude-from-list="false"><body><p>The foreground color is the color index in range of [c]0x00-0x0f[/c] for the console schemes or
the RGB quad of other schemas.</p></body><return /><declaration language="cs" name="ForegroundColor" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.StyledRegion.ForegroundColor</sig></member><member name="ConsoleColor" visibility="public" scope="instance" brief="Gets the console color attribute for the styled region." key="ConsoleColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.StyledRegion" class-name="StyledRegion" exclude-from-list="false"><return /><declaration language="cs" name="ConsoleColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.colorer.StyledRegion.ConsoleColor</sig></member><member name="Name" visibility="public" scope="instance" brief="Gets the name of the styled region." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.StyledRegion" class-name="StyledRegion" exclude-from-list="false"><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.colorer.StyledRegion.Name</sig></member></class><class name="SyntaxHighlighter" sig="T:gehtsoft.xce.colorer.SyntaxHighlighter" key="gehtsoft.xce.colorer.SyntaxHighlighter" brief="The syntax highlighter for the text source." type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="SyntaxHighlighter" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="Colorize" visibility="public" scope="instance" brief="Prepare the color information for the specified line range." key="Colorize.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><param name="lineFrom" gray="false"><body><p>The first line to prepare the color information.</p><p>The index of the first line is 0.</p></body></param><param name="lineCount" gray="false"><body><p>The number of the lines to prepare the color information for.</p></body></param><declaration language="cs" name="Colorize" prefix="" suffix="" name-suffix="" return="void" params="int lineFrom, int lineCount" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.Colorize(System.Int32,System.Int32)</sig></member><member name="NotifyLineChange" visibility="public" scope="instance" brief="The method is used to notify that the line content has been changed." key="NotifyLineChange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><param name="line" gray="false"><body><p>The line index.</p><p>The index of the first line is 0.</p></body></param><declaration language="cs" name="NotifyLineChange" prefix="" suffix="" name-suffix="" return="void" params="int line" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyLineChange(System.Int32)</sig></member><member name="NotifyMajorChange" visibility="public" scope="instance" brief="The method is used to notify about the major change inside the document." key="NotifyMajorChange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><param name="lineFrom" gray="false"><body><p>The first line affected by the major change.</p><p>The index of the first line is 0.</p></body></param><declaration language="cs" name="NotifyMajorChange" prefix="" suffix="" name-suffix="" return="void" params="int lineFrom" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyMajorChange(System.Int32)</sig></member><member name="NotifyIdle" visibility="public" scope="instance" brief="The method is used to notifythat the host application is in the idle start." key="NotifyIdle.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><declaration language="cs" name="NotifyIdle" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyIdle</sig></member><member name="NotifyFileNameChange" visibility="public" scope="instance" brief="The method is used to notify that the name of the file has been changed." key="NotifyFileNameChange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><declaration language="cs" name="NotifyFileNameChange" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.NotifyFileNameChange</sig></member><member name="GetFirstRegion" visibility="public" scope="instance" brief="Gets the first syntax region in the specified line." key="GetFirstRegion.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><body><p>You must call [clink=gehtsoft.xce.colorer.SyntaxHighlighter.Colorize.0]Colorize()[/clink] method before
getting the syntax highlight information.</p><p>The method returns [c]true[/c] if the line specified has at least one syntax region.</p><p>The last syntax region received by
[clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion.0]GetFirstRegion()[/clink]
or
[clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetNextRegion.0]GetNextRegion()[/clink]
method can be accessed via [clink=gehtsoft.xce.colorer.SyntaxHighlighter.CurrentRegion.0]CurrentRegion[/clink] property.</p></body><return /><param name="line" gray="false"><body><p>The line index.</p><p>The index of the first line is 0.</p></body></param><declaration language="cs" name="GetFirstRegion" prefix="" suffix="" name-suffix="" return="bool" params="int line" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion(System.Int32)</sig></member><member name="GetNextRegion" visibility="public" scope="instance" brief="Gets the next syntax region." key="GetNextRegion.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><body><p>You must call [clink=gehtsoft.xce.colorer.SyntaxHighlighter.Colorize.0]Colorize()[/clink] method before
getting the syntax highlight information.</p><p>You must call [clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion.0]GetFirstRegion()[/clink] method first
to get the first region for the line.</p><p>The method returns [c]true[/c] if the line has more syntax regions and retrieves the next syntax region.</p><p>The last syntax region received by
[clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion.0]GetFirstRegion()[/clink]
or
[clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetNextRegion.0]GetNextRegion()[/clink]
method can be accessed via [clink=gehtsoft.xce.colorer.SyntaxHighlighter.CurrentRegion.0]CurrentRegion[/clink] property.</p></body><return /><declaration language="cs" name="GetNextRegion" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.GetNextRegion</sig></member><member name="MatchPair" visibility="public" scope="instance" brief="The method checks whether the syntax pair exists at the position specified and returns the pair properties." key="MatchPair.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><body><p>The method returns [c]null[/c] in case where is no pair at the position specified.</p><p>The returned object must be disposed after the usage.</p></body><return /><param name="line" gray="false"><body><p>The line index in the text to check.</p><p>The index of the first line is 0.</p></body></param><param name="column" gray="false"><body><p>The column index in the line which must belong to a pair region.</p><p>The index of the first column is 0.</p></body></param><declaration language="cs" name="MatchPair" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.colorer.SyntaxHighlighterPair]SyntaxHighlighterPair[/clink]" params="int line, int column" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.MatchPair(System.Int32,System.Int32)</sig></member><member name="Dispose" visibility="public" scope="instance" brief="Disposes the syntax highlighter." key="Dispose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><declaration language="cs" name="Dispose" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.Dispose</sig></member><member name="CurrentRegion" visibility="public" scope="instance" brief="The syntax region." key="CurrentRegion.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><body><p>The syntax region must be retrieved by
[clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetFirstRegion.0]GetFirstRegion()[/clink]
or
[clink=gehtsoft.xce.colorer.SyntaxHighlighter.GetNextRegion.0]GetNextRegion()[/clink]
methods.</p><p>Please note that retrieving the new region do [c]NOT[/c] create a new object, but fill the value of the
same region object. So, if you need to store the region information - do a copy of the object.</p></body><return /><declaration language="cs" name="CurrentRegion" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.colorer.SyntaxHighlighterRegion]SyntaxHighlighterRegion[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighter.CurrentRegion</sig></member><member name="IdleJob" visibility="public" scope="instance" brief="Performs background parsing." key="IdleJob.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><param name="timeout" gray="false"><body><p>The maximum time to perform parsing, specified in milliseconds.</p></body></param><declaration language="cs" name="IdleJob" prefix="" suffix="" name-suffix="" return="void" params="int timeout" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.IdleJob(System.Int32)</sig></member><member name="ValidateRange" visibility="public" scope="instance" brief="Forces re-parse of the range specified." key="ValidateRange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><param name="from" gray="false"><body><p>The first line of the range.</p></body></param><param name="to" gray="false"><body><p>The last line of the range.</p></body></param><declaration language="cs" name="ValidateRange" prefix="" suffix="" name-suffix="" return="void" params="int from, int to" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.ValidateRange(System.Int32,System.Int32)</sig></member><member name="SetVisibleRange" visibility="public" scope="instance" brief="Forces background re-parse of the range specified." key="SetVisibleRange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><param name="from" gray="false"><body><p>The first line of the range.</p></body></param><param name="length" gray="false"><body><p>The length of the range in lines.</p></body></param><declaration language="cs" name="SetVisibleRange" prefix="" suffix="" name-suffix="" return="void" params="int from, int length" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighter.SetVisibleRange(System.Int32,System.Int32)</sig></member><member name="LastValidLine" visibility="public" scope="instance" brief="The maximum line number which is currently parsed." key="LastValidLine.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><declaration language="cs" name="LastValidLine" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighter.LastValidLine</sig></member><member name="FileType" visibility="public" scope="instance" brief="Returns the name of the scheme used to parse the file." key="FileType.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighter" class-name="SyntaxHighlighter" exclude-from-list="false"><return /><declaration language="cs" name="FileType" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighter.FileType</sig></member><parent>System.IDisposable</parent></class><class name="SyntaxHighlighterPair" sig="T:gehtsoft.xce.colorer.SyntaxHighlighterPair" key="gehtsoft.xce.colorer.SyntaxHighlighterPair" brief="The information about matching pair." type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="SyntaxHighlighterPair" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="Dispose" visibility="public" scope="instance" brief="Dispose the matching pair." key="Dispose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterPair" class-name="SyntaxHighlighterPair" exclude-from-list="false"><return /><declaration language="cs" name="Dispose" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighterPair.Dispose</sig></member><member name="End" visibility="public" scope="instance" brief="Gets the syntax region of the end of the pair." key="End.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterPair" class-name="SyntaxHighlighterPair" exclude-from-list="false"><return /><declaration language="cs" name="End" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.colorer.SyntaxHighlighterRegion]SyntaxHighlighterRegion[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterPair.End</sig></member><member name="Start" visibility="public" scope="instance" brief="Gets the syntax region of the start of the pair." key="Start.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterPair" class-name="SyntaxHighlighterPair" exclude-from-list="false"><return /><declaration language="cs" name="Start" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.colorer.SyntaxHighlighterRegion]SyntaxHighlighterRegion[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterPair.Start</sig></member><parent>System.IDisposable</parent></class><class name="SyntaxHighlighterRegion" sig="T:gehtsoft.xce.colorer.SyntaxHighlighterRegion" key="gehtsoft.xce.colorer.SyntaxHighlighterRegion" brief="The syntax region in the text." type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="SyntaxHighlighterRegion" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="Is" visibility="public" scope="instance" brief="The method checks whether the syntax region is a, or is the derived from the syntax region definition." key="Is.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><return /><param name="type" gray="false"><body><p>The syntax region definition.</p></body></param><declaration language="cs" name="Is" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.colorer.SyntaxRegion]SyntaxRegion[/clink] type" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Is(gehtsoft.xce.colorer.SyntaxRegion)</sig></member><member name="Name" visibility="public" scope="instance" brief="The name of the syntax region." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Name</sig></member><member name="ConsoleColor" visibility="public" scope="instance" brief="The console color attribute of the syntax region in the color scheme chosen during colorer initialization." key="ConsoleColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><return /><declaration language="cs" name="Color" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.ConsoleColor</sig></member><member name="BackgroupColor" visibility="public" scope="instance" brief="Gets the background color for the styled region." key="BackgroupColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><body><p>The background color is the color index in range of [c]0x00-0x0f[/c] for the console schemes or
the RGB quad of other schemas.</p></body><return /><declaration language="cs" name="BackgroupColor" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.BackgroupColor</sig></member><member name="ForegroundColor" visibility="public" scope="instance" brief="Gets the foreground color for the styled region." key="ForegroundColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><body><p>The foreground color is the color index in range of [c]0x00-0x0f[/c] for the console schemes or
the RGB quad of other schemas.</p></body><return /><declaration language="cs" name="ForegroundColor" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.ForegroundColor</sig></member><member name="HasColor" visibility="public" scope="instance" brief="The flag indicating that the region has coloring information." key="HasColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><return /><declaration language="cs" name="HasColor" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.HasColor</sig></member><member name="IsSyntaxRegion" visibility="public" scope="instance" brief="The flag indicating that the region is a syntax region." key="IsSyntaxRegion.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><return /><declaration language="cs" name="IsSyntaxRegion" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.IsSyntaxRegion</sig></member><member name="Length" visibility="public" scope="instance" brief="The length of the region in characters." key="Length.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><return /><declaration language="cs" name="Length" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Length</sig></member><member name="EndColumn" visibility="public" scope="instance" brief="The last column of the syntax region." key="EndColumn.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><body><p>The index of the first column in the line is 0.</p></body><return /><declaration language="cs" name="EndColumn" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.EndColumn</sig></member><member name="StartColumn" visibility="public" scope="instance" brief="The first column of the syntax region." key="StartColumn.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><body><p>The index of the first column in the line is 0.</p></body><return /><declaration language="cs" name="StartColumn" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.StartColumn</sig></member><member name="Line" visibility="public" scope="instance" brief="The line index of the syntax region." key="Line.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><body><p>The index of the first line is 0.</p></body><return /><declaration language="cs" name="Line" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.Line</sig></member><member name="DerivedFrom" visibility="public" scope="instance" brief="Returns the name of the parent region." key="DerivedFrom.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxHighlighterRegion" class-name="SyntaxHighlighterRegion" exclude-from-list="false"><body><p>Returns the name of the parent region or null in case the region is the base region.</p></body><return /><declaration language="cs" name="DerivedFrom" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxHighlighterRegion.DerivedFrom</sig></member></class><class name="SyntaxRegion" sig="T:gehtsoft.xce.colorer.SyntaxRegion" key="gehtsoft.xce.colorer.SyntaxRegion" brief="The syntax region definition." type="class" prefix="" in-group="gehtsoft.xce.colorer" decl-name="SyntaxRegion" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.colorer.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.colorer]gehtsoft.xce.colorer[/clink].</p></body><member name="IsDerivedFrom" visibility="public" scope="instance" brief="Checks whether this region is derived from the specified region." key="IsDerivedFrom.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxRegion" class-name="SyntaxRegion" exclude-from-list="false"><return /><param name="region" gray="false"><body><p>The region definition.</p></body></param><declaration language="cs" name="IsDerivedFrom" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.colorer.SyntaxRegion]SyntaxRegion[/clink] region" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxRegion.IsDerivedFrom(gehtsoft.xce.colorer.SyntaxRegion)</sig></member><member name="Equals" visibility="public" scope="instance" brief="Checks whether the syntax region is equal to another syntax region." key="Equals.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxRegion" class-name="SyntaxRegion" exclude-from-list="false"><body><p>The method return [c]true[/c] if both definitions points to the same colorer's definition of
the syntax region.</p></body><return /><param name="region" gray="false"><body><p>The region definition.</p></body></param><declaration language="cs" name="Equals" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.colorer.SyntaxRegion]SyntaxRegion[/clink] region" custom="" /><sig>M:gehtsoft.xce.colorer.SyntaxRegion.Equals(gehtsoft.xce.colorer.SyntaxRegion)</sig></member><member name="Name" visibility="public" scope="instance" brief="The name of the syntax region." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.colorer.SyntaxRegion" class-name="SyntaxRegion" exclude-from-list="false"><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.colorer.SyntaxRegion.Name</sig></member><parent>System.IEquatable&lt;[clink=gehtsoft.xce.colorer.SyntaxRegion]SyntaxRegion[/clink]&gt;</parent></class><group title="gehtsoft.xce.text" key="gehtsoft.xce.text" brief="The editor text buffer." in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted"><body><p>The editor text buffer is based on [eurl=http://www.scintilla.org/]scintilla[/eurl] editor.</p></body></group><class name="XceFileBuffer" sig="T:gehtsoft.xce.text.XceFileBuffer" key="gehtsoft.xce.text.XceFileBuffer" brief="The text buffer." type="class" prefix="" in-group="gehtsoft.xce.text" decl-name="XceFileBuffer" sort="true" class-name-in-key="true" transform="def"><body><p>An instance of the class must be disposed after usage.</p><p>The type defined in the [c]gehtsoft.xce.text.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.text]gehtsoft.xce.text[/clink].</p></body><member name="XceFileBuffer" visibility="public" scope="instance" brief="Constructor." key="XceFileBuffer.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="XceFileBuffer" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.#ctor</sig></member><member name="GetRange" visibility="public" scope="instance" brief="Gets a range of the characters into a character array." key="GetRange.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="position" gray="false"><body><p>The position of the first character in the buffer.</p></body></param><param name="length" gray="false"><body><p>The length of the range.</p></body></param><param name="buffer" gray="false"><body><p>The buffer to be filled.</p></body></param><param name="offset" gray="false"><body><p>The offset in the buffer to put the characters from.</p></body></param><declaration language="cs" name="GetRange" prefix="" suffix="" name-suffix="" return="int" params="int position, int length, char[] buffer, int offset" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.GetRange(System.Int32,System.Int32,System.Char[],System.Int32)</sig></member><member name="GetRange" visibility="public" scope="instance" brief="Gets a range of the characters as a string." key="GetRange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="position" gray="false"><body><p>The index of the first character in the range.</p></body></param><param name="length" gray="false"><body><p>The length of the range.</p></body></param><declaration language="cs" name="GetRange" prefix="" suffix="" name-suffix="" return="string" params="int position, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.GetRange(System.Int32,System.Int32)</sig></member><member name="DeleteRange" visibility="public" scope="instance" brief="Deletes a range from from the buffer." key="DeleteRange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="position" gray="false"><body><p>The index of the first character in the range.</p></body></param><param name="length" gray="false"><body><p>The length of the range.</p></body></param><declaration language="cs" name="DeleteRange" prefix="" suffix="" name-suffix="" return="void" params="int position, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.DeleteRange(System.Int32,System.Int32)</sig></member><member name="InsertRange" visibility="public" scope="instance" brief="Inserts the content of the char array into the text buffer." key="InsertRange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="position" gray="false"><body><p>The index of the position to insert the text.</p></body></param><param name="buffer" gray="false"><body><p>The character array containing the text.</p></body></param><param name="offset" gray="false"><body><p>The offset of the text to be inserted in the character array.</p></body></param><param name="length" gray="false"><body><p>The length of the text to be inserted.</p></body></param><declaration language="cs" name="InsertRange" prefix="" suffix="" name-suffix="" return="void" params="int position, char[] buffer, int offset, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.InsertRange(System.Int32,System.Char[],System.Int32,System.Int32)</sig></member><member name="InsertRange" visibility="public" scope="instance" brief="Inserts the string into the text buffer." key="InsertRange.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="position" gray="false"><body><p>The index of the position in the buffer to insert the text.</p></body></param><param name="text" gray="false"><body><p>The text to be inserted.</p></body></param><declaration language="cs" name="InsertRange" prefix="" suffix="" name-suffix="" return="void" params="int position, string text" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.InsertRange(System.Int32,System.String)</sig></member><member name="LineStart" visibility="public" scope="instance" brief="Gets the index of the position where the line specified starts." key="LineStart.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>See also [clink=gehtsoft.xce.text.XceFileBuffer.LineLength.0]LineLength[/clink]</p></body><return /><param name="lineIndex" gray="false"><body><p>The index of the line.</p></body></param><declaration language="cs" name="LineStart" prefix="" suffix="" name-suffix="" return="int" params="int lineIndex" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.LineStart(System.Int32)</sig></member><member name="LineLength" visibility="public" scope="instance" brief="Gets the length of the line without end of line characters." key="LineLength.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>See also [clink=gehtsoft.xce.text.XceFileBuffer.LineStart.0]LineStart[/clink]</p><p>Note: The end-of-line characters are NOT counted into the length. To get the length of the line
including the end-of-line characters use [link=gehtsoft.xce.text.XceFileBuffer.LineLength.1]another version[/link] of the method.</p></body><return /><param name="lineIndex" gray="false"><body><p>The index of the line.</p></body></param><declaration language="cs" name="LineLength" prefix="" suffix="" name-suffix="" return="int" params="int lineIndex" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.LineLength(System.Int32)</sig></member><member name="LineLength" visibility="public" scope="instance" brief="Gets the length of the line with or without end of line characters." key="LineLength.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="lineIndex" gray="false"><body><p>The index of the line.</p></body></param><param name="includeEof" gray="false"><body><p>The flag indicating whether the end of line character(s) must be counted.</p></body></param><declaration language="cs" name="LineLength" prefix="" suffix="" name-suffix="" return="int" params="int lineIndex, bool includeEof" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.LineLength(System.Int32,System.Boolean)</sig></member><member name="LineFromPosition" visibility="public" scope="instance" brief="Gets the line index by the character index." key="LineFromPosition.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>The method returns the index of the line to which the position belongs.</p></body><return /><param name="position" gray="false"><body><p>The index of the position in the buffer.</p></body></param><declaration language="cs" name="LineFromPosition" prefix="" suffix="" name-suffix="" return="int" params="int position" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.LineFromPosition(System.Int32)</sig></member><member name="AppendLine" visibility="public" scope="instance" brief="Appends an empty line to the buffer." key="AppendLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="AppendLine" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.AppendLine</sig></member><member name="InsertLine" visibility="public" scope="instance" brief="Inserts an empty line into the buffer." key="InsertLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="lineIndex" gray="false"><body><p>The index of the line to be inserted. Use 0 to insert the line in the
beginning of the file.</p></body></param><declaration language="cs" name="InsertLine" prefix="" suffix="" name-suffix="" return="int" params="int lineIndex" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.InsertLine(System.Int32)</sig></member><member name="DeleteLine" visibility="public" scope="instance" brief="Deletes a line." key="DeleteLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>The method is equal to [c]buffer.DeleteRange(buffer.LineStart(lineIndex), buffer.LineLength(lineIndex, true))[/c];</p></body><return /><param name="lineIndex" gray="false"><body><p>The line index.</p></body></param><declaration language="cs" name="DeleteLine" prefix="" suffix="" name-suffix="" return="void" params="int lineIndex" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.DeleteLine(System.Int32)</sig></member><member name="InsertToLine" visibility="public" scope="instance" brief="Inserts a string into the line." key="InsertToLine.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>Please note that the method adds the lines and characters into the line if the buffer (or line) are shorter than
the position(s) requested.</p></body><return /><param name="lineIndex" gray="false"><body><p>The line index.</p></body></param><param name="position" gray="false"><body><p>The position index in the line.</p></body></param><param name="buffer" gray="false"><body><p>The text to be inserted.</p></body></param><declaration language="cs" name="InsertToLine" prefix="" suffix="" name-suffix="" return="void" params="int lineIndex, int position, string buffer" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.String)</sig></member><member name="InsertToLine" visibility="public" scope="instance" brief="Inserts content of a char array into the line." key="InsertToLine.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>Please note that the method adds the lines and characters into the line if the buffer (or line) are shorter than
the position(s) requested.</p></body><return /><param name="lineIndex" gray="false"><body><p>The line index.</p></body></param><param name="position" gray="false"><body><p>The position index in the line.</p></body></param><param name="buffer" gray="false"><body><p>The char array containing the text to be inserted.</p></body></param><param name="offset" gray="false"><body><p>The offset of the text inside the char array.</p></body></param><param name="length" gray="false"><body><p>The length of the text.</p></body></param><declaration language="cs" name="InsertToLine" prefix="" suffix="" name-suffix="" return="int" params="int lineIndex, int position, char[] buffer, int offset, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)</sig></member><member name="InsertToLine" visibility="public" scope="instance" brief="Insert one or more characters into the line." key="InsertToLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="lineIndex" gray="false"><body><p>The line index.</p></body></param><param name="position" gray="false"><body><p>The position index in the line.</p></body></param><param name="c" gray="false"><body><p>The character to insert.</p></body></param><param name="count" gray="false"><body><p>The number of the character to be inserted.</p></body></param><declaration language="cs" name="InsertToLine" prefix="" suffix="" name-suffix="" return="int" params="int lineIndex, int position, char c, int count" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.InsertToLine(System.Int32,System.Int32,System.Char,System.Int32)</sig></member><member name="DeleteFromLine" visibility="public" scope="instance" brief="Delete a part of the line." key="DeleteFromLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>Please note that the method won't delete the line even if the length specified is bigger than the length of the line.</p><p>To delete the whole line use [c]DeleteLine[/c] or [c]DeleteRange[/c] methods.</p></body><return /><param name="lineIndex" gray="false"><body><p>The line index.</p></body></param><param name="position" gray="false"><body><p>The index of the position in the line.</p></body></param><param name="length" gray="false"><body><p>The length of the text to be deleted.</p></body></param><declaration language="cs" name="DeleteFromLine" prefix="" suffix="" name-suffix="" return="void" params="int lineIndex, int position, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.DeleteFromLine(System.Int32,System.Int32,System.Int32)</sig></member><member name="SplitLine" visibility="public" scope="instance" brief="Splits the line at the specified position." key="SplitLine.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="lineIndex" gray="false"><body><p>The index of the line.</p></body></param><param name="position" gray="false"><body><p>The index of the position in the line.</p></body></param><declaration language="cs" name="SplitLine" prefix="" suffix="" name-suffix="" return="void" params="int lineIndex, int position" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.SplitLine(System.Int32,System.Int32)</sig></member><member name="JoinWithNext" visibility="public" scope="instance" brief="Joins the line with the next one." key="JoinWithNext.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>The next line will be added to the end of the line.</p></body><return /><param name="lineIndex" gray="false"><body><p>The line index.</p></body></param><declaration language="cs" name="JoinWithNext" prefix="" suffix="" name-suffix="" return="void" params="int lineIndex" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.JoinWithNext(System.Int32)</sig></member><member name="JoinWithNext" visibility="public" scope="instance" brief="Join the line with the next line at the position specified." key="JoinWithNext.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>In case the position is bigger than the line length, the line will be extended to the specified position and then
the next line will be appended. if the position specified is less than the line length, the next line will be
appended to the end of the line specified.</p></body><return /><param name="lineIndex" gray="false"><body><p>The index of the line.</p></body></param><param name="position" gray="false"><body><p>The index of the position.</p></body></param><declaration language="cs" name="JoinWithNext" prefix="" suffix="" name-suffix="" return="void" params="int lineIndex, int position" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.JoinWithNext(System.Int32,System.Int32)</sig></member><member name="ExpandTabsInRange" visibility="public" scope="instance" brief="Expands the tabulation characters inside the range specified." key="ExpandTabsInRange.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="startPosition" gray="false"><body><p>The index of the first character of the range.</p></body></param><param name="length" gray="false"><body><p>The range length.</p></body></param><declaration language="cs" name="ExpandTabsInRange" prefix="" suffix="" name-suffix="" return="int" params="int startPosition, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.ExpandTabsInRange(System.Int32,System.Int32)</sig></member><member name="TabLength" visibility="public" scope="instance" brief="Returns the next tabulation position for the position in the line." key="TabLength.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="linePosition" gray="false"><body><p>The position in the line.</p></body></param><declaration language="cs" name="TabLength" prefix="" suffix="" name-suffix="" return="int" params="int linePosition" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.TabLength(System.Int32)</sig></member><member name="ChangeEncoding" visibility="public" scope="instance" brief="Changes the text encoding." key="ChangeEncoding.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="encoding" gray="false"><body><p>The new encoding.</p></body></param><declaration language="cs" name="ChangeEncoding" prefix="" suffix="" name-suffix="" return="bool" params="System.Text.Encoding encoding" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.ChangeEncoding(System.Text.Encoding)</sig></member><member name="Load" visibility="public" scope="instance" brief="Loads the file in the specified encoding." key="Load.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="encoding" gray="false"><body><p>The encoding.</p></body></param><param name="file" gray="false"><body><p>The name of the file.</p></body></param><param name="ignoreBOM" gray="false"><body><p>The flag indicating that begin-of-file encoding mark must be ignored.</p></body></param><declaration language="cs" name="Load" prefix="" suffix="" name-suffix="" return="void" params="System.Text.Encoding encoding, string file, bool ignoreBOM" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.Load(System.Text.Encoding,System.String,System.Boolean)</sig></member><member name="Save" visibility="public" scope="instance" brief="Save the file." key="Save.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="writeBom" gray="false"><body><p>The flag indicating that begin-of-file encoding mark must be written.</p></body></param><param name="encoding" gray="false"><body><p>The encoding to save in or null to save in the default file encoding.</p></body></param><declaration language="cs" name="Save" prefix="" suffix="" name-suffix="" return="void" params="bool writeBom, Encoding encoding" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.Save(System.Boolean,System.Text.Encoding)</sig></member><member name="SaveAs" visibility="public" scope="instance" brief="Save the file under a new name." key="SaveAs.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="fileName" gray="false"><body><p>A new file name.</p></body></param><param name="encoding" gray="false"><body><p>The encoding to save in or null to save in the default file encoding.</p></body></param><param name="writeBom" gray="false"><body><p>The flag indicating that begin-of-file encoding mark must be written.</p></body></param><declaration language="cs" name="SaveAs" prefix="" suffix="" name-suffix="" return="void" params="string fileName, Encoding encoding, bool writeBom" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.SaveAs(System.String,System.Text.Encoding,System.Boolean)</sig></member><member name="Undo" visibility="public" scope="instance" brief="Undoes one previous action." key="Undo.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="Undo" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.Undo</sig></member><member name="Redo" visibility="public" scope="instance" brief="Redoes on previous action." key="Redo.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="Redo" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.Redo</sig></member><member name="BeginUndoTransaction" visibility="public" scope="instance" brief="Marks the start of the complex undo action." key="BeginUndoTransaction.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>All actions executed between calls of [c]BeginUndoTransaction[/c] and
[clink=gehtsoft.xce.text.XceFileBuffer.EndUndoTransaction.0]EndUndoTransaction()[/clink]
methods will be undone/redone as one action.</p><p>The complex undo actions can be nested. The borders of the actions to undo/redo will be determined by
the most complex completely closed action.</p></body><return /><declaration language="cs" name="BeginUndoTransaction" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.BeginUndoTransaction</sig></member><member name="EndUndoTransaction" visibility="public" scope="instance" brief="Marks the end of the complex undo action." key="EndUndoTransaction.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="EndUndoTransaction" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.EndUndoTransaction</sig></member><member name="EnableUndo" visibility="public" scope="instance" brief="Enables or disabled undo/redo support on the buffer." key="EnableUndo.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="enable" gray="false"><body><p>Specify true to enable undo support and false to disable undo support.</p></body></param><declaration language="cs" name="EnableUndo" prefix="" suffix="" name-suffix="" return="void" params="bool enable" custom="" /><sig>M:gehtsoft.xce.text.XceFileBuffer.EnableUndo(System.Boolean)</sig></member><member name="Length" visibility="public" scope="instance" brief="Returns number of the characters in the buffer." key="Length.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="Length" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.Length</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the character code by its position." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the character.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="char" params="int index" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.Item(System.Int32)</sig></member><member name="LinesCount" visibility="public" scope="instance" brief="Returns the number of the lines in the buffer." key="LinesCount.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="LinesCount" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.LinesCount</sig></member><member name="ExpandTabs" visibility="public" scope="instance" brief="Gets or sets &quot;expand tab&quot; mode." key="ExpandTabs.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><body><p>If the flag is true any tabulation character will be expanded into spaces.</p><p>For the current version of the XCE.NET this flag must ALWAYS be [c]true[/c].</p></body><return /><declaration language="cs" name="ExpandTabs" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.ExpandTabs</sig></member><member name="TabSize" visibility="public" scope="instance" brief="Get or sets the size of the tabulation." key="TabSize.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="TabSize" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.TabSize</sig></member><member name="TrimSpace" visibility="public" scope="instance" brief="Gets or sets the flag which forces trimming whitespaces at the end of the lines when saving." key="TrimSpace.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="TrimSpace" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.TrimSpace</sig></member><member name="EolMode" visibility="public" scope="instance" brief="Gets or sets the end of line mode." key="EolMode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="EolMode" prefix="" suffix=" get; set;" name-suffix="" return="[clink=gehtsoft.xce.text.XceFileBufferEndOfLine]XceFileBufferEndOfLine[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.EolMode</sig></member><member name="Encoding" visibility="public" scope="instance" brief="Gets the encoding." key="Encoding.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="Encoding" prefix="" suffix=" get;" name-suffix="" return="System.Text.Encoding" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.Encoding</sig></member><member name="FileName" visibility="public" scope="instance" brief="Gets the file name." key="FileName.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="FileName" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.FileName</sig></member><member name="CanUndo" visibility="public" scope="instance" brief="Gets the flag indicating that Undo is possible." key="CanUndo.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="CanUndo" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.CanUndo</sig></member><member name="CanRedo" visibility="public" scope="instance" brief="Gets the flag indicating that Redo is possible." key="CanRedo.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="CanRedo" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.CanRedo</sig></member><member name="AtSavePoint" visibility="public" scope="instance" brief="Gets or sets the save point flag." key="AtSavePoint.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="AtSavePoint" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.AtSavePoint</sig></member><member name="Markers" visibility="public" scope="instance" brief="Gets the markers." key="Markers.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="Markers" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.text.XceFileBufferMarkers]XceFileBufferMarkers[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.Markers</sig></member><member name="OnChanged" visibility="public" scope="instance" brief="The event sent when the text was changed." key="OnChanged.0" type="method" transform="def" custom="event" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="OnChanged" prefix="event" suffix="" name-suffix="" return="void" params="XceFileBuffer sender, int position, bool major" custom="" /><sig>E:gehtsoft.xce.text.XceFileBuffer.OnChanged</sig></member><member name="LastChange" visibility="public" scope="instance" brief="Gets date and time expressed in DateTime ticks when the buffer has been changed the last time." key="LastChange.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBuffer" class-name="XceFileBuffer" exclude-from-list="false"><return /><declaration language="cs" name="LastChange" prefix="" suffix=" get;" name-suffix="" return="long" params="" custom="" /><sig>P:gehtsoft.xce.text.XceFileBuffer.LastChange</sig></member><parent>System.IDisposable</parent></class><class name="XceFileBufferEndOfLine" sig="T:gehtsoft.xce.text.XceFileBufferEndOfLine" key="gehtsoft.xce.text.XceFileBufferEndOfLine" brief="The end of line processing modes enumeration." type="enum" prefix="" in-group="gehtsoft.xce.text" decl-name="XceFileBufferEndOfLine" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.text.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.text]gehtsoft.xce.text[/clink].</p></body><member name="eCr" visibility="public" scope="class" brief="The line is ended by carriage return (0x0d)" key="eCr.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBufferEndOfLine" class-name="XceFileBufferEndOfLine" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.text.XceFileBufferEndOfLine.eCr</sig></member><member name="eCrLf" visibility="public" scope="class" brief="The line is ended by carriage return/line feed(0x0d, 0x0a)." key="eCrLf.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBufferEndOfLine" class-name="XceFileBufferEndOfLine" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.text.XceFileBufferEndOfLine.eCrLf</sig></member></class><class name="XceFileBufferMarkers" sig="T:gehtsoft.xce.text.XceFileBufferMarkers" key="gehtsoft.xce.text.XceFileBufferMarkers" brief="The position markers in the buffer." type="class" prefix="" in-group="gehtsoft.xce.text" decl-name="XceFileBufferMarkers" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.text.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.text]gehtsoft.xce.text[/clink].</p></body><member name="Item" visibility="public" scope="instance" brief="Gets or sets the index of the character." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBufferMarkers" class-name="XceFileBufferMarkers" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the position marker.</p><p>The index of the position market must be between 0 and 14.</p><p>The index of the markers are reserved for:</p><table width=""><table-row is-header="false"><table-col width=""><body><p>0-9</p></body></table-col><table-col width=""><body><p>the user bookmarks</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>10</p></body></table-col><table-col width=""><body><p>the cursor position</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>11</p></body></table-col><table-col width=""><body><p>the first character of the currently selected block.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>12</p></body></table-col><table-col width=""><body><p>the last of the currently selected block.</p></body></table-col></table-row><table-row is-header="false"><table-col width=""><body><p>13-14</p></body></table-col><table-col width=""><body><p>reserved to temporarily saving of the position by scripts and commands.</p></body></table-col></table-row></table></body></param><declaration language="cs" name="this" prefix="" suffix=" get; set;" name-suffix="" return="int" params="int index" custom="" /><sig>P:gehtsoft.xce.text.XceFileBufferMarkers.Item(System.Int32)</sig></member></class><class name="XceFileBufferRegex" sig="T:gehtsoft.xce.text.XceFileBufferRegex" key="gehtsoft.xce.text.XceFileBufferRegex" brief="The extension of the colorer regular expression class to be used to match the text buffer." type="class" prefix="" in-group="gehtsoft.xce.text" decl-name="XceFileBufferRegex" sort="true" class-name-in-key="true" transform="def"><body><p>An instance of the class MUST be disposed after usage.</p><p>The type defined in the [c]gehtsoft.xce.text.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.text]gehtsoft.xce.text[/clink].</p></body><member name="XceFileBufferRegex" visibility="public" scope="instance" brief="Constructor." key="XceFileBufferRegex.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBufferRegex" class-name="XceFileBufferRegex" exclude-from-list="false"><return /><param name="regularExpression" gray="false"><body><p>The regular expression.</p><p>See the [link=gehtsoft.xce.colorer.RegexSyntax]regular expression syntax[/link].</p></body></param><declaration language="cs" name="XceFileBufferRegex" prefix="" suffix="" name-suffix="" return="" params="string regularExpression" custom="" /><sig>M:gehtsoft.xce.text.XceFileBufferRegex.#ctor(System.String)</sig></member><member name="Match" visibility="public" scope="instance" brief="Matches the text buffer." key="Match.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.text.XceFileBufferRegex" class-name="XceFileBufferRegex" exclude-from-list="false"><return /><param name="buffer" gray="false"><body><p>The text buffer to be matched.</p></body></param><param name="startIndex" gray="false"><body><p>The index of the first character in the buffer to be matched.</p></body></param><param name="length" gray="false"><body><p>The length of the data to be matched.</p></body></param><declaration language="cs" name="Match" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.text.XceFileBuffer]XceFileBuffer[/clink] buffer, int startIndex, int length" custom="" /><sig>M:gehtsoft.xce.text.XceFileBufferRegex.Match(gehtsoft.xce.text.XceFileBuffer,System.Int32,System.Int32)</sig></member><parent>[clink=gehtsoft.xce.colorer.Regex]gehtsoft.xce.colorer.Regex[/clink]</parent></class><group title="gehtsoft.xce.configuration" key="gehtsoft.xce.configuration" brief="Configuration file reader" in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted"><body><p>The configuration file (profile) is just a regular [c].ini[/c] file. The file contains sections, the section
is started with the section name enclosed into square brackets. The section can contain the comments started with semicolon and
key/value pairs.</p><p>The example of the profile is shown below:</p><example title="Profile Example" transform="def" show="yes" gray="yes"><body><p>[section1]
;comment
key1=value1
key1=another occurrence of the key
key2=value2
[section2]
key1=value1
...</p></body></example></body></group><class name="Profile" sig="T:gehtsoft.xce.configuration.Profile" key="gehtsoft.xce.configuration.Profile" brief="Configuration file." type="class" prefix="" in-group="gehtsoft.xce.configuration" decl-name="Profile" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.configuration.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.configuration]gehtsoft.xce.configuration[/clink].</p></body><member name="GetEnumerator" visibility="public" scope="instance" brief="Gets section enumerator." key="GetEnumerator.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><declaration language="cs" name="GetEnumerator" prefix="" suffix="" name-suffix="" return="System.Collections.Generic.IEnumerator&lt;[clink=gehtsoft.xce.configuration.ProfileSection]ProfileSection[/clink]&gt;" params="" custom="" /><sig>M:gehtsoft.xce.configuration.Profile.GetEnumerator</sig></member><member name="Profile" visibility="public" scope="instance" brief="Constructor." key="Profile.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><declaration language="cs" name="Profile" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.configuration.Profile.#ctor</sig></member><member name="Load" visibility="public" scope="instance" brief="Loads the profile content." key="Load.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><param name="fileName" gray="false"><body><p>The file name.</p></body></param><declaration language="cs" name="Load" prefix="" suffix="" name-suffix="" return="void" params="string fileName" custom="" /><sig>M:gehtsoft.xce.configuration.Profile.Load(System.String)</sig></member><member name="Save" visibility="public" scope="instance" brief="Saves the profile content" key="Save.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><param name="fileName" gray="false"><body><p>The file name.</p></body></param><declaration language="cs" name="Save" prefix="" suffix="" name-suffix="" return="void" params="string fileName" custom="" /><sig>M:gehtsoft.xce.configuration.Profile.Save(System.String)</sig></member><member name="Count" visibility="public" scope="instance" brief="Gets the number of the sections." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the section by its index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the section to get.</p><p>The index of the first section is 0.</p><p>The first section always has no name (an empty string) and contains all the lines
which exist in the profile before the first section is declared.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.configuration.ProfileSection]ProfileSection[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Item(System.Int32)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the section by its name." key="Item.1" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the section.</p><p>The section name is case insensitive.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.configuration.ProfileSection]ProfileSection[/clink]" params="string name" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Item(System.String)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets/Sets the value of the first key occurrence in the section specified." key="Item.2" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><body><p>Get value: if there is no such key or section, the [c]null[/c] value is returned.</p><p>Set value: if there is no such key or section, the section and/or value will be created.</p></body><return /><param name="section" gray="false"><body><p>The name of the section.</p><p>The section name is case insensitive.</p></body></param><param name="key" gray="false"><body><p>The name of the key.</p><p>The key name is case insensitive.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get; set;" name-suffix="" return="string" params="string section, string key" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Item(System.String,System.String)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the value of the first key occurrence in the section specified (with default value)." key="Item.5" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><param name="section" gray="false"><body><p>The name of the section.</p><p>The section name is case insensitive.</p></body></param><param name="key" gray="false"><body><p>The name of the key.</p><p>The key name is case insensitive.</p></body></param><param name="defaultValue" gray="false"><body><p>The default value to return.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="string" params="string section, string key, string defaultValue" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Item(System.String,System.String,System.String)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the value of the specified key occurrence in the section specified (with default value)." key="Item.4" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><return /><param name="section" gray="false"><body><p>The name of the section.</p><p>The section name is case insensitive.</p></body></param><param name="key" gray="false"><body><p>The name of the key.</p><p>The key name is case insensitive.</p></body></param><param name="occurrence" gray="false"><body><p>The index of the occurrence. The first occurrence has index 0.</p></body></param><param name="defaultValue" gray="false"><body><p>The default value to return.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="string" params="string section, string key, int occurrence, string defaultValue" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Item(System.String,System.String,System.Int32,System.String)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets/Sets the value of the specified key key occurrence in the section specified." key="Item.3" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.Profile" class-name="Profile" exclude-from-list="false"><body><p>Get value: If the section or the specified key occurrence does not exist, the method returns [c]null[/c].</p><p>Set value: If the section does not exist and occurrence is 0, or if the occurrence would be next occurrence after the last existing occurrence
(0 in case no such keys exists, 1 if one such key exists and so on), a new section and/or key is created. If occurrence has a bigger value,
the exception will be thrown.</p></body><return /><param name="section" gray="false"><body><p>The name of the section.</p><p>The section name is case insensitive.</p></body></param><param name="key" gray="false"><body><p>The name of the key.</p><p>The key name is case insensitive.</p></body></param><param name="occurrence" gray="false"><body><p>The index of the occurrence. The first occurrence has index 0.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get; set;" name-suffix="" return="string" params="string section, string key, int occurrence" custom="" /><sig>P:gehtsoft.xce.configuration.Profile.Item(System.String,System.String,System.Int32)</sig></member><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.configuration.ProfileSection]ProfileSection[/clink]&gt;</parent></class><class name="ProfileKey" sig="T:gehtsoft.xce.configuration.ProfileKey" key="gehtsoft.xce.configuration.ProfileKey" brief="One key in the profile section." type="class" prefix="" in-group="gehtsoft.xce.configuration" decl-name="ProfileKey" sort="true" class-name-in-key="true" transform="def"><body><p>The instance of this class represents a key/value pair or just a line inside the section (such as a comment).</p><p>The type defined in the [c]gehtsoft.xce.configuration.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.configuration]gehtsoft.xce.configuration[/clink].</p></body><member name="Name" visibility="public" scope="instance" brief="Gets the name of the key." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileKey" class-name="ProfileKey" exclude-from-list="false"><body><p>If key is not the key/value pair the name is an empty line.</p><p>The key name for key/value pair is always trimmed (the whitespace characters at the beginning of the name
and at the end of the name are removed).</p></body><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileKey.Name</sig></member><member name="Value" visibility="public" scope="instance" brief="Gets or sets the value of the key/value pair or the content of the non-key line." key="Value.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileKey" class-name="ProfileKey" exclude-from-list="false"><return /><declaration language="cs" name="Value" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileKey.Value</sig></member><member name="IsKey" visibility="public" scope="instance" brief="Checks whether the line is a key/value pair." key="IsKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileKey" class-name="ProfileKey" exclude-from-list="false"><return /><declaration language="cs" name="IsKey" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileKey.IsKey</sig></member></class><class name="ProfileSection" sig="T:gehtsoft.xce.configuration.ProfileSection" key="gehtsoft.xce.configuration.ProfileSection" brief="The section of the profile." type="class" prefix="" in-group="gehtsoft.xce.configuration" decl-name="ProfileSection" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.configuration.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.configuration]gehtsoft.xce.configuration[/clink].</p></body><member name="Add" visibility="public" scope="instance" brief="Adds a new key into the section." key="Add.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p></body></param><param name="value" gray="false"><body><p>The value.</p></body></param><declaration language="cs" name="Add" prefix="" suffix="" name-suffix="" return="void" params="string name, string value" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.Add(System.String,System.String)</sig></member><member name="Remove" visibility="public" scope="instance" brief="Removes a key by its index." key="Remove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the key inside the section.</p><p>The first key has index 0.</p></body></param><declaration language="cs" name="Remove" prefix="" suffix="" name-suffix="" return="void" params="int index" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.Remove(System.Int32)</sig></member><member name="Remove" visibility="public" scope="instance" brief="Removes the specified occurrence of the key." key="Remove.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><param name="occurrence" gray="false"><body><p>The occurrence of the key in the section.</p><p>The first occurrence has index 0.</p></body></param><declaration language="cs" name="Remove" prefix="" suffix="" name-suffix="" return="void" params="string name, int occurrence" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.Remove(System.String,System.Int32)</sig></member><member name="Remove" visibility="public" scope="instance" brief="Removes the first occurrence of the key." key="Remove.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><declaration language="cs" name="Remove" prefix="" suffix="" name-suffix="" return="void" params="string name" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.Remove(System.String)</sig></member><member name="Exists" visibility="public" scope="instance" brief="Checks whether the key exists." key="Exists.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><declaration language="cs" name="Exists" prefix="" suffix="" name-suffix="" return="bool" params="string name" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.Exists(System.String)</sig></member><member name="CountOf" visibility="public" scope="instance" brief="Counts occurrences of the key." key="CountOf.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><declaration language="cs" name="CountOf" prefix="" suffix="" name-suffix="" return="int" params="string name" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.CountOf(System.String)</sig></member><member name="Clear" visibility="public" scope="instance" brief="Removes all keys." key="Clear.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><declaration language="cs" name="Clear" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.Clear</sig></member><member name="GetEnumerator" visibility="public" scope="instance" brief="Gets enumerator of the keys." key="GetEnumerator.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><declaration language="cs" name="GetEnumerator" prefix="" suffix="" name-suffix="" return="System.Collections.Generic.IEnumerator&lt;[clink=gehtsoft.xce.configuration.ProfileKey]ProfileKey[/clink]&gt;" params="" custom="" /><sig>M:gehtsoft.xce.configuration.ProfileSection.GetEnumerator</sig></member><member name="Count" visibility="public" scope="instance" brief="Returns the number of the keys in the section." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Count</sig></member><member name="Name" visibility="public" scope="instance" brief="Gets the name of the section." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Name</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the key by its index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the key. The first key has index 0.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.configuration.ProfileKey]ProfileKey[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Item(System.Int32)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets/sets the value of the first occurrence of the key." key="Item.1" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><body><p>Get value: If the key does not exist, the [c]null[/c] is returned.</p><p>Set value: If the key does not exist, a new key is created.</p></body><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get; set;" name-suffix="" return="string" params="string name" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Item(System.String)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets/sets the value of the specified occurrence of the key." key="Item.2" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><body><p>Get value: If the key does not exist, the [c]null[/c] is returned.</p><p>Set value: If the key does not exist and the occurrence is equal to the number of keys exist (0 if there is no such keys,
1 if there is one such key and so on), a new key is created. Otherwise, an exception will be thrown.</p></body><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><param name="occurrence" gray="false"><body><p>The index of the occurrence.</p><p>The first occurrence has index 0.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get; set;" name-suffix="" return="string" params="string name, int occurrence" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Item(System.String,System.Int32)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the value of the first occurrence of the key (with default value)." key="Item.4" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><param name="defaultValue" gray="false"><body><p>The value to return if there is no such key.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="string" params="string name, string defaultValue" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Item(System.String,System.String)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the value of the specified occurrence of the key (with default value)." key="Item.3" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.configuration.ProfileSection" class-name="ProfileSection" exclude-from-list="false"><return /><param name="name" gray="false"><body><p>The name of the key.</p><p>The name of the key is case insensitive.</p></body></param><param name="occurrence" gray="false"><body><p>The index of the occurrence.</p><p>The first occurrence has index 0.</p></body></param><param name="defaultValue" gray="false"><body><p>The value to return if there is no such key.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="string" params="string name, int occurrence, string defaultValue" custom="" /><sig>P:gehtsoft.xce.configuration.ProfileSection.Item(System.String,System.Int32,System.String)</sig></member><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.configuration.ProfileKey]ProfileKey[/clink]&gt;</parent></class><group title="gehtsoft.xce.spellcheck" key="gehtsoft.xce.spellcheck" brief="The interface to external spellchecker." in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted" /><article title="Implementing spellcheker." key="gehtsoft.xce.spellcheck.implementing" in-group="gehtsoft.xce.spellcheck" brief="" transform="def" alias-id="null" exclude-from-list="false" briefless="true"><body><p>The XCE editor is designed to use the external spellchecking modules.
The spellchecker must be implemented as a separate assembly.</p><p>You must implement the following interfaces:</p><p>[b][clink=gehtsoft.xce.spellcheck.ISpellcheckerSuggestions]ISpellcheckerSuggestions[/clink][/b]</p><p>The interface is the simple read-only collection of the strings, designed to provide the information
about spell suggestions.</p><p>[b][clink=gehtsoft.xce.spellcheck.ISpellchecker]ISpellchecker[/clink][/b]</p><p>The implementation of the spellchecker. Each instance of the spellchecks is initialized to be used with
certain dictionary.</p><p>[b][clink=gehtsoft.xce.spellcheck.ISpellcheckerFactory]ISpellcheckerFactory[/clink][/b]</p><p>The factory of the spellcheckers. The implementation of this interface will be used to create
instance of the [clink=gehtsoft.xce.spellcheck.ISpellchecker]ISpellchecker[/clink] interface implemented
by the spellchecker.</p><p>The implementation of this class must be public in your spellchecker assembly.</p></body></article><article title="Existing implementations" key="gehtsoft.xce.spellcheck.implemented" in-group="gehtsoft.xce.spellcheck" brief="" transform="def" alias-id="null" exclude-from-list="false" briefless="true"><body><p>The following spell check implementations available:</p><p>Assembly: gehtsoft.xce.spellcheck.hunspell.dll</p><p>Factory class name: gehtsoft.xce.spellcheck.hunspell.HunspellFactory</p><p>The speller implementation: [eurl=http://hunspell.sourceforge.net/]Hunspell[/eurl]</p><p>The dictionaries included: en_US (English) and ru_RU (Russian).</p></body></article><class name="ISpellchecker" sig="T:gehtsoft.xce.spellcheck.ISpellchecker" key="gehtsoft.xce.spellcheck.ISpellchecker" brief="The interface to the spellchecker" type="interface" prefix="" in-group="gehtsoft.xce.spellcheck" decl-name="ISpellchecker" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.spellcheck.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.spellcheck]gehtsoft.xce.spellcheck[/clink].</p></body><member name="Spellcheck" visibility="public" scope="instance" brief="Checks the spelling of the word specified (string)." key="Spellcheck.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellchecker" class-name="ISpellchecker" exclude-from-list="false"><return /><param name="word" gray="false"><body><p>The word to check.</p></body></param><declaration language="cs" name="Spellcheck" prefix="" suffix="" name-suffix="" return="bool" params="string word" custom="" /><sig>M:gehtsoft.xce.spellcheck.ISpellchecker.Spellcheck(System.String)</sig></member><member name="Spellcheck" visibility="public" scope="instance" brief="Checks the spelling of the word specified (char array)." key="Spellcheck.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellchecker" class-name="ISpellchecker" exclude-from-list="false"><return /><param name="buffer" gray="false"><body><p>The buffer containing the word.</p></body></param><param name="from" gray="false"><body><p>The index of the first char of the word.</p></body></param><param name="length" gray="false"><body><p>The length of the word in characters.</p></body></param><declaration language="cs" name="Spellcheck" prefix="" suffix="" name-suffix="" return="bool" params="char[] buffer, int from, int length" custom="" /><sig>M:gehtsoft.xce.spellcheck.ISpellchecker.Spellcheck(System.Char[],System.Int32,System.Int32)</sig></member><member name="Suggest" visibility="public" scope="instance" brief="Make spelling suggestions for a word (string)." key="Suggest.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellchecker" class-name="ISpellchecker" exclude-from-list="false"><return /><param name="word" gray="false"><body><p>The word to find the spell suggestions.</p></body></param><declaration language="cs" name="Suggest" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.spellcheck.ISpellcheckerSuggestions]ISpellcheckerSuggestions[/clink]" params="string word" custom="" /><sig>M:gehtsoft.xce.spellcheck.ISpellchecker.Suggest(System.String)</sig></member><member name="Suggest" visibility="public" scope="instance" brief="Make spelling suggestions for a word (char array)." key="Suggest.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellchecker" class-name="ISpellchecker" exclude-from-list="false"><return /><param name="buffer" gray="false"><body><p>The buffer containing the word.</p></body></param><param name="from" gray="false"><body><p>The index of the first char of the word.</p></body></param><param name="length" gray="false"><body><p>The length of the word in characters.</p></body></param><declaration language="cs" name="Suggest" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.spellcheck.ISpellcheckerSuggestions]ISpellcheckerSuggestions[/clink]" params="char[] buffer, int from, int length" custom="" /><sig>M:gehtsoft.xce.spellcheck.ISpellchecker.Suggest(System.Char[],System.Int32,System.Int32)</sig></member><member name="Name" visibility="public" scope="instance" brief="The name of the spellchecker." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellchecker" class-name="ISpellchecker" exclude-from-list="false"><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.spellcheck.ISpellchecker.Name</sig></member></class><class name="ISpellcheckerFactory" sig="T:gehtsoft.xce.spellcheck.ISpellcheckerFactory" key="gehtsoft.xce.spellcheck.ISpellcheckerFactory" brief="The interface to the spellchecker factory." type="interface" prefix="" in-group="gehtsoft.xce.spellcheck" decl-name="ISpellcheckerFactory" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.spellcheck.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.spellcheck]gehtsoft.xce.spellcheck[/clink].</p></body><member name="CreateInstance" visibility="public" scope="instance" brief="Create an instance of the spellchecker." key="CreateInstance.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellcheckerFactory" class-name="ISpellcheckerFactory" exclude-from-list="false"><return /><param name="dictionaryPath" gray="false"><body><p>The path of the folder where dictionaries are located.</p></body></param><param name="dictionary" gray="false"><body><p>The main dictionary file.</p></body></param><param name="customDictionary" gray="false"><body><p>The custom words dictionary file.</p></body></param><declaration language="cs" name="CreateInstance" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.spellcheck.ISpellchecker]ISpellchecker[/clink]" params="string dictionaryPath, string dictionary, string customDictionary" custom="" /><sig>M:gehtsoft.xce.spellcheck.ISpellcheckerFactory.CreateInstance(System.String,System.String,System.String)</sig></member><parent>System.IDisposable</parent></class><class name="ISpellcheckerSuggestions" sig="T:gehtsoft.xce.spellcheck.ISpellcheckerSuggestions" key="gehtsoft.xce.spellcheck.ISpellcheckerSuggestions" brief="The list of the suggestions." type="interface" prefix="" in-group="gehtsoft.xce.spellcheck" decl-name="ISpellcheckerSuggestions" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.spellcheck.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.spellcheck]gehtsoft.xce.spellcheck[/clink].</p></body><member name="Count" visibility="public" scope="instance" brief="Gets the number of the suggestions in the list." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellcheckerSuggestions" class-name="ISpellcheckerSuggestions" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.spellcheck.ISpellcheckerSuggestions.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the suggestion by its index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.ISpellcheckerSuggestions" class-name="ISpellcheckerSuggestions" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The index of the suggestion. The first suggestion has index 0.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="string" params="int index" custom="" /><sig>P:gehtsoft.xce.spellcheck.ISpellcheckerSuggestions.Item(System.Int32)</sig></member><parent>System.Collections.Generic.IEnumerable&lt;string&gt;</parent></class><class name="SpellcheckerFactoryLoader" sig="T:gehtsoft.xce.spellcheck.SpellcheckerFactoryLoader" key="gehtsoft.xce.spellcheck.SpellcheckerFactoryLoader" brief="Spellchecker factory loader." type="class" prefix="" in-group="gehtsoft.xce.spellcheck" decl-name="SpellcheckerFactoryLoader" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.spellcheck.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.spellcheck]gehtsoft.xce.spellcheck[/clink].</p></body><member name="LoadFactory" visibility="public" scope="class" brief="Loads the speller factory." key="LoadFactory.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.SpellcheckerFactoryLoader" class-name="SpellcheckerFactoryLoader" exclude-from-list="false"><return /><param name="assembly" gray="false"><body><p>The assembly containing the spellchecker implementation.</p></body></param><param name="classname" gray="false"><body><p>The spellchecker factory implementation class name.</p><p>The class must implement [clink=gehtsoft.xce.spellcheck.ISpellcheckerFactory]ISpellcheckerFactory[/clink] interface and
must be public.</p></body></param><declaration language="cs" name="LoadFactory" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.spellcheck.ISpellcheckerFactory]ISpellcheckerFactory[/clink]" params="string assembly, string classname" custom="" /><sig>M:gehtsoft.xce.spellcheck.SpellcheckerFactoryLoader.LoadFactory(System.String,System.String)</sig></member><member name="SpellcheckerFactoryLoader" visibility="public" scope="instance" brief="" key="SpellcheckerFactoryLoader.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.spellcheck.SpellcheckerFactoryLoader" class-name="SpellcheckerFactoryLoader" exclude-from-list="false"><return /><declaration language="cs" name="SpellcheckerFactoryLoader" prefix="" suffix="" name-suffix="" return="" params="" custom="" /><sig>M:gehtsoft.xce.spellcheck.SpellcheckerFactoryLoader.#ctor</sig></member></class><class name="Application" sig="T:gehtsoft.xce.editor.application.Application" key="gehtsoft.xce.editor.application.Application" brief="Main application class" type="class" prefix="" in-group="gehtsoft.xce.editor.application" decl-name="Application" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.application]gehtsoft.xce.editor.application[/clink].</p></body><member name="PostQuitMessage" visibility="public" scope="instance" brief="Forces exiting from the application." key="PostQuitMessage.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><body><p>Please note that execution of this method closes the editor without checking
that any files aren't saved yet. To close the editor with proper checking, please
use an appropriate command.</p></body><return /><declaration language="cs" name="PostQuitMessage" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.PostQuitMessage</sig></member><member name="ShowMessage" visibility="public" scope="instance" brief="Shows a message box." key="ShowMessage.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><param name="message" gray="false"><body><p>Message.</p></body></param><param name="title" gray="false"><body><p>Title of the message box.</p></body></param><declaration language="cs" name="ShowMessage" prefix="" suffix="" name-suffix="" return="void" params="string message, string title" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.ShowMessage(System.String,System.String)</sig></member><member name="OpenFile" visibility="public" scope="instance" brief="Opens a new file." key="OpenFile.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return><body><p>The method returns an instance of the new text window.</p></body></return><param name="fileName" gray="false"><body><p>Name of the file to be opened.</p></body></param><declaration language="cs" name="OpenFile" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink]" params="string fileName" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.OpenFile(System.String)</sig></member><member name="CloseWindow" visibility="public" scope="instance" brief="Closes the window specified." key="CloseWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><body><p>Please note that the method closes the window even if the window content is not saved. To close
a window with a proper check, please use an appropriate command.</p></body><return /><param name="w" gray="false"><body><p>The instance of the window to be closed.</p></body></param><declaration language="cs" name="CloseWindow" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink] w" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.CloseWindow(gehtsoft.xce.editor.textwindow.TextWindow)</sig></member><member name="ActivateWindow" visibility="public" scope="instance" brief="Activates the window specified." key="ActivateWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><param name="w" gray="false"><body><p>The instance of the window to be activated.</p></body></param><declaration language="cs" name="ActivateWindow" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink] w" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.ActivateWindow(gehtsoft.xce.editor.textwindow.TextWindow)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the console window manager." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="gehtsoft.xce.conio.win.WindowManager" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.WindowManager</sig></member><member name="ColorScheme" visibility="public" scope="instance" brief="Gets the editor color scheme." key="ColorScheme.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="ColorScheme" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.configuration.XceColorScheme]gehtsoft.xce.editor.configuration.XceColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.ColorScheme</sig></member><member name="ApplicationPath" visibility="public" scope="instance" brief="Gets the path of the application." key="ApplicationPath.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="ApplicationPath" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.ApplicationPath</sig></member><member name="Configuration" visibility="public" scope="instance" brief="Gets the configuration object." key="Configuration.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="Configuration" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.configuration.XceConfiguration]gehtsoft.xce.editor.configuration.XceConfiguration[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.Configuration</sig></member><member name="ColorerFactory" visibility="public" scope="instance" brief="Gets the colorer factory." key="ColorerFactory.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="ColorerFactory" prefix="" suffix=" get;" name-suffix="" return="gehtsoft.xce.colorer.ColorerFactory" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.ColorerFactory</sig></member><member name="Commands" visibility="public" scope="instance" brief="Gets the command collection." key="Commands.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="Commands" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.command.EditorCommandCollection]gehtsoft.xce.editor.command.EditorCommandCollection[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.Commands</sig></member><member name="ActiveWindow" visibility="public" scope="instance" brief="Gets the currently active window." key="ActiveWindow.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="ActiveWindow" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.ActiveWindow</sig></member><member name="TextWindows" visibility="public" scope="instance" brief="Gets a collection of all windows opened." key="TextWindows.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="TextWindows" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.textwindow.TextWindowCollection]gehtsoft.xce.editor.textwindow.TextWindowCollection[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.application.Application.TextWindows</sig></member><member name="AfterOpenWindowEvent" visibility="public" scope="instance" brief="Event fired right after a new window has been opened." key="AfterOpenWindowEvent.0" type="method" transform="def" custom="event" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><param name="w" gray="false"><body><p>The window opened.</p></body></param><declaration language="cs" name="AfterOpenWindowEvent" prefix="event" suffix="" name-suffix="" return="AfterOpenWindowHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.AfterOpenWindowHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink] w" custom="" /><sig>E:gehtsoft.xce.editor.application.Application.AfterOpenWindowEvent</sig></member><member name="BeforeCloseWindowEvent" visibility="public" scope="instance" brief="Event fired right before a window is closed." key="BeforeCloseWindowEvent.0" type="method" transform="def" custom="event" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><param name="w" gray="false"><body><p>The window to be closed.</p></body></param><declaration language="cs" name="BeforeCloseWindowEvent" prefix="event" suffix="" name-suffix="" return="BeforeCloseWindowHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.BeforeCloseWindowHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink] w" custom="" /><sig>E:gehtsoft.xce.editor.application.Application.BeforeCloseWindowEvent</sig></member><member name="TimerEvent" visibility="public" scope="instance" brief="Event is fired every 250 milliseconds while the editor is in the idle state." key="TimerEvent.0" type="method" transform="def" custom="event" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="TimerEvent" prefix="event" suffix="" name-suffix="" return="TimerHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.TimerHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="" custom="" /><sig>E:gehtsoft.xce.editor.application.Application.TimerEvent</sig></member><member name="KeyPressedEvent" visibility="public" scope="instance" brief="Event is fired when a key is pressed in the active editor window." key="KeyPressedEvent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="handled" gray="false"><body><p>The input/output parameter.</p><p>If the value is [c]true[/c] the key is already handled.</p><p>The event handler must put [c]true[/c] into this parameter in case the
key is handled and shall not be processed by other handlers or the editor.</p></body></param><declaration language="cs" name="KeyPressedEvent" prefix="event" suffix="" name-suffix="" return="KeyPressedHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.KeyPressedHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt, ref bool handled" custom="" /><sig>E:gehtsoft.xce.editor.application.Application.KeyPressedEvent</sig></member><member name="IdleEvent" visibility="public" scope="instance" brief="The event is fired when the editor is in the idle state (waits for the user input)." key="IdleEvent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><body><p>The extensions can use this event to handle background task without creating threads.</p></body><return /><declaration language="cs" name="IdleEvent" prefix="event" suffix="" name-suffix="" return="IdleHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.IdleHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="" custom="" /><sig>E:gehtsoft.xce.editor.application.Application.IdleEvent</sig></member><member name="ShowYesNoMessage" visibility="public" scope="instance" brief="Shows Yes/No message prompt." key="ShowYesNoMessage.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return><body><p>The method returns [c]true[/c] in case Yes answer is chosen.</p></body></return><param name="message" gray="false"><body><p>The message to show.</p></body></param><param name="title" gray="false"><body><p>The message title.</p></body></param><declaration language="cs" name="ShowYesNoMessage" prefix="" suffix="" name-suffix="" return="bool" params="string message, string title" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.ShowYesNoMessage(System.String,System.String)</sig></member><member name="ShowMainMenu" visibility="public" scope="instance" brief="The method shows the main editor menu and waits for the command chosen." key="ShowMainMenu.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="ShowMainMenu" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.ShowMainMenu</sig></member><member name="repaint" visibility="public" scope="instance" brief="Forces repainting of the editor window." key="repaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.Application" class-name="Application" exclude-from-list="false"><return /><declaration language="cs" name="repaint" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.application.Application.repaint</sig></member></class><group title="gehtsoft.xce.editor.application" key="gehtsoft.xce.editor.application" brief="Application-level classes" in-group="gehtsoft.xce.editor" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted" /><class name="IEditorExtension" sig="T:gehtsoft.xce.editor.application.IEditorExtension" key="gehtsoft.xce.editor.application.IEditorExtension" brief="An interface to the editor extension." type="interface" prefix="" in-group="gehtsoft.xce.editor.application" decl-name="IEditorExtension" sort="true" class-name-in-key="true" transform="def"><body><p>[b]Implementing extension[/b].</p><p>Each extension must be compiled as x86 assembly, must contain a class implementing [c]IEditorExtension[/c] interface and
the name of the assembly must be the same as the full name of that class.</p><p>To be executed, the assembly must be placed into XCE folder. Then a key with name extension must be added into the common section
of the configuration. The value of the key must be equal to the name of the assembly without the filename extension ([c].dll[/c]). More than
one such keys may be added into the configuration.</p><p>[b]Extension initialization[/b]</p><p>When the assembly is loaded, the [clink=gehtsoft.xce.editor.application.IEditorExtension.Initialize.0]Initialize()[/clink] method of the
extension class will be executed.</p><p>At this moment the extension can:</p><list type="dot"><list-item><body><p>Add new commands using [clink=gehtsoft.xce.editor.application.Application.Commands.0]application.Commands[/clink].[clink=gehtsoft.xce.editor.command.EditorCommandCollection.AddCommand.0]AddCommand()[/clink].
Each command must implements [clink=gehtsoft.xce.editor.command.IEditorCommand]IEditorCommand[/clink] interface.</p></body></list-item><list-item><body><p>Add handlers for editor-wide events: [clink=gehtsoft.xce.editor.application.Application.AfterOpenWindowEvent.0]application..AfterOpenWindowEvent[/clink]
and [clink=gehtsoft.xce.editor.application.Application.BeforeCloseWindowEvent.0]application.BeforeCloseWindowEvent[/clink].</p></body></list-item></list><p>[b]Disposable extensions[/b]</p><p>If the extensions needs to be disposed, implement [c]IDisposable[/c] interface in the extension class. It will be called during the editor deinitialization.</p><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.application]gehtsoft.xce.editor.application[/clink].</p></body><member name="Initialize" visibility="public" scope="instance" brief="The method called when the extension is initially loaded." key="Initialize.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.IEditorExtension" class-name="IEditorExtension" exclude-from-list="false"><return /><param name="application" gray="false"><body><p>An instance of the editor application object.</p></body></param><declaration language="cs" name="Initialize" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.editor.application.Application]Application[/clink] application" custom="" /><sig>M:gehtsoft.xce.editor.application.IEditorExtension.Initialize(gehtsoft.xce.editor.application.Application)</sig></member></class><class name="XceDialog" sig="T:gehtsoft.xce.editor.application.XceDialog" key="gehtsoft.xce.editor.application.XceDialog" brief="The editor dialog." type="class" prefix="" in-group="gehtsoft.xce.editor.application" decl-name="XceDialog" sort="true" class-name-in-key="true" transform="def"><body><p>The regular dialog which also handles "in-dialog commands" inside the editor controls.</p><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.application]gehtsoft.xce.editor.application[/clink].</p></body><member name="mApplication" visibility="protected" scope="instance" brief="The reference to the application object." key="mApplication.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.XceDialog" class-name="XceDialog" exclude-from-list="false"><return /><declaration language="cs" name="mApplication" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.editor.application.Application]Application[/clink]" params="" custom="" /><sig>F:gehtsoft.xce.editor.application.XceDialog.mApplication</sig></member><member name="XceDialog" visibility="public" scope="instance" brief="Constructor." key="XceDialog.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.XceDialog" class-name="XceDialog" exclude-from-list="false"><return /><param name="application" gray="false"><body><p>The reference to the application.</p></body></param><param name="title" gray="false"><body><p>The title of the dialog window.</p></body></param><param name="sizeable" gray="false"><body><p>The flag indicating whether the dialog window must be sizeable.</p></body></param><param name="height" gray="false"><body><p>Height of the dialog in rows (including the border).</p></body></param><param name="width" gray="false"><body><p>Width of the dialog in columns (including the border).</p></body></param><declaration language="cs" name="XceDialog" prefix="" suffix="" name-suffix="" return="" params="[clink=gehtsoft.xce.editor.application.Application]Application[/clink] application, string title, bool sizeable, int height, int width" custom="" /><sig>M:gehtsoft.xce.editor.application.XceDialog.#ctor(gehtsoft.xce.editor.application.Application,System.String,System.Boolean,System.Int32,System.Int32)</sig></member><member name="DoModal" visibility="public" scope="instance" brief="Executes the dialog." key="DoModal.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.XceDialog" class-name="XceDialog" exclude-from-list="false"><body><p>The method works exactly like [clink=gehtsoft.xce.conio.win.Dialog.DoModal.0]Dialog.DoModal()[/clink].</p></body><return /><declaration language="cs" name="DoModal" prefix="" suffix="" name-suffix="" return="int" params="" custom="" /><sig>M:gehtsoft.xce.editor.application.XceDialog.DoModal</sig></member><member name="PretranslateOnKeyPressed" visibility="public" scope="instance" brief="The method is called before handling the key pressed in the dialog or any of the dialog's controls." key="PretranslateOnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.application.XceDialog" class-name="XceDialog" exclude-from-list="false"><body><p>The default implementation checks whether the key pressed is a editor hotkey which is associated with
the command which implements [clink=gehtsoft.xce.editor.command.IDialogCommand]IDialogCommand[/clink]
interface and executes such command if it exists.</p></body><return><body><p>If the method return [c]true[/c] the key is already handled and shall not be passed
to the control or handled by the dialog.</p></body></return><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="PretranslateOnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="bool" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.editor.application.XceDialog.PretranslateOnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="DialogResultOK" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Enter." key="DialogResultOK.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultOK</sig></member><member name="DialogResultCancel" visibility="public" scope="class" brief="The default identifier to be used for the control which must be clicked when the user presses Escape." key="DialogResultCancel.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.conio.win.Dialog.DialogResultCancel</sig></member><member name="AddItem" visibility="public" scope="instance" brief="Adds a new dialog item." key="AddItem.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>You don't need to create the window objects for dialog items. The window objects will be created
automatically when the dialog is created.</p></body><return /><param name="item" gray="false"><body><p>A new dialog item.</p></body></param><declaration language="cs" name="AddItem" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItem(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="EndDialog" visibility="public" scope="instance" brief="Closes the dialog and sets the dialog result code." key="EndDialog.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="resultCode" gray="false"><body><p>The dialog result code.</p></body></param><declaration language="cs" name="EndDialog" prefix="" suffix="" name-suffix="" return="void" params="int resultCode" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.EndDialog(System.Int32)</sig></member><member name="OnItemClick" visibility="public" scope="instance" brief="The method is called when the dialog item has been clicked." key="OnItemClick.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation ends the dialog if the control with [c]Dialog.DialogResultOK[/c] or
[c]Dialog.DialogResultCancel[/c] identifier is clicked and puts the identifier of the clicked object into
the dialog result code.</p></body><return /><param name="item" gray="false"><body><p>The item clicked.</p></body></param><declaration language="cs" name="OnItemClick" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemClick(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemActivated" visibility="public" scope="instance" brief="The method is called when the dialog item got focus." key="OnItemActivated.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The activated item.</p></body></param><declaration language="cs" name="OnItemActivated" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemActivated(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnItemChanged" visibility="public" scope="instance" brief="The method is called when the content or the selection of the dialog item is changed." key="OnItemChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The default implementation does nothing.</p></body><return /><param name="item" gray="false"><body><p>The changed item.</p></body></param><declaration language="cs" name="OnItemChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnItemChanged(gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="ResultCode" visibility="public" scope="instance" brief="The result code of the dialog." key="ResultCode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The result code of the dialog can be set by [clink=gehtsoft.xce.conio.win.Dialog.EndDialog.0]Dialog.EndDialog()[/clink] method.</p></body><return /><declaration language="cs" name="ResultCode" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.ResultCode</sig></member><member name="Colors" visibility="public" scope="instance" brief="The color scheme of the dialog." key="Colors.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Colors" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.IColorScheme]IColorScheme[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Colors</sig></member><member name="Items" visibility="public" scope="instance" brief="The enumeration of the dialog items." key="Items.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><declaration language="cs" name="Items" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Dialog.Items</sig></member><member name="AddItemBefore" visibility="public" scope="instance" brief="Adds a new item before another item." key="AddItemBefore.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="item" gray="false"><body><p>The item to be added.</p></body></param><param name="next" gray="false"><body><p>The existing item to add the item before it.</p></body></param><declaration language="cs" name="AddItemBefore" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] item, [clink=gehtsoft.xce.conio.win.DialogItem]DialogItem[/clink] next" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.AddItemBefore(gehtsoft.xce.conio.win.DialogItem,gehtsoft.xce.conio.win.DialogItem)</sig></member><member name="OnOK" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultOK button." key="OnOK.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultOK[/c] identifier is clicked.
If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultOK[/c].</p></body><return /><declaration language="cs" name="OnOK" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnOK</sig></member><member name="OnCancel" visibility="public" scope="instance" brief="The method can be overridden to alternate the default behavior of the DialogResultCancel button." key="OnCancel.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>The method is called by the default implementation of the [clink=gehtsoft.xce.conio.win.Dialog.OnItemClick.0]OnItemClick()[/clink] when
a button with [c]DialogResultCancel[/c] identifier is clicked.</p><p>If the method returns [c]true[/c] the dialog will be closed and the dialog result will be [c]DialogResultCancel[/c].</p></body><return /><declaration language="cs" name="OnCancel" prefix="virtual" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.OnCancel</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the button specified in its row." key="CenterButtons.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="b1" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers two buttons specified in their row." key="CenterButtons.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers three buttons specified in their row." key="CenterButtons.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><body><p>Please note that the method do NOT validate that the buttons are located in the same row.</p></body><return /><param name="b1" gray="false" /><param name="b2" gray="false" /><param name="b3" gray="false" /><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b1, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b2, [clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink] b3" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton,gehtsoft.xce.conio.win.DialogItemButton)</sig></member><member name="CenterButtons" visibility="public" scope="instance" brief="Centers the dialog item buttons." key="CenterButtons.4" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Dialog" class-name="Dialog" exclude-from-list="false"><return /><param name="buttons" gray="false"><body><p>An array of the buttons to be centered.</p></body></param><declaration language="cs" name="CenterButtons" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.DialogItemButton]DialogItemButton[/clink][] buttons" custom="" /><sig>M:gehtsoft.xce.conio.win.Dialog.CenterButtons(gehtsoft.xce.conio.win.DialogItemButton[])</sig></member><member name="getClientArea" visibility="public" scope="instance" brief="Gets the size and coordinates of the client area." key="getClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The row of the top-left corner of the client area.</p></body></param><param name="col" gray="false"><body><p>The column of the top-left corner of the client area.</p></body></param><param name="height" gray="false"><body><p>The height of the client area in rows.</p></body></param><param name="width" gray="false"><body><p>The width of the client area in rows.</p></body></param><declaration language="cs" name="getClientArea" prefix="virtual" suffix="" name-suffix="" return="void" params="out int row, out int col, out int height, out int width" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.getClientArea(System.Int32@,System.Int32@,System.Int32@,System.Int32@)</sig></member><member name="Title" visibility="public" scope="instance" brief="The title of the window." key="Title.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><declaration language="cs" name="Title" prefix="" suffix=" get; set;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.WindowBorderContainer.Title</sig></member><member name="attachClientArea" visibility="protected" scope="instance" brief="Attaches the client area to the window." key="attachClientArea.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.WindowBorderContainer" class-name="WindowBorderContainer" exclude-from-list="false"><return /><param name="clientArea" gray="false"><body><p>The client area window.</p><p>The client area window will be created when the window is created and will
be sized to full interior size of moveable/sizeable window.</p><p>The application can use it in the same way as it uses the client area of the
window in GUI applications - to create other windows inside the borders or
to draw the content.</p></body></param><declaration language="cs" name="attachClientArea" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.win.Window]Window[/clink] clientArea" custom="" /><sig>M:gehtsoft.xce.conio.win.WindowBorderContainer.attachClientArea(gehtsoft.xce.conio.win.Window)</sig></member><member name="OnCreate" visibility="public" scope="instance" brief="The method is called as a signal that the window object is created." key="OnCreate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnCreate" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnCreate</sig></member><member name="OnClose" visibility="public" scope="instance" brief="The method is called as a signal that the window object is closed." key="OnClose.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnClose" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnClose</sig></member><member name="OnSizeChanged" visibility="public" scope="instance" brief="The method is called as a signal that the window size or position are changed." key="OnSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSizeChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSizeChanged</sig></member><member name="move" visibility="public" scope="instance" brief="Moves the window." key="move.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The new row coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="column" gray="false"><body><p>The new column coordinate of the top-level corner.</p><p>The coordinate is specified relative to the top-left corner of the parent window.</p></body></param><param name="height" gray="false"><body><p>The new height of the window in rows.</p></body></param><param name="width" gray="false"><body><p>The new width of the window in columns.</p></body></param><declaration language="cs" name="move" prefix="" suffix="" name-suffix="" return="void" params="int row, int column, int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.move(System.Int32,System.Int32,System.Int32,System.Int32)</sig></member><member name="OnShow" visibility="public" scope="instance" brief="The method is called as a signal that the window is shown or hidden." key="OnShow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>The flag indicating whether the window is visible now.</p></body></param><declaration language="cs" name="OnShow" prefix="virtual" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnShow(System.Boolean)</sig></member><member name="show" visibility="public" scope="instance" brief="Shows or hides the window." key="show.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="visible" gray="false"><body><p>Specify [c]true[/c] to show the window and [c]false[/c] to hide it.</p></body></param><declaration language="cs" name="show" prefix="" suffix="" name-suffix="" return="void" params="bool visible" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.show(System.Boolean)</sig></member><member name="invalidate" visibility="public" scope="instance" brief="Invalidate the window." key="invalidate.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>If the window is invalid, the window manager will force the redraw of the window
at the next call of the [c]pumpMessage[/c] method.</p></body><return /><declaration language="cs" name="invalidate" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.invalidate</sig></member><member name="OnPaint" visibility="public" scope="instance" brief="The method is called to redraw the content of the window." key="OnPaint.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="canvas" gray="false"><body><p>The window canvas. The size of the canvas is equal to the size of the window.</p></body></param><declaration language="cs" name="OnPaint" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnPaint(gehtsoft.xce.conio.Canvas)</sig></member><member name="parentToWindow" visibility="public" scope="instance" brief="Converts the parent coordinates into the window coordinates." key="parentToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="parentRow" gray="false"><body><p>The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>The column relative to the top-left corner of the parent window.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="parentToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int parentRow, int parentColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.parentToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToParent" visibility="public" scope="instance" brief="Converts the window coordinates into the parent window coordinates." key="windowToParent.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="parentRow" gray="false"><body><p>[output] The row relative to the top-left corner of the parent window.</p></body></param><param name="parentColumn" gray="false"><body><p>[output] The column relative to the top-left corner of the parent window.</p></body></param><declaration language="cs" name="windowToParent" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int parentRow, out int parentColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToParent(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="screenToWindow" visibility="public" scope="instance" brief="Converts the screen coordinates into the window coordinates." key="screenToWindow.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns [c]true[/c] if the position is inside the window.</p></body><return /><param name="screenRow" gray="false"><body><p>The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>The screen column.</p></body></param><param name="windowRow" gray="false"><body><p>[output] The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>[output] The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="screenToWindow" prefix="" suffix="" name-suffix="" return="bool" params="int screenRow, int screenColumn, out int windowRow, out int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.screenToWindow(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="windowToScreen" visibility="public" scope="instance" brief="Converts the window coordinates into the screen coordinates." key="windowToScreen.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="screenRow" gray="false"><body><p>[output] The screen row.</p></body></param><param name="screenColumn" gray="false"><body><p>[output] The screen column.</p></body></param><declaration language="cs" name="windowToScreen" prefix="" suffix="" name-suffix="" return="void" params="int windowRow, int windowColumn, out int screenRow, out int screenColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.windowToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@)</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the children window at the specified position." key="childFromPos.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32)</sig></member><member name="OnSetFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window got focus." key="OnSetFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnSetFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnSetFocus</sig></member><member name="OnKillFocus" visibility="public" scope="instance" brief="The method is called as a signal that the the window lost focus." key="OnKillFocus.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKillFocus" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKillFocus</sig></member><member name="OnKeyPressed" visibility="public" scope="instance" brief="The method is called when the user is pressed a key and the window has the focus." key="OnKeyPressed.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><param name="scanCode" gray="false"><body><p>Key scan code (see [clink=gehtsoft.xce.conio.ScanCode]gehtsoft.xce.conio.ScanCode[/clink] for the list of scan codes).</p></body></param><param name="character" gray="false"><body><p>The character associated with the key or 0 in case the scancode is not associated with any character.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnKeyPressed" prefix="virtual" suffix="" name-suffix="" return="void" params="int scanCode, char character, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyPressed(System.Int32,System.Char,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseMove" visibility="public" scope="instance" brief="The method is called when the mouse is moved." key="OnMouseMove.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><param name="leftButton" gray="false"><body><p>The flag indicating that the left mouse button is pressed.</p></body></param><param name="rightButton" gray="false"><body><p>The flag indicating that the right mouse button is pressed.</p></body></param><declaration language="cs" name="OnMouseMove" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt, bool leftButton, bool rightButton" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseMove(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonDown" visibility="public" scope="instance" brief="The method is called when the left mouse button is pressed." key="OnMouseLButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseLButtonUp" visibility="public" scope="instance" brief="The method is called when the left mouse button is released." key="OnMouseLButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseLButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseLButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonDown" visibility="public" scope="instance" brief="The method is called when the right mouse button is pressed." key="OnMouseRButtonDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseRButtonUp" visibility="public" scope="instance" brief="The method is called when the right mouse button is released." key="OnMouseRButtonUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseRButtonUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseRButtonUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnMouseWheelUp" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled up." key="OnMouseWheelUp.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelUp" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelUp(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="OnKeyboardLayoutChanged" visibility="public" scope="instance" brief="The method is called when the current keyboard layout is changed." key="OnKeyboardLayoutChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="OnKeyboardLayoutChanged" prefix="virtual" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnKeyboardLayoutChanged</sig></member><member name="OnMouseWheelDown" visibility="public" scope="instance" brief="The method is called when the mouse wheel is scrolled down." key="OnMouseWheelDown.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called when:[br]
- The mouse is over the window
OR[br]
- The mouse cursor is captured to this window.</p><p>Please note that the coordinates specified depends on capture mode.</p><p>If the mouse cursor is not captured and the event is called when the mouse is over the window, the row and column are relative to the
top-left corner of the window.</p><p>If the mouse cursor is captured, the row and column are specified in the [b]screen[/b] coordinates.</p></body><return /><param name="row" gray="false"><body><p>The zero-based index of the screen row.</p></body></param><param name="column" gray="false"><body><p>The zero-based index of the screen column.</p></body></param><param name="shift" gray="false"><body><p>The flag indicating that the shift key is pressed.</p></body></param><param name="ctrl" gray="false"><body><p>The flag indicating that the shift control is pressed.</p></body></param><param name="alt" gray="false"><body><p>The flag indicating that the alt control is pressed.</p></body></param><declaration language="cs" name="OnMouseWheelDown" prefix="virtual" suffix="" name-suffix="" return="void" params="int row, int column, bool shift, bool ctrl, bool alt" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnMouseWheelDown(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)</sig></member><member name="Exists" visibility="public" scope="instance" brief="The flag indicating that the window has been created as an user interface object." key="Exists.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Exists" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Exists</sig></member><member name="Parent" visibility="public" scope="instance" brief="The reference to the parent window." key="Parent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Parent" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Parent</sig></member><member name="Children" visibility="public" scope="instance" brief="The list of the children windows." key="Children.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Children" prefix="" suffix=" get;" name-suffix="" return="System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.conio.win.Window]Window[/clink]&gt;" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Children</sig></member><member name="Row" visibility="public" scope="instance" brief="The row of the row-left corner of the window relative to parent top-left corner." key="Row.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Row" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Row</sig></member><member name="Column" visibility="public" scope="instance" brief="The column of the row-left corner of the window relative to parent top-left corner." key="Column.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Column" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Column</sig></member><member name="Height" visibility="public" scope="instance" brief="The height of the window in rows." key="Height.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Height" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Height</sig></member><member name="Width" visibility="public" scope="instance" brief="The width of the window in columns." key="Width.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Width" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Width</sig></member><member name="Visible" visibility="public" scope="instance" brief="The flag indicating that the window is visible." key="Visible.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Visible" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Visible</sig></member><member name="childFromPos" visibility="public" scope="instance" brief="Returns the visible children window at the specified position." key="childFromPos.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method returns the children window of this window at the specified position or [c]null[/c] if
such window does not exist.</p></body><return /><param name="windowRow" gray="false"><body><p>The row relative to the top-left corner of this window.</p></body></param><param name="windowColumn" gray="false"><body><p>The column relative to the top-left corner of this window.</p></body></param><param name="visibleOnly" gray="false"><body><p>The flag indicating whether only the visible windows must be checked.</p></body></param><declaration language="cs" name="childFromPos" prefix="" suffix="" name-suffix="" return="[clink=gehtsoft.xce.conio.win.Window]Window[/clink]" params="int windowRow, int windowColumn, bool visibleOnly" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.childFromPos(System.Int32,System.Int32,System.Boolean)</sig></member><member name="OnScreenSizeChanged" visibility="public" scope="instance" brief="The method is called when the screen size is changed." key="OnScreenSizeChanged.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><body><p>The method is called for the top level windows only.</p></body><return /><param name="height" gray="false"><body><p>The new screen height in the rows.</p></body></param><param name="width" gray="false"><body><p>The new screen width in the row.</p></body></param><declaration language="cs" name="OnScreenSizeChanged" prefix="" suffix="" name-suffix="" return="void" params="int height, int width" custom="" /><sig>M:gehtsoft.xce.conio.win.Window.OnScreenSizeChanged(System.Int32,System.Int32)</sig></member><member name="WindowManager" visibility="public" scope="instance" brief="Gets the window manager used to create the window." key="WindowManager.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="WindowManager" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.conio.win.WindowManager]WindowManager[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.WindowManager</sig></member><member name="Valid" visibility="public" scope="instance" brief="Gets the flag indicating whether the content of the window is valid and should not be repainted." key="Valid.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.Window" class-name="Window" exclude-from-list="false"><return /><declaration language="cs" name="Valid" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.Window.Valid</sig></member><parent>[clink=gehtsoft.xce.conio.win.Dialog]gehtsoft.xce.conio.win.Dialog[/clink]</parent></class><group title="gehtsoft.xce.editor.command" key="gehtsoft.xce.editor.command" brief="Editor commands" in-group="gehtsoft.xce.editor" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted" /><class name="EditorCommandCollection" sig="T:gehtsoft.xce.editor.command.EditorCommandCollection" key="gehtsoft.xce.editor.command.EditorCommandCollection" brief="Collection of the editor commands" type="class" prefix="" in-group="gehtsoft.xce.editor.command" decl-name="EditorCommandCollection" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.command]gehtsoft.xce.editor.command[/clink].</p></body><member name="AddCommand" visibility="public" scope="instance" brief="Adds a new command into the command collection." key="AddCommand.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.EditorCommandCollection" class-name="EditorCommandCollection" exclude-from-list="false"><body><p>The method may be called only during an extension initialization.</p><p>If command with the existing name is added, the old command implementation will be replaced with a new
one. So, you may override the command in the extension.</p></body><return /><param name="command" gray="false"><body><p>An instance of the command to be added.</p></body></param><declaration language="cs" name="AddCommand" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.command.IEditorCommand]IEditorCommand[/clink] command" custom="" /><sig>M:gehtsoft.xce.editor.command.EditorCommandCollection.AddCommand(gehtsoft.xce.editor.command.IEditorCommand)</sig></member><member name="Item" visibility="public" scope="instance" brief="Finds an item by the name." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.EditorCommandCollection" class-name="EditorCommandCollection" exclude-from-list="false"><body><p>In case command is not found, the method returns [c]null[/c].</p></body><return /><param name="name" gray="false"><body><p>The name of the command.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.command.IEditorCommand]IEditorCommand[/clink]" params="string name" custom="" /><sig>P:gehtsoft.xce.editor.command.EditorCommandCollection.Item(System.String)</sig></member><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.editor.command.IEditorCommand]IEditorCommand[/clink]&gt;</parent><parent>System.Collections.IEnumerable</parent></class><class name="IDialogCommand" sig="T:gehtsoft.xce.editor.command.IDialogCommand" key="gehtsoft.xce.editor.command.IDialogCommand" brief="The interface of the command which can be executed inside the dialog." type="interface" prefix="" in-group="gehtsoft.xce.editor.command" decl-name="IDialogCommand" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.editor.command]gehtsoft.xce.editor.command[/clink].</p></body><member name="DialogExecute" visibility="public" scope="instance" brief="The method is called to executed the command in the dialog." key="DialogExecute.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.IDialogCommand" class-name="IDialogCommand" exclude-from-list="false"><return /><param name="application" gray="false"><body><p>The reference to the application.</p></body></param><param name="dialog" gray="false"><body><p>The currently active dialog.</p></body></param><param name="parameter" gray="false"><body><p>The command parameter.</p></body></param><declaration language="cs" name="DialogExecute" prefix="virtual" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.application.Application]gehtsoft.xce.editor.application.Application[/clink] application, [clink=gehtsoft.xce.editor.application.XceDialog]gehtsoft.xce.editor.application.XceDialog[/clink] dialog, string parameter" custom="" /><sig>M:gehtsoft.xce.editor.command.IDialogCommand.DialogExecute(gehtsoft.xce.editor.application.Application,gehtsoft.xce.editor.application.XceDialog,System.String)</sig></member></class><class name="IEditorCommand" sig="T:gehtsoft.xce.editor.command.IEditorCommand" key="gehtsoft.xce.editor.command.IEditorCommand" brief="The interface to an editor command." type="interface" prefix="" in-group="gehtsoft.xce.editor.command" decl-name="IEditorCommand" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.command]gehtsoft.xce.editor.command[/clink].</p></body><member name="Execute" visibility="public" scope="instance" brief="The method is called to execute the command." key="Execute.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.IEditorCommand" class-name="IEditorCommand" exclude-from-list="false"><return /><param name="application" gray="false"><body><p>The application.</p></body></param><param name="parameter" gray="false"><body><p>The command parameter. The value of this parameter may be [c]null[/c].</p></body></param><declaration language="cs" name="Execute" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.application.Application]gehtsoft.xce.editor.application.Application[/clink] application, string parameter" custom="" /><sig>M:gehtsoft.xce.editor.command.IEditorCommand.Execute(gehtsoft.xce.editor.application.Application,System.String)</sig></member><member name="IsChecked" visibility="public" scope="instance" brief="The method is called to find whether the command must be shown as &quot;checked&quot; in the menu." key="IsChecked.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.IEditorCommand" class-name="IEditorCommand" exclude-from-list="false"><return /><param name="application" gray="false"><body><p>The application.</p></body></param><param name="parameter" gray="false"><body><p>The command parameter. The value of this parameter may be [c]null[/c].</p></body></param><declaration language="cs" name="IsChecked" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.editor.application.Application]gehtsoft.xce.editor.application.Application[/clink] application, string parameter" custom="" /><sig>M:gehtsoft.xce.editor.command.IEditorCommand.IsChecked(gehtsoft.xce.editor.application.Application,System.String)</sig></member><member name="IsEnabled" visibility="public" scope="instance" brief="The method is called to find whether the command must be shown as &quot;disabled&quot; in the menu." key="IsEnabled.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.IEditorCommand" class-name="IEditorCommand" exclude-from-list="false"><return /><param name="application" gray="false"><body><p>The application.</p></body></param><param name="parameter" gray="false"><body><p>The command parameter. The value of this parameter may be [c]null[/c].</p></body></param><declaration language="cs" name="IsEnabled" prefix="" suffix="" name-suffix="" return="bool" params="[clink=gehtsoft.xce.editor.application.Application]gehtsoft.xce.editor.application.Application[/clink] application, string parameter" custom="" /><sig>M:gehtsoft.xce.editor.command.IEditorCommand.IsEnabled(gehtsoft.xce.editor.application.Application,System.String)</sig></member><member name="Name" visibility="public" scope="instance" brief="Get the name of the command." key="Name.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.command.IEditorCommand" class-name="IEditorCommand" exclude-from-list="false"><return /><declaration language="cs" name="Name" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.editor.command.IEditorCommand.Name</sig></member></class><group title="gehtsoft.xce.editor.configuration" key="gehtsoft.xce.editor.configuration" brief="Editor configuration" in-group="gehtsoft.xce.editor" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted" /><class name="FileTypeInfo" sig="T:gehtsoft.xce.editor.configuration.FileTypeInfo" key="gehtsoft.xce.editor.configuration.FileTypeInfo" brief="The information about the file type." type="class" prefix="" in-group="gehtsoft.xce.editor.configuration" decl-name="FileTypeInfo" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.configuration]gehtsoft.xce.editor.configuration[/clink].</p></body><member name="IsSpellCheckRegion" visibility="public" scope="instance" brief="Checks whether the syntax region is a spell check region." key="IsSpellCheckRegion.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><param name="region" gray="false"><body><p>The region to be checked.</p></body></param><declaration language="cs" name="IsSpellCheckRegion" prefix="" suffix="" name-suffix="" return="bool" params="gehtsoft.xce.colorer.SyntaxHighlighterRegion region" custom="" /><sig>M:gehtsoft.xce.editor.configuration.FileTypeInfo.IsSpellCheckRegion(gehtsoft.xce.colorer.SyntaxHighlighterRegion)</sig></member><member name="Encoding" visibility="public" scope="instance" brief="Gets the default encoding" key="Encoding.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="Encoding" prefix="" suffix=" get;" name-suffix="" return="System.Text.Encoding" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.Encoding</sig></member><member name="NeedSpellcheck" visibility="public" scope="instance" brief="Checks whether the file type requires the spell checking." key="NeedSpellcheck.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="NeedSpellcheck" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.NeedSpellcheck</sig></member><member name="IgnoreBOM" visibility="public" scope="instance" brief="Checks whether the begin of file encoding mark must be ignored." key="IgnoreBOM.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="IgnoreBOM" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.IgnoreBOM</sig></member><member name="TrimEolSpace" visibility="public" scope="instance" brief="Checks whether end-of-line whitespace must be removed for a file." key="TrimEolSpace.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="TrimEolSpace" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.TrimEolSpace</sig></member><member name="TabSize" visibility="public" scope="instance" brief="Returns the tabulation size for a file." key="TabSize.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="TabSize" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.TabSize</sig></member><member name="AutoIdent" visibility="public" scope="instance" brief="Checks whether the file must be auto-indented when enter is pressed." key="AutoIdent.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="AutoIdent" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.AutoIdent</sig></member><member name="DefaultSpellChecker" visibility="public" scope="instance" brief="Returns the name of the default spell-checker." key="DefaultSpellChecker.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.FileTypeInfo" class-name="FileTypeInfo" exclude-from-list="false"><return /><declaration language="cs" name="DefaultSpellChecker" prefix="" suffix=" get;" name-suffix="" return="string" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.FileTypeInfo.DefaultSpellChecker</sig></member></class><class name="XceColorScheme" sig="T:gehtsoft.xce.editor.configuration.XceColorScheme" key="gehtsoft.xce.editor.configuration.XceColorScheme" brief="The editor color schema." type="class" prefix="" in-group="gehtsoft.xce.editor.configuration" decl-name="XceColorScheme" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.configuration]gehtsoft.xce.editor.configuration[/clink].</p></body><member name="MenuItem" visibility="public" scope="instance" brief="" key="MenuItem.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuItem" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuItem</sig></member><member name="MenuItemSelected" visibility="public" scope="instance" brief="" key="MenuItemSelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuItemSelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuItemSelected</sig></member><member name="MenuDisabledItem" visibility="public" scope="instance" brief="" key="MenuDisabledItem.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuDisabledItem" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuDisabledItem</sig></member><member name="MenuDisabledItemSelected" visibility="public" scope="instance" brief="" key="MenuDisabledItemSelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuDisabledItemSelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuDisabledItemSelected</sig></member><member name="MenuHotKey" visibility="public" scope="instance" brief="" key="MenuHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuHotKey</sig></member><member name="MenuHotKeySelected" visibility="public" scope="instance" brief="" key="MenuHotKeySelected.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="MenuHotKeySelected" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.MenuHotKeySelected</sig></member><member name="DialogBorder" visibility="public" scope="instance" brief="" key="DialogBorder.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogBorder" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogBorder</sig></member><member name="DialogItemLabelColor" visibility="public" scope="instance" brief="" key="DialogItemLabelColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemLabelColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemLabelColor</sig></member><member name="DialogItemLabelHotKey" visibility="public" scope="instance" brief="" key="DialogItemLabelHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemLabelHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemLabelHotKey</sig></member><member name="DialogItemCheckBoxColor" visibility="public" scope="instance" brief="" key="DialogItemCheckBoxColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColor</sig></member><member name="DialogItemCheckBoxColorFocused" visibility="public" scope="instance" brief="" key="DialogItemCheckBoxColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColorFocused</sig></member><member name="DialogItemCheckBoxHotKey" visibility="public" scope="instance" brief="" key="DialogItemCheckBoxHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxHotKey</sig></member><member name="DialogItemCheckBoxHotKeyFocused" visibility="public" scope="instance" brief="" key="DialogItemCheckBoxHotKeyFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxHotKeyFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxHotKeyFocused</sig></member><member name="DialogItemCheckBoxColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemCheckBoxColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemCheckBoxColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemCheckBoxColorDisabled</sig></member><member name="DialogItemButtonColor" visibility="public" scope="instance" brief="" key="DialogItemButtonColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColor</sig></member><member name="DialogItemButtonColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemButtonColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColorDisabled</sig></member><member name="DialogItemButtonColorFocused" visibility="public" scope="instance" brief="" key="DialogItemButtonColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonColorFocused</sig></member><member name="DialogItemButtonHotKey" visibility="public" scope="instance" brief="" key="DialogItemButtonHotKey.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonHotKey" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonHotKey</sig></member><member name="DialogItemButtonHotKeyFocused" visibility="public" scope="instance" brief="" key="DialogItemButtonHotKeyFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemButtonHotKeyFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemButtonHotKeyFocused</sig></member><member name="DialogItemEditColor" visibility="public" scope="instance" brief="" key="DialogItemEditColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColor</sig></member><member name="DialogItemEditColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemEditColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorDisabled</sig></member><member name="DialogItemEditColorFocused" visibility="public" scope="instance" brief="" key="DialogItemEditColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditColorFocused</sig></member><member name="DialogItemEditSelection" visibility="public" scope="instance" brief="" key="DialogItemEditSelection.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditSelection" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditSelection</sig></member><member name="DialogItemEditSelectionFocused" visibility="public" scope="instance" brief="" key="DialogItemEditSelectionFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemEditSelectionFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemEditSelectionFocused</sig></member><member name="DialogItemListBoxColor" visibility="public" scope="instance" brief="" key="DialogItemListBoxColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColor</sig></member><member name="DialogItemListBoxColorDisabled" visibility="public" scope="instance" brief="" key="DialogItemListBoxColorDisabled.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColorDisabled" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColorDisabled</sig></member><member name="DialogItemListBoxColorFocused" visibility="public" scope="instance" brief="" key="DialogItemListBoxColorFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxColorFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxColorFocused</sig></member><member name="DialogItemListBoxSelection" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelection.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelection" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelection</sig></member><member name="DialogItemListBoxSelectionFocused" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionFocused.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionFocused" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.DialogItemListBoxSelectionFocused</sig></member><member name="TextColor" visibility="public" scope="instance" brief="" key="TextColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="TextColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.TextColor</sig></member><member name="CurrentLineTextColor" visibility="public" scope="instance" brief="" key="CurrentLineTextColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="CurrentLineTextColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.CurrentLineTextColor</sig></member><member name="BlockTextColor" visibility="public" scope="instance" brief="" key="BlockTextColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="BlockTextColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.BlockTextColor</sig></member><member name="CurrentLineBlockTextColor" visibility="public" scope="instance" brief="" key="CurrentLineBlockTextColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="CurrentLineBlockTextColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.CurrentLineBlockTextColor</sig></member><member name="StatusLineColor" visibility="public" scope="instance" brief="" key="StatusLineColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="StatusLineColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.StatusLineColor</sig></member><member name="SpellCheckErrorColor" visibility="public" scope="instance" brief="" key="SpellCheckErrorColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="SpellCheckErrorColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.SpellCheckErrorColor</sig></member><member name="PairHighlightColor" visibility="public" scope="instance" brief="" key="PairHighlightColor.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="PairHighlightColor" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.PairHighlightColor</sig></member><member name="SearchHighlight" visibility="public" scope="instance" brief="" key="SearchHighlight.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceColorScheme" class-name="XceColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="SearchHighlight" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceColorScheme.SearchHighlight</sig></member><member name="DialogItemListBoxSelectionHighlighted" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionHighlighted.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionHighlighted" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionHighlighted</sig></member><member name="DialogItemListBoxSelectionFocusedHighlighted" visibility="public" scope="instance" brief="" key="DialogItemListBoxSelectionFocusedHighlighted.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.conio.win.IColorScheme" class-name="IColorScheme" exclude-from-list="false"><return /><declaration language="cs" name="DialogItemListBoxSelectionFocusedHighlighted" prefix="" suffix=" get;" name-suffix="" return="short" params="" custom="" /><sig>P:gehtsoft.xce.conio.win.IColorScheme.DialogItemListBoxSelectionFocusedHighlighted</sig></member><parent>gehtsoft.xce.conio.win.IColorScheme</parent></class><class name="XceConfiguration" sig="T:gehtsoft.xce.editor.configuration.XceConfiguration" key="gehtsoft.xce.editor.configuration.XceConfiguration" brief="The editor configuration file." type="class" prefix="" in-group="gehtsoft.xce.editor.configuration" decl-name="XceConfiguration" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.configuration]gehtsoft.xce.editor.configuration[/clink].</p></body><member name="Item" visibility="public" scope="instance" brief="Returns the profile section of the configuration file." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceConfiguration" class-name="XceConfiguration" exclude-from-list="false"><body><p>If the profile section does not exist, [c]null[/c] is returned.</p></body><return /><param name="name" gray="false"><body><p>The section name.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="gehtsoft.xce.configuration.ProfileSection" params="string name" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceConfiguration.Item(System.String)</sig></member><member name="PersistentBlock" visibility="public" scope="instance" brief="The flag indicating the persistent block mode." key="PersistentBlock.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.configuration.XceConfiguration" class-name="XceConfiguration" exclude-from-list="false"><return /><declaration language="cs" name="PersistentBlock" prefix="" suffix=" get;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.configuration.XceConfiguration.PersistentBlock</sig></member></class><group title="gehtsoft.xce.editor" key="gehtsoft.xce.editor" brief="Classes and namespaces of the XCE editor application" in-group="index" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted" /><group title="gehtsoft.xce.editor.textwindow" key="gehtsoft.xce.editor.textwindow" brief="Text window." in-group="gehtsoft.xce.editor" sort-articles="no" transform="def" sort-groups="no" sort-classes="yes" import-hhc="" import-hhk="" briefless="false" order="sorted" /><class name="TextWindow" sig="T:gehtsoft.xce.editor.textwindow.TextWindow" key="gehtsoft.xce.editor.textwindow.TextWindow" brief="Text window." type="class" prefix="" in-group="gehtsoft.xce.editor.textwindow" decl-name="TextWindow" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.textwindow]gehtsoft.xce.editor.textwindow[/clink].</p></body><member name="EnsureCursorVisible" visibility="public" scope="instance" brief="The method scrolls the window to make the cursor caret visible." key="EnsureCursorVisible.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="EnsureCursorVisible" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.EnsureCursorVisible</sig></member><member name="DeselectBlock" visibility="public" scope="instance" brief="Removes the current block selection." key="DeselectBlock.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="DeselectBlock" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.DeselectBlock</sig></member><member name="StartBlock" visibility="public" scope="instance" brief="Starts a block selection." key="StartBlock.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="type" gray="false"><body><p>A type of the block.</p></body></param><param name="row" gray="false"><body><p>The first line of the block.</p></body></param><param name="column" gray="false"><body><p>The first column of the block.</p></body></param><declaration language="cs" name="StartBlock" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.textwindow.TextWindowBlock]TextWindowBlock[/clink] type, int row, int column" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.StartBlock(gehtsoft.xce.editor.textwindow.TextWindowBlock,System.Int32,System.Int32)</sig></member><member name="EndBlock" visibility="public" scope="instance" brief="Ends a block selection." key="EndBlock.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="row" gray="false"><body><p>The last line of the block.</p></body></param><param name="column" gray="false"><body><p>The last column of the block.</p></body></param><declaration language="cs" name="EndBlock" prefix="" suffix="" name-suffix="" return="void" params="int row, int column" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.EndBlock(System.Int32,System.Int32)</sig></member><member name="Stroke" visibility="public" scope="instance" brief="Enters a character(s) at the current cursor position." key="Stroke.1" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="c" gray="false"><body><p>A character to enter.</p></body></param><param name="count" gray="false"><body><p>A number of the characters to enter.</p></body></param><declaration language="cs" name="Stroke" prefix="" suffix="" name-suffix="" return="void" params="char c, int count" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char,System.Int32)</sig></member><member name="Stroke" visibility="public" scope="instance" brief="Enters a text from a character array at the current cursor position." key="Stroke.2" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="c" gray="false"><body><p>A character array to be entered.</p></body></param><param name="from" gray="false"><body><p>The index of the first character to be entered.</p></body></param><param name="count" gray="false"><body><p>The number of the characters to be entered.</p></body></param><declaration language="cs" name="Stroke" prefix="" suffix="" name-suffix="" return="void" params="char[] c, int from, int count" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char[],System.Int32,System.Int32)</sig></member><member name="Stroke" visibility="public" scope="instance" brief="Enters a text from a string at the current cursor position." key="Stroke.3" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="c" gray="false"><body><p>A string to be entered.</p></body></param><param name="from" gray="false"><body><p>The index of the first character to be entered.</p></body></param><param name="count" gray="false"><body><p>The number of the characters to be entered.</p></body></param><declaration language="cs" name="Stroke" prefix="" suffix="" name-suffix="" return="void" params="string c, int from, int count" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.String,System.Int32,System.Int32)</sig></member><member name="DeleteAtCursor" visibility="public" scope="instance" brief="Deletes the specified number of the characters at the cursor position." key="DeleteAtCursor.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="count" gray="false"><body><p>The number of the characters to be deleted.</p></body></param><declaration language="cs" name="DeleteAtCursor" prefix="" suffix="" name-suffix="" return="void" params="int count" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.DeleteAtCursor(System.Int32)</sig></member><member name="DeleteLineAtCursor" visibility="public" scope="instance" brief="Deletes the line at cursor position." key="DeleteLineAtCursor.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="DeleteLineAtCursor" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.DeleteLineAtCursor</sig></member><member name="JoinNextLineAtCursor" visibility="public" scope="instance" brief="Joins the next line and the the line at the cursor position." key="JoinNextLineAtCursor.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="JoinNextLineAtCursor" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.JoinNextLineAtCursor</sig></member><member name="SplitLineAtCursor" visibility="public" scope="instance" brief="Splits the line at cursor position." key="SplitLineAtCursor.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="SplitLineAtCursor" prefix="" suffix="" name-suffix="" return="bool" params="" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.SplitLineAtCursor</sig></member><member name="BlockType" visibility="public" scope="instance" brief="Gets the type of the currently selected block." key="BlockType.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BlockType" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.textwindow.TextWindowBlock]TextWindowBlock[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.BlockType</sig></member><member name="BlockLineStart" visibility="public" scope="instance" brief="Gets the first line of the currently selected block." key="BlockLineStart.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BlockLineStart" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.BlockLineStart</sig></member><member name="BlockLineEnd" visibility="public" scope="instance" brief="Gets the last line of the currently selected block." key="BlockLineEnd.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BlockLineEnd" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.BlockLineEnd</sig></member><member name="BlockColumnStart" visibility="public" scope="instance" brief="Gets the first column of the currently selected block." key="BlockColumnStart.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BlockColumnStart" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.BlockColumnStart</sig></member><member name="BlockColumnEnd" visibility="public" scope="instance" brief="Gets the last column of the currently selected block." key="BlockColumnEnd.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BlockColumnEnd" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.BlockColumnEnd</sig></member><member name="Text" visibility="public" scope="instance" brief="Gets the text buffer." key="Text.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><body><p>Avoid modification of the text directly in the buffer. Such modifications won't affect the currently
selected block or cursor positions. Use the methods of the [c]TextWindow[/c] class instead or call an appropriate
command.</p></body><return /><declaration language="cs" name="Text" prefix="" suffix=" get;" name-suffix="" return="gehtsoft.xce.text.XceFileBuffer" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.Text</sig></member><member name="Highlighter" visibility="public" scope="instance" brief="Gets an instance of the syntax highlighted." key="Highlighter.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="Highlighter" prefix="" suffix=" get;" name-suffix="" return="gehtsoft.xce.colorer.SyntaxHighlighter" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.Highlighter</sig></member><member name="CursorRow" visibility="public" scope="instance" brief="Gets or sets the cursor line." key="CursorRow.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="CursorRow" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.CursorRow</sig></member><member name="CursorColumn" visibility="public" scope="instance" brief="Gets or sets the cursor column." key="CursorColumn.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="CursorColumn" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.CursorColumn</sig></member><member name="TopRow" visibility="public" scope="instance" brief="Gets or sets the first visible line." key="TopRow.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="TopRow" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.TopRow</sig></member><member name="TopColumn" visibility="public" scope="instance" brief="Gets or sets the first visible column." key="TopColumn.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="TopColumn" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.TopColumn</sig></member><member name="InsertMode" visibility="public" scope="instance" brief="Gets or sets the insert mode." key="InsertMode.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><body><p>If the insert mode is [c]true[/c] the stroked text will be inserted at the cursor position.
If the insert mode is [c]false[/c] the stroked text will be overwrite the text at the cursor position.</p></body><return /><declaration language="cs" name="InsertMode" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.InsertMode</sig></member><member name="Spellchecker" visibility="public" scope="instance" brief="Gets an instance of the spellchecker associated with the window." key="Spellchecker.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="Spellchecker" prefix="" suffix=" get;" name-suffix="" return="gehtsoft.xce.spellcheck.ISpellchecker" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.Spellchecker</sig></member><member name="BeforeSaveWindowEvent" visibility="public" scope="instance" brief="Event fired right before the file is saved." key="BeforeSaveWindowEvent.0" type="method" transform="def" custom="event" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BeforeSaveWindowEvent" prefix="event" suffix="" name-suffix="" return="gehtsoft.xce.editor.application.BeforeSaveWindowHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.BeforeSaveWindowHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="[link=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/link] window" custom="" /><sig>E:gehtsoft.xce.editor.textwindow.TextWindow.BeforeSaveWindowEvent</sig></member><member name="AfterPaintWindowEvent" visibility="public" scope="instance" brief="Event fired every time when paining of the window has been finished." key="AfterPaintWindowEvent.0" type="method" transform="def" custom="event" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="AfterPaintWindowEvent" prefix="event" suffix="" name-suffix="" return="gehtsoft.xce.editor.application.AfterPaintWindowHook" params="" custom="" /><declaration language="cs" name="gehtsoft.xce.editor.application.AfterPaintWindowHook" prefix="public delegate" suffix="" name-suffix="" return="void" params="[link=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/link] window, [clink=gehtsoft.xce.conio.Canvas]gehtsoft.xce.conio.Canvas[/clink] canvas" custom="" /><sig>E:gehtsoft.xce.editor.textwindow.TextWindow.AfterPaintWindowEvent</sig></member><member name="Stroke" visibility="public" scope="instance" brief="Strokes one character" key="Stroke.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="c" gray="false"><body><p>The character to put into the current cursor position.</p></body></param><declaration language="cs" name="Stroke" prefix="" suffix="" name-suffix="" return="void" params="char c" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.Stroke(System.Char)</sig></member><member name="BeforeModify" visibility="public" scope="instance" brief="The method shall be called before the direct modification of the text buffer content." key="BeforeModify.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="BeforeModify" prefix="" suffix="" name-suffix="" return="void" params="" custom="" /><sig>M:gehtsoft.xce.editor.textwindow.TextWindow.BeforeModify</sig></member><member name="HighlightRangePosition" visibility="public" scope="instance" brief="Gets or sets the position of the &quot;search highlighted&quot; text." key="HighlightRangePosition.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><body><p>The value is the offset of the highlighted text in the text buffer.</p><p>When there is no highlight the property has -1 value.</p></body><return /><declaration language="cs" name="HighlightRangePosition" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.HighlightRangePosition</sig></member><member name="HighlightRangeLength" visibility="public" scope="instance" brief="Gets or sets the length of the &quot;search highlighted&quot; text." key="HighlightRangeLength.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><body><p>When there is no highlight the property has -1 value.</p></body><return /><declaration language="cs" name="HighlightRangeLength" prefix="" suffix=" get; set;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.HighlightRangeLength</sig></member><member name="SaveRequired" visibility="public" scope="instance" brief="Gets or sets the flag indicating that the file must be saved if it is changed when the window is being closed." key="SaveRequired.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><declaration language="cs" name="SaveRequired" prefix="" suffix=" get; set;" name-suffix="" return="bool" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.SaveRequired</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets a character by line and column." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><return /><param name="row" gray="false" /><param name="column" gray="false" /><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="char" params="int row, int column" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.Item(System.Int32,System.Int32)</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets or sets the custom object associated with the window." key="Item.1" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><body><p>To remove the associated object with the name specified use [c]null[/c] value.</p></body><return /><param name="data" gray="false"><body><p>The name of the object.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get; set;" name-suffix="" return="object" params="string data" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.Item(System.String)</sig></member><member name="Id" visibility="public" scope="instance" brief="The window identifier as it is shown in the status line." key="Id.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindow" class-name="TextWindow" exclude-from-list="false"><body><p>The identifier is unique. The identifier remains the same until any file is opened or closed. After these operations
the identifiers of all windows can be changed.</p></body><return /><declaration language="cs" name="Id" prefix="" suffix=" get;" name-suffix="" return="char" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindow.Id</sig></member><parent>gehtsoft.xce.conio.win.Window</parent></class><class name="TextWindowBlock" sig="T:gehtsoft.xce.editor.textwindow.TextWindowBlock" key="gehtsoft.xce.editor.textwindow.TextWindowBlock" brief="Type of the block." type="enum" prefix="" in-group="gehtsoft.xce.editor.textwindow" decl-name="TextWindowBlock" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.
The namespace is [clink=gehtsoft.xce.editor.textwindow]gehtsoft.xce.editor.textwindow[/clink].</p></body><member name="None" visibility="public" scope="class" brief="" key="None.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindowBlock" class-name="TextWindowBlock" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.editor.textwindow.TextWindowBlock.None</sig></member><member name="Stream" visibility="public" scope="class" brief="" key="Stream.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindowBlock" class-name="TextWindowBlock" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Stream</sig></member><member name="Line" visibility="public" scope="class" brief="" key="Line.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindowBlock" class-name="TextWindowBlock" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Line</sig></member><member name="Box" visibility="public" scope="class" brief="" key="Box.0" type="field" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindowBlock" class-name="TextWindowBlock" exclude-from-list="false"><return /><sig>F:gehtsoft.xce.editor.textwindow.TextWindowBlock.Box</sig></member></class><class name="TextWindowCollection" sig="T:gehtsoft.xce.editor.textwindow.TextWindowCollection" key="gehtsoft.xce.editor.textwindow.TextWindowCollection" brief="The collection of the text windows." type="class" prefix="" in-group="gehtsoft.xce.editor.textwindow" decl-name="TextWindowCollection" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.textwindow]gehtsoft.xce.editor.textwindow[/clink].</p></body><member name="Count" visibility="public" scope="instance" brief="Gets the number of the windows." key="Count.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindowCollection" class-name="TextWindowCollection" exclude-from-list="false"><return /><declaration language="cs" name="Count" prefix="" suffix=" get;" name-suffix="" return="int" params="" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindowCollection.Count</sig></member><member name="Item" visibility="public" scope="instance" brief="Gets the window by its index." key="Item.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.textwindow.TextWindowCollection" class-name="TextWindowCollection" exclude-from-list="false"><return /><param name="index" gray="false"><body><p>The zero-based index of the window.</p></body></param><declaration language="cs" name="this" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.textwindow.TextWindow]TextWindow[/clink]" params="int index" custom="" /><sig>P:gehtsoft.xce.editor.textwindow.TextWindowCollection.Item(System.Int32)</sig></member><parent>System.Collections.Generic.IEnumerable&lt;[clink=gehtsoft.xce.editor.textwindow.TextWindow]TextWindow[/clink]&gt;</parent><parent>System.Collections.IEnumerable</parent></class><class name="BlockContent" sig="T:gehtsoft.xce.editor.util.BlockContent" key="gehtsoft.xce.editor.util.BlockContent" brief="" type="class" prefix="" in-group="gehtsoft.xce.editor.util" decl-name="BlockContent" sort="true" class-name-in-key="true" transform="def"><body><p>The type defined in the [c]gehtsoft.xce.editor.dll[/c] assembly.</p><p>The namespace is [clink=gehtsoft.xce.editor.util]gehtsoft.xce.editor.util[/clink].</p></body><member name="BlockContent" visibility="public" scope="instance" brief="Constructs a stream block content using the text specified." key="BlockContent.1" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.util.BlockContent" class-name="BlockContent" exclude-from-list="false"><return /><param name="text" gray="false"><body><p>The text of the block content.</p></body></param><param name="tabLength" gray="false"><body><p>The length of the tabulation in positions.</p></body></param><declaration language="cs" name="BlockContent" prefix="" suffix="" name-suffix="" return="" params="string text, int tabLength" custom="" /><sig>M:gehtsoft.xce.editor.util.BlockContent.#ctor(System.String,System.Int32)</sig></member><member name="BlockContent" visibility="public" scope="instance" brief="Constructs a block content using the currently selected block in the window specified." key="BlockContent.0" type="constructor" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.util.BlockContent" class-name="BlockContent" exclude-from-list="false"><return /><param name="w" gray="false"><body><p>The window to gather the block from.</p></body></param><declaration language="cs" name="BlockContent" prefix="" suffix="" name-suffix="" return="" params="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink] w" custom="" /><sig>M:gehtsoft.xce.editor.util.BlockContent.#ctor(gehtsoft.xce.editor.textwindow.TextWindow)</sig></member><member name="Put" visibility="public" scope="instance" brief="Puts the block content into the window specified." key="Put.0" type="method" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.util.BlockContent" class-name="BlockContent" exclude-from-list="false"><return /><param name="w" gray="false"><body><p>The window to put the block content.</p></body></param><param name="row, column" gray="false"><body><p>The position to put the block at.</p></body></param><declaration language="cs" name="Put" prefix="" suffix="" name-suffix="" return="void" params="[clink=gehtsoft.xce.editor.textwindow.TextWindow]gehtsoft.xce.editor.textwindow.TextWindow[/clink] w, int row, int column" custom="" /><sig>M:gehtsoft.xce.editor.util.BlockContent.Put(gehtsoft.xce.editor.textwindow.TextWindow,System.Int32,System.Int32)</sig></member><member name="Buffer" visibility="public" scope="instance" brief="The content of the block." key="Buffer.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.util.BlockContent" class-name="BlockContent" exclude-from-list="false"><return /><declaration language="cs" name="Buffer" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.text.XceFileBuffer]gehtsoft.xce.text.XceFileBuffer[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.util.BlockContent.Buffer</sig></member><member name="Type" visibility="public" scope="instance" brief="Gets the type of the block." key="Type.0" type="property" transform="def" custom="" divisor="." class="gehtsoft.xce.editor.util.BlockContent" class-name="BlockContent" exclude-from-list="false"><return /><declaration language="cs" name="Type" prefix="" suffix=" get;" name-suffix="" return="[clink=gehtsoft.xce.editor.textwindow.TextWindowBlock]gehtsoft.xce.editor.textwindow.TextWindowBlock[/clink]" params="" custom="" /><sig>P:gehtsoft.xce.editor.util.BlockContent.Type</sig></member><parent>System.IDisposable</parent></class></root>